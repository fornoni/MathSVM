(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    871011,      18464]
NotebookOptionsPosition[    835683,      17904]
NotebookOutlinePosition[    841749,      18040]
CellTagsIndexPosition[    840869,      18013]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", " ", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"{", 
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MathematicaSVM`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "//", "Quiet"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
     RowBox[{"loadData", " ", "[", "\"\<banana.mat\>\"", "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellOpen->False,
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"5f6e3166-6362-45df-ae17-5dfc7098e067"],

Cell[BoxData["\<\"SVM Package Loaded\"\>"], "Print",
 CellOpen->False,
 CellChangeTimes->{3.637659327748053*^9, 3.6376596475574417`*^9, 
  3.6376713955967703`*^9},ExpressionUUID->"3d924dca-edc6-4caf-940e-\
1bf7278d5846"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A hands-on introduction to Support Vector Machines", "Title",
 CellChangeTimes->{{3.41783940236821*^9, 3.4178394062050323`*^9}, {
   3.435291780155868*^9, 3.43529178092163*^9}, {3.468557035897552*^9, 
   3.4685570550125637`*^9}, 3.5442382141880083`*^9, 3.544238351303344*^9, {
   3.577353300017419*^9, 3.5773533139229527`*^9}, {3.5773537360629873`*^9, 
   3.577353752656562*^9}, {3.577360010706706*^9, 3.577360032241975*^9}, {
   3.5773623107856827`*^9, 3.5773623335992813`*^9}, {3.577366518781762*^9, 
   3.5773665255746326`*^9}, {3.6006674743663063`*^9, 3.600667515305976*^9}, {
   3.6006724810398617`*^9, 3.600672484136705*^9}, {3.60067811062516*^9, 
   3.600678199962726*^9}, {3.600678268573207*^9, 3.600678294242147*^9}, 
   3.601298617085761*^9, {3.6074354021223297`*^9, 
   3.607435406715845*^9}},ExpressionUUID->"44c5b680-9a4b-4aee-b511-\
cbcf0059a6e7"],

Cell[" This file is part of the MathematicaSVM Software", "Text",
 CellChangeTimes->{{3.6375914910152884`*^9, 3.637591493596785*^9}, 
   3.637593842609106*^9},
 TextAlignment->Center,ExpressionUUID->"1b4a5b8b-1f1d-4b03-a44b-1674ee239cdb"],

Cell["Feb 3, 2014", "SmallText",
 CellChangeTimes->{{3.511439683975197*^9, 3.5114397034510307`*^9}, {
  3.544238057548271*^9, 3.54423806068119*^9}, {3.563082604004828*^9, 
  3.5630826078039503`*^9}, {3.5762506934144382`*^9, 3.576250700712188*^9}, {
  3.577360043793089*^9, 3.577360047111844*^9}, {3.587640689382739*^9, 
  3.5876406916604958`*^9}, {3.600522942653962*^9, 3.600522947743492*^9}, {
  3.600675320404994*^9, 
  3.6006753342597103`*^9}},ExpressionUUID->"a7470c8f-0ebf-4509-8af1-\
ade08bc97c7e"],

Cell[CellGroupData[{

Cell["Marco Fornoni", "Subsubtitle",
 CellChangeTimes->{{3.577360037879161*^9, 
  3.577360051866151*^9}},ExpressionUUID->"32aae7f1-b7c1-47d2-83af-\
ef83930faf20"],

Cell[CellGroupData[{

Cell["Abstract", "Subsection",
 CellChangeTimes->{{3.4685570921061563`*^9, 
  3.468557093653076*^9}},ExpressionUUID->"85d297b5-5c28-49e4-bad0-\
3eb5a7d6af55"],

Cell[TextData[{
 "Nowadays computers can be trained to perform a variety of tasks, \
traditionally associated with intelligence. Recognizing people, classifying \
webpages, recognizing human speech, performing online trading, are just a few \
examples of tasks that can be performed by machines. \nBehind this very \
diverse set of abilities there is a branch of ",
 StyleBox["computer science",
  FontSlant->"Italic"],
 " and ",
 StyleBox["artificial intelligence",
  FontSlant->"Italic"],
 ", called ",
 StyleBox["machine learning",
  FontSlant->"Italic"],
 ", which deals with the problem of constructing and studying systems able to \
learn from data. In a ",
 StyleBox["supervised",
  FontSlant->"Italic"],
 " machine learning setting, problems are directly specified by sets of input \
data, with associated desired outputs. The goal of a learning machine is then \
to learn a mathematical model able to reproduce the desired output on the \
training data, while preserving ",
 StyleBox["generalization",
  FontSlant->"Italic"],
 " abilities on unseen data. This approach results to be very useful when the \
functional dependency of the output w.r.t. the input is not known, or is too \
complex to be modeled exactly.\n\nOne of the most successful machine learning \
tools that is widely used to solve classification and regression problems is \
called ",
 StyleBox["Support Vector Machine (SVM)",
  FontSlant->"Italic"],
 " ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "cf8c1a3f-da1d-4e2d-a76d-1579ea286876"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ".  The key assumption of this model is that training and testing samples \
are generated i.i.d. according to an unknown but fixed distribution. Given a \
set of i.i.d.  training instances ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox[
          SubscriptBox["x", 
           StyleBox["1",
            FontWeight->"Plain"]],
          FontWeight->"Bold"], ",", 
         SubscriptBox["y", "1"]}], ")"}], ",", 
       RowBox[{
        SubscriptBox[
         RowBox[{
          StyleBox["(", "InlineFormula"], 
          RowBox[{
           StyleBox[
            SubscriptBox["x", 
             StyleBox["2",
              FontWeight->"Plain"]], "InlineFormula",
            FontWeight->"Bold"], 
           StyleBox[",", "InlineFormula"], 
           SubscriptBox["y", "2"]}], 
          StyleBox[")", "InlineFormula"]}], 
         RowBox[{",", "\[Ellipsis]", ","}]], 
        RowBox[{"(", 
         RowBox[{
          StyleBox[
           SubscriptBox["x", 
            StyleBox["n",
             FontWeight->"Plain"]],
           FontWeight->"Bold"], ",", 
          SubscriptBox["y", "n"]}], ")"}]}]}], "}"}], "InlineFormula"], ",", 
    " ", 
    RowBox[{
     RowBox[{"where", " ", 
      StyleBox[
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "InlineFormula"]}], 
     StyleBox["\[Element]", "InlineFormula"], 
     StyleBox["X", "InlineFormula"], 
     StyleBox["\[Subset]", "InlineFormula"], 
     StyleBox[
      SuperscriptBox["\[DoubleStruckCapitalR]", "d"], "InlineFormula"]}]}], 
   TraditionalForm]], "Text",ExpressionUUID->
  "d6a25447-c2a5-46af-ab09-75d7689043a8"],
 " is an input and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["y", "i"], "\[Element]", "\[DoubleStruckCapitalR]"}], 
    "InlineFormula"], TraditionalForm]],ExpressionUUID->
  "7d38621c-6472-47cf-acc1-27a3184e0b66"],
 " is the desired output, a SVM predicts using a real valued function ",
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], 
     StyleBox["X", "InlineFormula",
      FontSlant->"Italic"]}], 
    StyleBox["\[Subset]", "InlineFormula",
     FontSlant->"Italic"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["\[DoubleStruckCapitalR]", "InlineFormula",
       FontSlant->"Italic"], "d"], 
     StyleBox["\[RightArrow]", "InlineFormula"], 
     StyleBox["\[DoubleStruckCapitalR]", "InlineFormula"]}]}], 
   TraditionalForm]], "InlineFormula",ExpressionUUID->
  "86d63554-974d-40b0-b713-35bbc1edfbae"], "InlineFormula"],
 ", parametrized by a vector ",
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}], TraditionalForm]], 
  "InlineFormula",
  FontSlant->"Italic",ExpressionUUID->"d0d34db2-0e91-4b35-9d50-30e05aa6937c"],
   "InlineFormula"],
 StyleBox[" and a scalar ", "InlineFormula"],
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", "\[DoubleStruckCapitalR]"}], TraditionalForm]],
  ExpressionUUID->"44fb6d5d-82d0-44b1-80db-1d1ac08a5830"],
 " (",
 StyleBox["bias",
  FontSlant->"Italic"],
 "). This prediction function ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"]}]], "InlineFormula"], TraditionalForm]],
  ExpressionUUID->"49958bec-fd2e-4a5c-8957-14509eba7da6"],
 " is chosen to maximize a quantity called ",
 StyleBox["margin",
  FontSlant->"Italic"],
 " and it is linear. ",
 StyleBox["Kernel methods",
  FontSlant->"Italic"],
 " can be used to extend SVM to the non-linear setting, without modifing the \
analysis and implementation of the method.\n\nThe goal of this notebook is to \
present the very basic theory of linear classifiers, max-margin classifiers \
and Support Vector Machines and to explore the use of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve the optimization problems that arise",
 StyleBox[".", "DisplayFormula"],
 " Following the presentation in ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "b0b7376f-99d9-46bf-b147-3a372b858e79"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ", this notebook explicitly derives, implements and compare several \
classifiers, demonstrating them on synthetic 2D-data generated by the user, \
with visualizations involving direct hyper-parameters manipulations. It can \
thus be considered a hands-on introduction to the topic."
}], "Text",
 CellChangeTimes->{{3.4178394136694803`*^9, 3.417839428740713*^9}, {
   3.435291790854022*^9, 3.435291847713936*^9}, {3.435291966315791*^9, 
   3.435291977441812*^9}, {3.435292037892099*^9, 3.43529205339745*^9}, {
   3.435292093987976*^9, 3.435292116665512*^9}, {3.43529216806837*^9, 
   3.435292168632934*^9}, {3.468557118215548*^9, 3.46855718512158*^9}, {
   3.46855721597228*^9, 3.468557850172822*^9}, 3.4685583296453753`*^9, {
   3.5114393871615458`*^9, 3.5114394394283047`*^9}, 3.5442380739013147`*^9, 
   3.54423811926757*^9, 3.544238181361961*^9, {3.544238219239573*^9, 
   3.544238219600222*^9}, {3.563082613137628*^9, 3.563082617149609*^9}, {
   3.576250708729867*^9, 3.576250710544142*^9}, {3.576250746308978*^9, 
   3.5762507601422777`*^9}, {3.577353720714952*^9, 3.5773537245951014`*^9}, {
   3.577353755031596*^9, 3.577353830618239*^9}, {3.5773540172759666`*^9, 
   3.5773541162480803`*^9}, {3.577354152066833*^9, 3.577354413093473*^9}, {
   3.5773544432664547`*^9, 3.577354529607409*^9}, {3.5773545645004063`*^9, 
   3.577354609881363*^9}, {3.577354646693754*^9, 3.577354719256816*^9}, {
   3.577354804577231*^9, 3.577354815180592*^9}, {3.577354859759325*^9, 
   3.577354878122208*^9}, {3.577354937657115*^9, 3.57735497397362*^9}, {
   3.5773551128436937`*^9, 3.577355124374435*^9}, {3.577355287847395*^9, 
   3.577355291745131*^9}, {3.577355331502981*^9, 3.5773555238018637`*^9}, {
   3.5773556441864843`*^9, 3.577355680529611*^9}, {3.577355764746146*^9, 
   3.57735603616667*^9}, {3.577356067609832*^9, 3.577356088698545*^9}, {
   3.5773566127012033`*^9, 3.577356646538927*^9}, {3.577357259521092*^9, 
   3.577357262049225*^9}, {3.577357426760705*^9, 3.577357749278442*^9}, {
   3.577357796111245*^9, 3.5773578084046593`*^9}, {3.577357892477436*^9, 
   3.577357900054429*^9}, {3.577357991703231*^9, 3.57735800683899*^9}, {
   3.577358336912718*^9, 3.577358356808399*^9}, {3.57735841721972*^9, 
   3.57735849711208*^9}, {3.577358566418222*^9, 3.577358587755087*^9}, {
   3.577358622872891*^9, 3.577358733602942*^9}, {3.5773587638068533`*^9, 
   3.577358768925439*^9}, {3.577358808147798*^9, 3.5773588098055563`*^9}, 
   3.577358901440624*^9, {3.577358941533095*^9, 3.577359165805587*^9}, {
   3.5773591962207117`*^9, 3.5773592177684097`*^9}, {3.577359248474031*^9, 
   3.5773593667376966`*^9}, {3.5773594331034393`*^9, 
   3.5773594896816797`*^9}, {3.577359523693625*^9, 3.577359534295063*^9}, {
   3.577359620018565*^9, 3.577359678937852*^9}, {3.577359798296011*^9, 
   3.57735998655851*^9}, {3.5773601049909*^9, 3.577360237113104*^9}, {
   3.577360270767872*^9, 3.577360311467051*^9}, {3.577360856695126*^9, 
   3.577360857977613*^9}, {3.577360929098216*^9, 3.57736095463447*^9}, {
   3.577361698337792*^9, 3.577361771468536*^9}, {3.577361809866765*^9, 
   3.577361875240674*^9}, {3.5773619792408257`*^9, 3.577361982504136*^9}, {
   3.577362428808133*^9, 3.577362524010764*^9}, {3.57736260183395*^9, 
   3.577362609007038*^9}, {3.5773631916012077`*^9, 3.577363194621887*^9}, {
   3.577363443192843*^9, 3.577363497664022*^9}, {3.577363577378818*^9, 
   3.577363580696754*^9}, {3.577363666202127*^9, 3.577363668237071*^9}, {
   3.577363743420475*^9, 3.577363761484745*^9}, {3.577363871084654*^9, 
   3.5773639581458473`*^9}, {3.577363993050496*^9, 3.577364010484871*^9}, 
   3.5773641351947107`*^9, 3.577364201631631*^9, {3.577364306749485*^9, 
   3.5773643334205103`*^9}, {3.57736441377666*^9, 3.577364488304467*^9}, {
   3.577364523400754*^9, 3.5773645248374968`*^9}, {3.577364582099708*^9, 
   3.577364591155931*^9}, {3.577364621168502*^9, 3.577364661622953*^9}, {
   3.5773647598942966`*^9, 3.5773648991330013`*^9}, {3.5773652346321173`*^9, 
   3.577365236397955*^9}, {3.577365302172237*^9, 3.5773653024409237`*^9}, {
   3.5773655683095427`*^9, 3.5773655851660433`*^9}, 3.577365637306139*^9, {
   3.5773656911417418`*^9, 3.577365717371419*^9}, {3.57736585258633*^9, 
   3.577365852839656*^9}, 3.577366675224243*^9, 3.577366729881351*^9, {
   3.577366799324977*^9, 3.577366807334918*^9}, {3.577366876537867*^9, 
   3.577366878036584*^9}, {3.577367027497939*^9, 3.577367034261444*^9}, {
   3.577367087240992*^9, 3.577367089335643*^9}, {3.577367169963922*^9, 
   3.5773671704316463`*^9}, 3.5998996090176907`*^9, {3.599899692790882*^9, 
   3.599899718820017*^9}, {3.5999117123308287`*^9, 3.5999117350698566`*^9}, {
   3.599911780274081*^9, 3.599911781937955*^9}, {3.5999118178722878`*^9, 
   3.5999118223204803`*^9}, {3.599924786788741*^9, 3.5999247907428427`*^9}, {
   3.5999824626267967`*^9, 3.5999824865906353`*^9}, {3.599982518201003*^9, 
   3.5999826042331457`*^9}, {3.6000003857849197`*^9, 
   3.6000003884372997`*^9}, {3.600667542168519*^9, 3.600667641114686*^9}, {
   3.600668540601487*^9, 3.600668595923644*^9}, 3.6006754649573*^9, {
   3.600675520062149*^9, 3.600675601239461*^9}, {3.600675681972083*^9, 
   3.6006757348788013`*^9}, {3.600678216351714*^9, 3.600678261538052*^9}, {
   3.6006783078520327`*^9, 3.6006783573405323`*^9}, {3.60067840334352*^9, 
   3.600678559458737*^9}, {3.6028560933902903`*^9, 3.602856093727703*^9}, {
   3.6074285100030327`*^9, 3.607428510388282*^9}, {3.637557072823853*^9, 
   3.637557119311878*^9}, {3.6375571727361917`*^9, 3.637557173731791*^9}, {
   3.637557208739818*^9, 3.637557209268497*^9}, {3.637573339934503*^9, 
   3.637573342011644*^9}},
 TextAlignment->Left,
 TextJustification->1.,ExpressionUUID->"2e8b85dd-7fa4-4b2b-91a2-a65d4335f496"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tIntroduction"
}], "Section",
 CellChangeTimes->{{3.5998938857987137`*^9, 3.5998939022215014`*^9}, {
  3.599894124600873*^9, 3.5998941509689074`*^9}, {3.5998942049690657`*^9, 
  3.599894208887265*^9}, {3.599895819252528*^9, 3.5998958414230003`*^9}},
 CellTags->"intro",ExpressionUUID->"da50e2a6-9df2-4511-9cd8-3960b64fbe16"],

Cell[TextData[{
 "As computers are applied to address increasingly complicated problems, \
situations arise in which there is no known method to build a model able to \
produce a desired output, from a given set of inputs.\nConsider the task of \
recognizing hand written digits. The goal is to estimate a function that will \
take numerical representation (e.g. a raster image) of an hand-written digit \
and that will output the identity of the digit in the image: 0, . . . , 9. At \
first glance, one would think that a possible way to address such problems \
could be to hard-code some rules to perform the recognition. Unfortunately, \
this approach would demand huge human efforts to analyze a representative \
dataset of digits and to find stable patterns that could be used for the \
recognition task. Moreover, due to the large variability in the hand \
writings, it may produce poor results when applied to digits produced by \
writers that were not considered during the rule making process. Finally, the \
skills acquired while addressing the digit recognition problem would not be \
transfered to other unrelated problems like, for example, automatically \
recognizing spoken words.\nA more modern approach to tackle such problems is \
to use machine learning to design general ",
 StyleBox["pattern recognition",
  FontSlant->"Italic"],
 " algorithms and to study their generalization properties. These tools could \
then be applied to any pattern recognition problem (such as the above \
mentioned digit recognition and speach recognition problems), with a \
comparably very limited human effort.\nPattern recognition algorithms make \
use of a set of training examples of the form ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       SubscriptBox["x", 
        StyleBox["i",
         FontWeight->"Plain"]],
       FontWeight->"Bold"], ",", 
      SubscriptBox["y", "i"]}], ")"}], "InlineFormula"], TraditionalForm]],
  ExpressionUUID->"a0e1f577-108d-413d-b2a9-523c738eef5f"],
 ", where ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], "\[Element]", " ", "X", "\[Subset]", " ", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}], "InlineFormula"], 
   TraditionalForm]],ExpressionUUID->"3b4a678e-eaca-47ca-a2e6-c2e7a1885358"],
 " is a numerical representation of an input instance and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["y", "i"], "\[Element]", " ", "Y"}], "InlineFormula"], 
   TraditionalForm]],ExpressionUUID->"987ca331-c203-466a-89c1-de4ce1ca5aed"],
 " is an associated desired output. \nSuppose that the training examples are \
drawn from a given distribution \[CapitalDifferentialD] on ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"X", "\[Times]", "Y"}], "InlineFormula"], TraditionalForm]],
  ExpressionUUID->"39950c4b-14e6-4b03-bfba-0e1cb107675c"],
 StyleBox[". ", "DisplayFormula"],
 "The goal of a pattern recognition algorithm is to automatically learn a \
function ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["f", "v"], ":", 
     RowBox[{"X", "\[RightArrow]", "Y"}]}], "InlineFormula"], 
   TraditionalForm]],ExpressionUUID->"2683124f-17b1-4124-9c57-e346e440eff5"],
 " (where ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "4eb72a69-db43-46f6-8931-6ebac3f4872c"],
 " is a parameter, or a set of parameters to be estimated) able to produce \
the desired output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "cce65712-e27c-4682-b24f-e06f05f37c3a"],
 " on each training example ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["x", 
     StyleBox["i",
      FontWeight->"Plain"]], "InlineFormula",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "6d37313f-05d2-49cd-9b8e-e72066f67062"],
 " and to perform well on other (unseen) example drawn from the same \
distribution \[CapitalDifferentialD].\n\nOne of the most powerful and widely \
used tools to solve pattern recognition tasks is the Support Vector Machine \
(SVM) ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "3b072634-09b0-4ff3-8945-9e951ac57084"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ". Over the last 15 years, this class of algorithms have become the de facto \
standard in several fields. In this notebook we will present the basic theory \
of SVMs and present some simple implementations using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".\nAn outline of the notebook is as follows. In Section\[NonBreakingSpace]",
 
 CounterBox["Section", "linear_classifiers"],
 " we introduce the basics concepts of linear classifiers. Section\
\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:max_margin"],
 " presents the theory of max-margin classifiers and the resulting algorithms \
and implementations. In Section\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:svm"],
 " we introduce Support Vector Machines, the related optimization tools and \
several implementations. Section\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:kernel_svm"],
 " finally discusses the usage of ",
 StyleBox["kernel methods",
  FontSlant->"Italic"],
 " to turn the SVM classifiers into non-linear ones, without any modification \
to the learning algorithms and the analysis. We conclude in Section ",
 
 CounterBox["Section", "conclusions"],
 "\[NonBreakingSpace], pointing out some possible extensions of this work."
}], "Text",
 CellChangeTimes->{{3.5998943087684813`*^9, 3.5998943271227007`*^9}, 
   3.599894407253346*^9, 3.5998948280174227`*^9, {3.5998951864442167`*^9, 
   3.5998951952238407`*^9}, {3.599896658295856*^9, 3.599896727209674*^9}, {
   3.599898813372349*^9, 3.599898816683291*^9}, {3.5998988627056*^9, 
   3.599898898867103*^9}, {3.599898937396241*^9, 3.599899016660832*^9}, {
   3.599899055552977*^9, 3.599899152596859*^9}, {3.5998992798243923`*^9, 
   3.5998993971280947`*^9}, {3.599899542183464*^9, 3.599899564379373*^9}, {
   3.599911881099936*^9, 3.599911974310871*^9}, {3.599921388866708*^9, 
   3.59992147049356*^9}, {3.599921722923037*^9, 3.5999217446395407`*^9}, {
   3.5999217874217176`*^9, 3.599921801417346*^9}, {3.599921897618664*^9, 
   3.599921905508203*^9}, {3.599921954931614*^9, 3.599922668857256*^9}, {
   3.599922705859602*^9, 3.599922924914104*^9}, {3.599922955624147*^9, 
   3.5999231184498*^9}, {3.5999231516651506`*^9, 3.599923241315639*^9}, {
   3.599923271374123*^9, 3.599923528304927*^9}, {3.599923562720948*^9, 
   3.599923778621764*^9}, {3.599923847071067*^9, 3.599923922580636*^9}, {
   3.599923962088328*^9, 3.599923988851654*^9}, {3.599924043221188*^9, 
   3.59992432636644*^9}, {3.599924358925447*^9, 3.5999244579349737`*^9}, {
   3.5999245088907957`*^9, 3.5999245206387987`*^9}, {3.599924565204747*^9, 
   3.5999246010434227`*^9}, {3.599982401872068*^9, 3.5999824378881817`*^9}, {
   3.6000004010460987`*^9, 3.6000004116739187`*^9}, {3.6006681285910587`*^9, 
   3.600668182653831*^9}, {3.600668232106468*^9, 3.600668284999237*^9}, {
   3.600668330536263*^9, 3.600668478955243*^9}, {3.600675783976914*^9, 
   3.6006758428460817`*^9}, {3.600675894162828*^9, 3.6006760349611263`*^9}, {
   3.602856353983424*^9, 3.602856355009945*^9}, {3.607428556074897*^9, 
   3.607428569902584*^9}, {3.607428954011552*^9, 3.607428974018379*^9}, 
   3.610027973954509*^9, 3.616701571920931*^9, {3.637557258513633*^9, 
   3.6375573888018293`*^9}, {3.637557425528923*^9, 3.637557456285863*^9}, {
   3.6375575215561743`*^9, 3.637557573154581*^9}, {3.637583943040402*^9, 
   3.637583964267373*^9}, {3.637584066449935*^9, 
   3.637584067015843*^9}},ExpressionUUID->"e17c650a-e74e-44c7-8975-\
6f8a93d021b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tLinear Classifiers"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.59989587689098*^9, 3.599895892048147*^9}, {3.599895942273438*^9, 
  3.599895956106649*^9}, {3.599983213882422*^9, 3.599983223053462*^9}, {
  3.5999952940499563`*^9, 3.59999533593959*^9}, {3.600001907096558*^9, 
  3.600001907988482*^9}},
 CellTags->
  "linear_classifiers",ExpressionUUID->"29290889-37c6-4796-bda1-293f86a9c7b3"],

Cell[TextData[{
 "Suppose we are given a set of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e4f50c6a-9148-4b9e-890f-bb8e5b5a621d"],
 " training examples ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["S", "InlineFormula"], 
    StyleBox["\[Congruent]", "InlineFormula"], 
    RowBox[{
     StyleBox["{", "InlineFormula"], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         StyleBox[
          SubscriptBox["x", 
           StyleBox["i",
            FontWeight->"Plain"]],
          FontWeight->"Bold"], ",", 
         SubscriptBox["y", "i"]}], ")"}], "InlineFormula"], 
      StyleBox[",", "InlineFormula"], 
      StyleBox[" ", "InlineFormula"], 
      StyleBox[
       RowBox[{"i", "=", "1"}], "InlineFormula"], 
      StyleBox[",", "InlineFormula"], "\[Ellipsis]", ",", "n"}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"54f8e46d-60a5-47b6-935d-34bb8fd24c98"],
 " drawn from a given distribution \[CapitalDifferentialD] on ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"X", "\[Times]", "Y"}], "InlineFormula"], TraditionalForm]],
  ExpressionUUID->"aa9279fb-7db2-42bd-b224-b8b59d603ade"],
 ", where:"
}], "Text",
 CellChangeTimes->{{3.5999833201968613`*^9, 3.599983333359153*^9}, {
  3.599983411766436*^9, 3.599983429731062*^9}, {3.599983469021221*^9, 
  3.599983699442152*^9}, {3.599983985304085*^9, 3.599983987420415*^9}, {
  3.599984055365138*^9, 3.599984095786604*^9}, {3.5999841276182547`*^9, 
  3.5999841634915257`*^9}, {3.5999841954486227`*^9, 3.599984283340876*^9}, {
  3.599984338350649*^9, 3.5999843408194103`*^9}, {3.599984373328288*^9, 
  3.599984388233059*^9}, {3.599984566838851*^9, 3.599984567148521*^9}, {
  3.599984694295349*^9, 3.599984694951599*^9}, {3.5999954171135883`*^9, 
  3.5999954338568573`*^9}, {3.599996209204809*^9, 3.599996266625684*^9}, {
  3.599996305172275*^9, 3.599996367763781*^9}, {3.599996444071846*^9, 
  3.599996462310013*^9}, {3.599996661334001*^9, 
  3.59999666841422*^9}},ExpressionUUID->"3a01cec4-642b-4f87-9fdc-\
c3b7c9e338d9"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    RowBox[{
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], "\[Element]", "X", "\[Subset]", " ", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "\[Element]", " ", "Y"}], ";"}]}], 
   "InlineFormula"], TraditionalForm]], "Item",
 CellChangeTimes->{{3.5999966697937927`*^9, 3.599996715715584*^9}, {
  3.600000424125843*^9, 
  3.600000430480761*^9}},ExpressionUUID->"9663ee5c-52a8-4fa5-9cbb-\
ca93f31f16f1"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
   "X", " ", "is", " ", "called", " ", "the", " ", "input", " ", "space"}], 
   ";"}], TraditionalForm]], "Item",
 CellChangeTimes->{{3.5999966697937927`*^9, 
  3.599996714110073*^9}},ExpressionUUID->"c8b3bfe0-d9e5-4ec8-8deb-\
0c4d3f4caae9"],

Cell[BoxData[
 FormBox[
  RowBox[{"Y", " ", "is", " ", "called", " ", "the", " ", "outcome", " ", 
   RowBox[{"(", 
    RowBox[{"or", " ", "decision"}], ")"}], " ", 
   RowBox[{"space", "."}]}], TraditionalForm]], "Item",
 CellChangeTimes->{{3.5999966697937927`*^9, 
  3.5999967110155077`*^9}},ExpressionUUID->"d5014746-21ec-4fe0-a782-\
cf26f33f4dd6"]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["binary classification",
  FontSlant->"Italic"],
 " problems (problems with two classes), the decision space is defined as",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "\[Congruent]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"7cb07a32-34a5-48a6-b330-3bf56aaa1892"],
 " and a ",
 StyleBox["linear classifier",
  FontSlant->"Italic"],
 " can be defined in the following way:"
}], "Text",
 CellChangeTimes->{{3.5999833201968613`*^9, 3.599983333359153*^9}, {
   3.599983411766436*^9, 3.599983429731062*^9}, {3.599983469021221*^9, 
   3.599983699442152*^9}, {3.599983985304085*^9, 3.599983987420415*^9}, {
   3.599984055365138*^9, 3.599984095786604*^9}, {3.5999841276182547`*^9, 
   3.5999841634915257`*^9}, {3.5999841954486227`*^9, 3.599984283340876*^9}, {
   3.599984338350649*^9, 3.5999843408194103`*^9}, {3.599984373328288*^9, 
   3.599984388233059*^9}, {3.599984566838851*^9, 3.599984567148521*^9}, {
   3.599984694295349*^9, 3.599984694951599*^9}, {3.5999954171135883`*^9, 
   3.5999954338568573`*^9}, {3.599996209204809*^9, 3.599996266625684*^9}, {
   3.599996305172275*^9, 3.599996367763781*^9}, {3.599996444071846*^9, 
   3.599996462310013*^9}, {3.599996661334001*^9, 3.59999666841422*^9}, {
   3.600676055582761*^9, 3.600676093519527*^9}, {3.6028563850033283`*^9, 
   3.602856385365007*^9}, {3.63756005606686*^9, 3.637560057624992*^9}, {
   3.637560217609866*^9, 3.6375602187926617`*^9}, 
   3.637560309064089*^9},ExpressionUUID->"63a54088-f346-4dba-b869-\
3900dddd269e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["y", "^"], "i"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}], ")"}]}], "=", 
   RowBox[{"sign", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], ",", "b"}]], 
      RowBox[{"(", 
       StyleBox[
        SubscriptBox["x", 
         StyleBox["i",
          FontWeight->"Plain"]],
        FontWeight->"Bold"], ")"}]}], ")"}]}]}], 
  ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.599984391909471*^9, 3.599984400633883*^9}, {
   3.599984585296199*^9, 3.599984662219262*^9}, {3.599984803758453*^9, 
   3.599984813777051*^9}, 3.5999954402745743`*^9, {3.637557831401524*^9, 
   3.6375578562072363`*^9}, {3.6375593933864117`*^9, 3.637559394153325*^9}, {
   3.637559476361559*^9, 3.6375594822094307`*^9}, {3.637559798022852*^9, 
   3.637559798718795*^9}, {3.637560777886765*^9, 
   3.637560800588523*^9}},ExpressionUUID->"fdc3bc5a-186c-4473-baea-\
14124a589410"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["y", "^"], "i"], TraditionalForm]],ExpressionUUID->
  "e9eec242-c51b-4e61-b576-7e256cc638c3"],
 " is the predicted label for a given sample ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], "i"], TraditionalForm]],ExpressionUUID->
  "a2db0bc8-9b3d-4be0-b385-fae930876602"],
 ", using parametes  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}], ")"}], "\[Epsilon]", " ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "d"], "\[Times]", 
    "\[DoubleStruckCapitalR]"}], TraditionalForm]],ExpressionUUID->
  "b81da810-c683-4c07-8129-db946fcba703"],
 ", while ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], 
       StyleBox[",",
        FontWeight->"Bold"], 
       StyleBox[" ",
        FontWeight->"Bold"], 
       StyleBox["b",
        FontWeight->"Plain"]}]], ":", "X"}], "\[Rule]", 
    "\[DoubleStruckCapitalR]"}], TraditionalForm]],ExpressionUUID->
  "db2511e4-2ba1-4ec7-9944-22ff00074bc7"],
 " is a parametric linear function, defined as"
}], "Text",
 CellChangeTimes->{{3.59998470550469*^9, 3.5999847184918623`*^9}, {
  3.599995380838723*^9, 3.5999953847721653`*^9}, {3.6375579352423964`*^9, 
  3.6375579531649437`*^9}, {3.637559089793523*^9, 3.63755918088489*^9}, {
  3.637559225614257*^9, 3.637559314737771*^9}, {3.637559389430121*^9, 
  3.6375594510826883`*^9}, {3.637559492836709*^9, 3.6375596551386023`*^9}, {
  3.6375596967675*^9, 3.637559709104871*^9}, {3.637559762603465*^9, 
  3.637559764617177*^9}, {3.637559805293641*^9, 3.637559855297859*^9}, {
  3.6375598982607594`*^9, 3.6375599401862307`*^9}, {3.6375602460849648`*^9, 
  3.637560282315172*^9}, {3.63756032571612*^9, 3.6375603329679117`*^9}, {
  3.637560407198728*^9, 3.637560416593088*^9}, {3.637560824370755*^9, 
  3.637560839111212*^9}, {3.63756323623885*^9, 
  3.637563275448161*^9}},ExpressionUUID->"cfabb73f-f827-4013-8739-\
af2cf388d313"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["f", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   RowBox[{"(", 
    StyleBox["x",
     FontWeight->"Bold"], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["x",
     FontWeight->"Bold"]}], " ", "+", 
   RowBox[{"b", "."}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.599984726788556*^9, 3.5999847764296103`*^9}, {
   3.5999848163245077`*^9, 3.599984820955571*^9}, 3.599995450163426*^9, {
   3.637559663616598*^9, 3.6375596641818447`*^9}, {3.637559859958955*^9, 
   3.637559861838345*^9}, {3.637560845157565*^9, 
   3.637560845442911*^9}},ExpressionUUID->"1a1180d2-68bd-4aef-ab28-\
12327804cee6"],

Cell[TextData[{
 "We refer to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], TraditionalForm]],ExpressionUUID->
  "782b7aa7-4b38-44a8-a10a-71a1aa672303"],
 " as to the ",
 StyleBox["scoring function",
  FontSlant->"Italic"],
 " of the linear classifier, as it provides a classification score for each \
sample. For brevity, we also sometimes refer to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], TraditionalForm]],ExpressionUUID->
  "f2917889-0cbd-4f2c-a810-c91d1077cdcf"],
 " as to the classifier.\nThe geometry of this simple classifier can be \
understood by looking at the 2D visualization in the following figure. The \
points whose vector projection on ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "343c6e7e-74bd-41dc-b29a-f2b05a73390d"],
 " is grater than ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "b"}], TraditionalForm]],ExpressionUUID->
  "454429b3-58a6-4917-a529-2e674127b0bd"],
 " will be positively classified, while the others will be negatively \
classified. The equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], "+", "b"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"a650482d-4554-4a4b-9b0e-4bd3b95dcb12"],
 " thus defines a (hyper) plane separating the positively classified points \
from the negative ones.\n"
}], "Text",
 CellChangeTimes->{{3.5999848374383993`*^9, 3.599984853455332*^9}, {
   3.599984885735837*^9, 3.599985006272943*^9}, 3.599992786541381*^9, {
   3.599992831736384*^9, 3.599992906070362*^9}, 3.5999929741867743`*^9, 
   3.599993588724721*^9, {3.599993630655571*^9, 3.599993638290903*^9}, {
   3.5999938017619667`*^9, 3.59999385156149*^9}, {3.599993899101679*^9, 
   3.599993967704577*^9}, {3.599994078570162*^9, 3.599994083576499*^9}, {
   3.599994142489312*^9, 3.599994222918152*^9}, {3.599994259188177*^9, 
   3.599994278147274*^9}, {3.599995387200259*^9, 3.599995394053111*^9}, {
   3.599995470257247*^9, 3.5999954848046083`*^9}, {3.599998898143688*^9, 
   3.599998898467804*^9}, {3.600676141246665*^9, 3.60067615059121*^9}, 
   3.601386017267371*^9, {3.637557676688958*^9, 3.637557678075529*^9}, {
   3.63755771390899*^9, 3.6375577407034397`*^9}, {3.637559459727026*^9, 
   3.637559461548736*^9}, 3.637559530016273*^9, {3.637559659615926*^9, 
   3.637559660778345*^9}, {3.637559864308524*^9, 3.6375598839855556`*^9}, {
   3.637560000137486*^9, 3.637560016566737*^9}, {3.637560094699978*^9, 
   3.6375601526531*^9}, {3.637560284909622*^9, 3.637560306533741*^9}, {
   3.6375603436605043`*^9, 3.637560377416593*^9}, {3.6375608302942247`*^9, 
   3.637560842871337*^9}, {3.6375609618068333`*^9, 3.6375610182851067`*^9}, {
   3.637561053747444*^9, 3.6375611560891867`*^9}, {3.6375611945261307`*^9, 
   3.637561283777487*^9}, {3.637563188260047*^9, 3.6375632205032263`*^9}, {
   3.637563290262705*^9, 3.637563339425099*^9}, {3.637563445093539*^9, 
   3.637563459392502*^9}},ExpressionUUID->"5c3d4251-9684-45ff-839f-\
483b44aba4e3"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
4dpeeukl22r0Yc2fP58+pgceeICWu3XrtmbNGq16V1Q/NQAAAIB6QdExIyNj
0KBB586d08yzS52u5Jjs3buXcpS/v7+sycnJ4TbtiRMnatXN3epvaLQ6ZMPB
HmlNbGzsvffeS5tH28wDvLO//OUv4eHhsnnqFQcY16RJk/gz+uGHH+gT/Pvf
/07LPCa/2g0B9e0AAABQv3Jzcym3cyzUTfppLjgscRqn5Xbt2lGOCgoKkpUU
rlatWsVZi8Mwt4g22l8q5TGaUnivvtv//e9/mzdvLjUzMtfqZ599phbqgymg
g8XT05M+o9GjR+/bt48+sh9//FEtd79a6TsAAADArcjKyvLy8kpLSzPT0K7r
Z7pp0yZOv/R38Qs496ampnIVyuTJk3m9UQa9rHV+Jc7zlAZffPFFaW+XgSJ7
9OixZ8+extxIuK5ffvmFr7Ds7e0feughdfh9dehRAAAAgHqUkZHRrVs3yu2G
BSdmh7b8mWee4bibn5/PVeWcoM6ePduiRQta369fP4nNPO6H0f9e9dIjMDDQ
z89PbXLnfPj888+fOXNGLWRSO65qV3bONbuLL3OhDjpKcZ2r3Ldt2yYfgbwS
43aaI90FtdG/GQAAAHQyMzPvvPNOtbHdHMcblJL1adOmcUs11xuL8vJyLy8v
e3t7euQwbzp/pgzSzp8CbeoXX3zh4ODAU6zS38J17y1btly9erVuoihd667h
xFJQj/jiiD+v7du384XV3//+d3mBOgg/3n9zdLGGXKPhcwQAABNRUVGRlZU1
ZMgQzWA0RXOhbi2dbT/++GNOUyEhIReqaTXhtlu3bra2tn/5y190f6YRW6c5
XcsG0NWHdGak5ccee4z/FkdHR6mfGT58+PHjxzVlUHr+cUr7fO9A2uTR6t4Q
uCGd3t7BgwfT7kRXgvS4efNmzaBbN95/c6Tedrxcw7ibBAAAIHJycgICAiiN
mGl9O5OYmpKSwvn2+eef53/iE3FxcTGPBvnf//5Xu3ImJlP4k3XtexIVoqOj
+/fvL03uFBG5BX7mzJlq50fDaIHBTBqC9ID+5z//SZ/F0aNHe/XqRR9H586d
i4qKNLS0WwQ6stQiNFP4fgAAAGBpaWn+/v5ynjKvkk51a7mAhP6QkSNHcr/O
1NRUyef/+9//7O3tO3XqdP78ec00srpWvf2yJYZ1O7zx9IJPPvmkWbNman9V
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
Ow/2Tsn/v//9L79AN4V9raPSgYWRmblo4fnnn6fQ7ujoyIPZqmOMG3MTzZxu
AgU6ypKSkkaPHs3Xzm5ubnTKKCsr8/T0pKcjRozYuXMnv143SiQAANQj+moN
Dg6mL2G5v4zhvKBecHRXaxX4PL5w4cL27dvz8nVDO8vMzHz00Uc5vfMQkVw/
c88990RFRfFr1LRAO7Ck91procFM6b6a6JONiYnhJPnVV19pNbsBKmRunaRu
tec4rezbty8dfa6urjzFdufOnVu1apWfn8+vwbEGANDQwsLC6LuX0juaKKEe
yXSK5eXlKSkpXCFDQX3p0qVcz6DVVt+uw23y/IItW7b4+PhIxTsHeFqYPXs2
vYzzubS9y+9EhLM8tEfR3sWftbe3N+0JQ4YM4X2AX4B6v1sn5wLdlW9QUBAf
d7t37/7ggw+cnZ3j4uL49Rzs0fIDANCgQkJCPD09KVlpSskBQL2gk/jUqVNf
fPFFWVNWVpaRkSEXidcNV2q7Pe2fM2fOlNxOjzypvYeHx7Zt29Rh6DQlb+Bq
1FLRNSAXUKndczAI4a3TvYccxXklHYkLFiyQA5Bvc9TaTxzpHQCg3tFXcXh4
uJeXV05Ojqac+Iy9XWDe5JQdGxvr5ubGg8BoSuv3DTaD64psteq2VtpX7777
bo4Ntra2FNt4+W9/+1teXp4aNvg/wv5sSbi2ij7W06dP33bbbfTpP/LII5py
74Y/cTS23zq5ZaZTWlo6YMAAOuhat25dUlLCKznb40oZAKChpaamduvWLSEh
wbCgEeAWff/990uXLuVlPqdfuHBB5gi4kbM87418C16dXGD58uWtWrWiuM51
79zu6uDgsHLlSh5MUornkSIsiXw7/eMf/+BW31OnTtFK9V4hqtxvkXrrSj18
5Ol7773HV80bN26s9QdxEgEAaCB5eXleXl6JiYmYcQnqkVq7ris8FhStr3t+
l4Qv87xIAQztuo8++ihldblrz3r37s39rFFqa2E4ivNdQv6sV69erf6rDH6i
ob79FuhmU+K4Lr0GCgsLfXx8+Ljr0KEDz3LFL1OvlfD+AwDUOzrBZWZm9urV
q6ioSMM3LdQfTlASAOQeugznfuPjxUkYqHX/XL9+fffu3bm9ndK7jPT+1FNP
0V6NS1FLwp8m7Q8PPPAAfda+vr7alW3Csmvhq+wWSTOO7giiN3/y5Mn0zoeG
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
sGptoDZu07Ha31OrLQyPGjWKJ401wsYBAACYOTq9xsbGNm3alIdQBquim/mU
n/L9Fx4XFKNtNAKeD0irrmY/derU5MmT6Tpaat15oV+/fhEREbrRyNU+CLJg
ChdZUmqle1y3bh39Lfb29j/88AP2KwAAgDpISkpycXHJycnhp2hstwa6T1lt
pF25cuWkSZPUqWqg4egumnhhw4YNbm5ulNi516o0ws+aNcuwHVt+g6kVaesa
2+mpj48P/RUDBw7kNaa2wQAAAKYvJSWlTZs2PO2LhpOpleF8TplK2j+Li4vL
ysrUPIldot7JNENS+i5lM3KP46OPPlL7q3Lzu7u7O08bpE5iq7ZdG729XTc4
jFZzQ2H58uU821R8fLw64REAAADcuKSkpPbt2/OIcziTWjO1Q59WHenRWa8R
qL1WZYGTbVRU1F133cVxVx3sfezYsampqbrfYyKDRuqKrzi9FxYW8pY//fTT
mlLqAwAAADclMTGRcjuHNOR2K6HOByQz0Ug3SXXUcQ3jWjcADq66tnEZ+USd
Kohes379eh7wnNK7jY1Ns2bNOAMvWbJEPkH5Jca91NKV/cgu9Oijj9LG05bL
fT3sVAAAAHWQlJTUtm3bsrIyVLZbD8My6bNnz5aUlEju4mCpzokD9Uh9V6WB
mg9AdWZPXqD19EFMmTJFGt5loXfv3vv371d/j3E/L/WWDQ/DSMt//vmno6Mj
be0vv/yioQcNAADALUhNTW3VqhXFNn6KJnerwh93aWnpv//973nz5mlK/JN8
hV2iIchoMLrxxjXlzZcWeBnqh7t2cmi3s7Pj4pkXXniBrrk002jElgsQfqQr
jgEDBtB2BgQEaDW3GPjPMXopPgAAgNmJiopq166dOr0Lmlgtnq4vZGZmZqdO
ndatW2fs7YKrkkEgFy5cyCPMcG7n/qp0CH/33Xf8Sunfqg723mjUUh+yZs0a
vkFw4MAB3Sj0AAAAcFPoBBoWFtaxY0f0S7Uq6iSSFy9ePHr06NKlS427SXBt
nHW5RT0hIWHixIky1Az3V6Uwf+edd8bFxWlKMOZ6p0YL8GoTOm0qXQ86OjrS
lcWMGTO4ZUAdfL6hNwYAAMDC0Kn8yJEjbm5ufFbFydR6qNEd12smTi0vkXr4
H3/8sVWrVtLwzo+2trb/+Mc/tCu7HmuN+xFLD/fnnnuOtyomJka3GfiqAQAA
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
8inGv+NEXcuvu2pPmHF1dlQw+XTleN/kZXNTT+V/kfv/0ckx7JJh/Qp+a7f9
l8VQtjtslSjG75JlNpSD8dXyGbYWLJcPxlUHpjwiN/fc7iNktxh2P7pqMVxz
Sew2Pta3Knv1t3sz/xVDcuP6/KVO5iitb+WvkA5s/wo7Ff86a4ENrL9Cib9G
fpfxT8m30oSuvzQhIeGee+4hq7sW7WyBb9u2bVxcnLyN7NvgqGB29zh/qJTj
VtFaMY0D7BrP5VNqPAP851ovmHs1mMv/PZfYff7ttrHWQsqfzI+Q3QIbG9a6
pmyjs0uXLo0ZM6ZLly7h4eH169fv2bPnjBkzyA1eylTD0doRR48epUmcIUOG
KFsVULYeyviN1rEAP+3WXkb+KHm77Go5bjes/xR/qVEkR7VPVkA+13qYoVrt
3hzjJ9j9OutOqZ2ksf2qvR7Weh1H9zDHsxy18E7+GrvXcVJO46939HXWE538
BNmwW5sIYwLOeilZp6h/tzZHRhWmga2y6AEeLxs/jYvnpHZbSyirhjzF+Any
uxzdduvtst4H6x5rlTFKnmMjKf8a40+xex1H32W38I5+YC7b+avZu2O7ddz6
J+byVtg9hTekdVEe/z/bWja7BWCs/4ujZspaHidvldM0H9w9GTXC7n1zdH3j
MKP8yt7f9292izp/Kuv1/7IvHzD+NePi/8u+lMnauDmyFVi3/xVKz8nPdPR7
7dZE44Gx3sMc64vK3i7JA/hPNBo6Y7R+1YHBxC7Wuyd/JjeJjs6Vc/GsHBwd
b/eOOSmn1BUSvhpv5OYfNB4bld0dmr0LuEHgmmL8BXwdOcCnDeu90nt++OGH
W265hXR7UFAQya0iRYqMGDHiX5ux5aroLIyvtv4djmqoPJ5f+ZlxdH8k/OuM
6+R4b+UVjI2rwk3iai4kkKNaI2/1/2x+UPwb7fbCzr8lNz/H+F30/xppSfm/
My5uHSPQRxcuXFi0aFGHDh1CQ0Nr1aqllbx+QhITE5WoOznGgdG6PSALfXrX
rl07duz4+OOPd+/evXPnzo888shjjz3Wo0ePRx999Jlnnnnqqaf0Ad26ddM7
9af6+Mez0Ac8+eST3bPo3bt3//79Bw4c2K9fv2efffbNN98cNmwYvb733nsf
ZaEfV71n8ODB/bPQ44U33njjtdde02fp19dff11/pPe8/fbb77zzzltvvaXP
1W/1zteyGDRokD5laBb64Jdeeum555574YUX/k97dxa7RdGlATxemXx3xgsT
Ey81iorbuCC4LyijOI6ZmHGcZD6FjEuCMBqvJlGJGFRGUUZxQQVFdgRZlM1t
ZBFUHNxYVEDZRQFZVBLlP7/0k3+n532B70smEyGp56JSXX3q1HNOVXefquq3
3759+4aJDJ7I43zbbbc5i8mdd96J/6233qqQGNqMYshNN92kihLlxNCmHMNB
gwYh/NBDDz1cYVCFwYMHP/LIIw5xk2dLZJ6ooFxe+aOPPjps2DAy9MirInU2
tt9///3SgQMHMo0M61jUv3//u+66698qyHAjMkm5iJmM1da/V+A9JO++++7U
AqeojYeHDh369NNPP/PMM8OHD3/hhRdknnzyyf+oYLr3+OOPE0Dv2Weffeml
l0aOHPlChZdffnncuHGvv/76+PHjlT///PMjRoxQTuypp55Sl4H/WcEhzVJq
GctktsSQWKTXpPik+6QEHBKQR5IneYNPhgwZEv8g/FQFGco1+uKLL6L03HPP
OUyhVItoIM8oZydMmGD8T5o0aeLEiW9WwH/GjBlTp05NofksQyhhkSrUqssu
JTH8xU4oJINA/PNEJ+SV8FtNVUYJJvjQ8Oqrr6LhunvttdemT5+Ow+zZs2fN
mvXGG2/Io+csqpRrhbxMXD1mzBgkVZk5c+bcuXP/q8K77777zjvvzJkzhxUU
ksFz1KhR8cnzFdJZ2nWWjWn3tQoUOoWMKiM7kd6M94Z1gqWcQAwTtVB9owLy
CLxfAZkYQj/H8ipzQjjlMqguWLBg6dKlH3/88aJFi5YtW/bJJ598+OGHCt96
6y0y6QuDSjp58mRpCDNQGi/NqiBDoUKtTJkyhTDr2KITmaCD0pUQD4wePZoT
yKiC89tvv63Rjz76CJlPP/30888/x0TJ/Pnz33vvvXnz5lGOTM3BIQNR/e9O
IL948WLVZZjDA6wLw/Rsk60uk6dhfgUNLVy4UEOYyCCjRWIZjbFlQgWu4PM4
hFfp1Iq2tIvDF198gbzWP6+AifIPPvjA2OBPkrMryChhLBtj71dffbV27do1
a9Z88803q1atooe2JUuWIEM5MtiqlfFJVQ4z3vBfXIFCtbSuVlynLqMin67B
WepQIQ6aUGXlypWeI+vXr5euW7fuhx9+2LFjhyeRzHfffYcbSp999lkMoZbb
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
++5AHmg528y09+NB0NTfHFotbbXsKLW8pdme39fYHc4CQscBhm6LCc2d3OZC
QYZ3c+ttv9a17HHXPDPp/r3zpeLmjPv3tt89NZcFOjpfztnX2EysnVxnmr9d
atntrZX81vkrmFpJ+1sT7SNBxawX/VIhy1m/VlBYqz3QVnW9/pOlqr0NNNe+
mpzrKz3rYyGQ5tI6PT9XoDNLTPW6UEfn73eiPItpWQ3bvn37jh07du7cKd21
a5fqP/30U1RFSfTUzq97SvUssoWDuirSI1//a8Z+lz6yvEl5Fi2zrPfjjz/u
6gSdsSIuymph+OR7NWFOUkUcsoSYleqoks9yaBbWao/J1EZFv5Rw+KcWhTkF
+6p3w9iSpjs6b4/kIwxbt25Ni1mGxWTbtm1xZt0vDrOyGlZhS0kyUhqy+lqT
pyRLmrVDIP2SNe2opZNkNCSfJiITe2Pyb9WXtWJp9GSJO96DrH7TmcJkQOub
N2+Onzdt2rRly5asJ69fv16j4anixo0bs8pNhnzWmRVmVTyrrASyNk4+3Zf1
ZBrIKI+XQimjizlxY2yE6CcZetll2NyJrMBHBnDIxsSXX36ZXYZ6DX/NmjX4
ZHEe0Fu7di1J5StWrMjCvlqrVq1K9WXLlsnLLF++XMnq1auZpgkVm43KaHTd
unXpC25UmN2c6PmogibowYeSLKfnj2CyoP11BVQXL148f/787CrOmjVr2rRp
8+bNW7hw4aJFi5xCMhtMn1VIPrsb2WJIZsmSJVqM4Vp0uHTpUkyUSNN0aGRJ
P+7NiOJ2nYU/bZRkU+z999+fPXv2m2++me22FRUw1+m8h7+UvdrKNs3UqVMn
TJgwZsyYsWPHykyaNElJ9kZnzpyZnSxp9pWyPTd37lyF0gULFmT/67HHHjvq
qKMSwIvk58yZk306rGI7Dmuqf/BJp7Arbs/OUfYWOXDixIkIoDF58mQ0pk+f
rqHsf3FLHEsSDcKvVqj337MSmz3oYMSIEQ6zlTZ+/HhGsajeX8uWqxbHjRvH
dmez85hd12zesVFzbMEz/cUcY4NFoR1HZV941KhR2bsfPHjwww8/PHz48Oyw
Z/+UOZrLFqfmnB0yZMigQYPCPAvLqTh06FDTh2yCDxs2jIFPP/00W0aOHJl9
5+wpv/LKK5QopH/06NE5q4TJaKib3dspU6ZoXUfXncWomE8ePc1pK6+IZElT
qN+/f/8sNZvLDBw4EMNHKuQtgmzfO0Q4742YR4jYzWWyiihuNytMxC56Nz3E
p+OveFWmoKCgoKCgoKDg/xsmVv369evTp4/gMCV/5fvnBYcamgtxzU5sLvW0
rL7WFc3F7rvvvq5dux599NG9e/c26VDS8kn/goKCgoKCgoKCPxbZNevY35vh
BYcLmnuXKan363/r/BxofSovYGzevHns2LF9+/bt1avXmWee2a1btwceeGDd
unX5bUgTZTwUFBQUFBQUFPzhqD9oFvx+gK/VFRziaH8NteMAX+j69ttvR48e
fc011xx77LFi9QEDBojet23b1vG/PzlYRkJBQUFBQUFBwaGGlm/GFhy+qF+V
qVfX69+FiczHjBlz44039ujRo0uXLv369Zs2bdqePXvqn9Qd5P2ost5eUFBQ
UFBQUHBIof2/qAoOF9QfVGl+L2LDhg1z5sy59957u3fv3rNnzz59+jzxxBMr
V67sOMBnOlo+OlGGQUFBQUFBQUHBIYWW/xMs0dphirrj9u7dO2PGjNtvv/2M
M8445phjbr755unTpzf/2KvubpLNz9Dtd1295WuHBQUFBQUFBQUFfwj2+03p
P4RJwf8FCbzrz1Dfc88911577YQJE3bv3t385nAtv99erpfZf2/8VW5BQUFB
QUFBQcGhgPb/auko7zMfzsjbMvUr6+3/5lOXtLwWdaBF9RLAFxQUFBQUFBQU
FBwu+B+CzaBo
     "], {{0, 601}, {1000, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{621., Automatic},
   ImageSizeRaw->{1000, 601},
   PlotRange->{{0, 1000}, {0, 601}}]], "Input",ExpressionUUID->
  "591975e9-e714-4a00-bab1-a0d9e45336d6"],
 "\nGeometry of a linear classifier (Adapted from ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "5cfd84d6-fcfa-4ff6-984e-b4653186c76b"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ")"
}], "Text",
 CellChangeTimes->{{3.637659491383601*^9, 3.6376595473154373`*^9}, {
  3.637661475999682*^9, 3.637661476767228*^9}},
 TextAlignment->Center,ExpressionUUID->"71f6411e-0fe3-4df7-a916-84bd312f421c"],

Cell[TextData[{
 "\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalChi]", "(", "r", ")"}], TraditionalForm]], 
  "InlineFormula",ExpressionUUID->"ff35178c-f0c0-413d-ba85-e037590902bd"],
 " be the indicator function of the predicate ",
 Cell[BoxData[
  FormBox[
   StyleBox["r", "TI"], TraditionalForm]], "InlineFormula",ExpressionUUID->
  "7cf596c3-2abd-435b-97a1-1f1d91397879"],
 " and let ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "ceda33c8-85d5-4007-bcf8-157dafb5f912"],
 " be a the scoring function of a linear classifier. A natural measure for \
the performance of a binary classifier is given by the 0/1 istantaneous \
error, which for a sample ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], "i"], TraditionalForm]],ExpressionUUID->
  "49b70c3f-92ab-484a-9fd1-26bbbae33ff5"],
 " can be written as"
}], "Text",
 CellChangeTimes->{{3.599994302797205*^9, 3.5999943241344013`*^9}, {
   3.599994362972232*^9, 3.5999944444415607`*^9}, {3.599995499436138*^9, 
   3.599995539266868*^9}, {3.599997582821453*^9, 3.5999975860480633`*^9}, {
   3.599998976253676*^9, 3.5999989914597387`*^9}, {3.599999170742371*^9, 
   3.599999173138685*^9}, {3.599999714269641*^9, 3.5999997234665003`*^9}, 
   3.601386016087184*^9, {3.63756129218629*^9, 
   3.637561333457786*^9}},ExpressionUUID->"cf1e887d-594e-4b34-b29a-\
82a0d36130e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", 
   RowBox[{"(", 
    RowBox[{"h", ",", "i"}], ")"}]}], "=", 
  RowBox[{"\[CapitalChi]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "i"], "h", 
       RowBox[{"(", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], ")"}]}], "<", "0"}], ")"}], 
    "."}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.5999944603634357`*^9, 3.599994493588257*^9}, {
   3.599995527890851*^9, 3.599995607101728*^9}, {3.59999759190174*^9, 
   3.599997605387134*^9}, {3.599998685361197*^9, 3.599998685502387*^9}, 
   3.5999987301762114`*^9, {3.5999989185448513`*^9, 3.5999989188784037`*^9}, {
   3.5999989939314337`*^9, 3.5999990018287563`*^9}, {3.599999423831132*^9, 
   3.599999448026225*^9}, {3.600000447372196*^9, 3.600000448986864*^9}, 
   3.607429382585763*^9},ExpressionUUID->"b7ba8b92-2d08-423d-b2ed-\
ea15825544eb"],

Cell[TextData[{
 "As it can be seen, if the sign of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "17663ab4-aa6c-4907-9c19-3bd5c3ac674b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "(", 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "692ea7c7-bac0-4fe1-8591-47a3dbaf505f"],
 " disagree, the prediction will be counted as erroneous and we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"e", "(", 
     RowBox[{"h", ",", "i"}], ")"}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"d34b4993-007b-46a0-998f-70335c78c63d"],
 ". In the other case, if the sign of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "a736b2ea-53fe-40b6-90b9-ab5e342a5f3f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "(", 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "8ff0a630-2ae9-49cc-854e-3b65ec5639c7"],
 " agree, the prediction will be considered correct and we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"e", "(", 
     RowBox[{"h", ",", "i"}], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"791f81d1-22f3-4734-a560-386596fac4c8"],
 ".\n\nUsing the error function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "(", 
    RowBox[{"h", ",", "i"}], ")"}], TraditionalForm]],ExpressionUUID->
  "7e33dd5e-d940-4d02-b433-e0ebd048d5f6"],
 ", we can now define the ",
 StyleBox["risk functional",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["err", "\[CapitalDifferentialD]"], "(", "h", ")"}], 
   TraditionalForm]],ExpressionUUID->"d8b45c53-cc38-4f48-a410-a0ed25b28993"],
 " of a classifier ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "3dbe1a4e-10e0-476f-b2b1-4689407fe7f7"],
 " over a distribution ",
 Cell[BoxData[
  FormBox["\[CapitalDifferentialD]", TraditionalForm]],ExpressionUUID->
  "e1181475-cd04-4403-a5da-36a1d99a3d23"],
 " as"
}], "Text",
 CellChangeTimes->{{3.599994302797205*^9, 3.5999943241344013`*^9}, {
  3.599994362972232*^9, 3.5999944444415607`*^9}, {3.599995241059703*^9, 
  3.5999952572511787`*^9}, {3.599995618292294*^9, 3.599995667540577*^9}, {
  3.599995727457095*^9, 3.599995748864458*^9}, {3.599995787655945*^9, 
  3.599995912903537*^9}, {3.599995962020927*^9, 3.599996010283751*^9}, {
  3.599996073913365*^9, 3.599996074383387*^9}, {3.599997644131403*^9, 
  3.599997646412861*^9}, {3.5999987264237432`*^9, 3.599998748160718*^9}, {
  3.5999989206421623`*^9, 3.599998967244173*^9}, {3.599999031887761*^9, 
  3.5999990785253983`*^9}, {3.6074293768330593`*^9, 3.607429631218378*^9}, {
  3.6074302685756474`*^9, 3.607430273193674*^9}, {3.607430379106879*^9, 
  3.607430398069633*^9}, {3.6074306202107058`*^9, 3.607430620210925*^9}, {
  3.637561416089044*^9, 3.6375614250470753`*^9}, {3.637563519716991*^9, 
  3.637563520313816*^9}},ExpressionUUID->"b603059b-483d-42e8-9bab-\
a7c43774862e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["err", "\[CapitalDifferentialD]"], 
    RowBox[{"(", "h", ")"}]}], "=", 
   RowBox[{"\[CapitalDifferentialD]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}], ":", 
      RowBox[{
       RowBox[{"e", 
        RowBox[{"(", 
         RowBox[{"h", ",", "i"}], ")"}]}], "==", "1"}]}], "}"}]}]}], 
  ","}]], "DisplayFormula",
 CellChangeTimes->{{3.599999082706435*^9, 3.5999991473256493`*^9}, 
   3.5999992125321608`*^9, {3.599999450499954*^9, 3.599999453716419*^9}, 
   3.6074299688686123`*^9, 3.607430001086486*^9, 
   3.6074301179761*^9},ExpressionUUID->"5e08987a-3dff-4cb7-b2f2-cf9688d287e3"],

Cell[TextData[{
 "which is the expected error rate of the classifier over the set of samples \
generated according to ",
 Cell[BoxData[
  FormBox["\[CapitalDifferentialD]", TraditionalForm]],ExpressionUUID->
  "5140aedc-b224-4ca0-b9bb-9ed0c55f89dc"],
 ". This quantity represents the true risk that a sample ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ",", 
     SubscriptBox["y", "i"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "d1a43aad-7fec-4a44-9039-1e102c648bfd"],
 " generated according to ",
 Cell[BoxData[
  FormBox["\[CapitalDifferentialD]", TraditionalForm]],ExpressionUUID->
  "af7e4c66-f031-487f-90e1-7e1a93fbd547"],
 " is missclassified by the classifier.\nThe so called \
\[OpenCurlyDoubleQuote]",
 StyleBox["generalization ability",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] of a classifier can then be defined as its ability \
to have a low true risk on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["err", "\[CapitalDifferentialD]"], "(", "h", ")"}], 
   TraditionalForm]],ExpressionUUID->"d1fa4129-9163-45d3-827e-1d3734ac7b7b"],
 ", and thus have a low expected error on samples which were possibly not \
considered when constructing ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "c29111e5-77f0-436f-8820-6d1ffabeea98"],
 " (",
 StyleBox["unseen samples",
  FontSlant->"Italic"],
 ").\n\nSince the distribution ",
 Cell[BoxData[
  FormBox["\[CapitalDifferentialD]", TraditionalForm]],ExpressionUUID->
  "6a8de4b7-d0f6-4c13-981f-bc12c00e6df1"],
 " is often unknown, this quantity is not directly measurable. Moreover, the \
error function used by this functional is non-smooth, its gradient is zero \
and it is thus not very tractable, as can be seen in the following figure.\n"
}], "Text",
 CellChangeTimes->{{3.599994302797205*^9, 3.5999943241344013`*^9}, {
   3.599994362972232*^9, 3.5999944444415607`*^9}, {3.599995241059703*^9, 
   3.5999952572511787`*^9}, {3.599995618292294*^9, 3.599995667540577*^9}, {
   3.599995727457095*^9, 3.599995748864458*^9}, {3.599995787655945*^9, 
   3.599995912903537*^9}, {3.599995962020927*^9, 3.599996010283751*^9}, {
   3.599996073913365*^9, 3.599996074383387*^9}, {3.599997644131403*^9, 
   3.599997646412861*^9}, {3.5999987264237432`*^9, 3.599998748160718*^9}, {
   3.5999989206421623`*^9, 3.599998967244173*^9}, {3.599999031887761*^9, 
   3.5999990785253983`*^9}, 3.5999991505011597`*^9, {3.60067619505227*^9, 
   3.600676195415215*^9}, 3.60138602053524*^9, {3.607429643154152*^9, 
   3.60742965332517*^9}, 3.607430075464189*^9, {3.607430119374009*^9, 
   3.607430338750307*^9}, {3.607430408471323*^9, 3.607430461779922*^9}, {
   3.607430546133355*^9, 3.607430579954646*^9}, {3.607431805744916*^9, 
   3.607432028681036*^9}, {3.637560644871584*^9, 3.637560645260613*^9}, {
   3.637561443933708*^9, 
   3.6375614927949877`*^9}},ExpressionUUID->"f9bb16e8-f229-4f89-901d-\
d1ae3e127908"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"err", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Background", "\[Rule]", "White"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", ".01", "]"}], "}"}]}]}], "]"}], ",", 
   "\"\<Error function e, as a function of: \
\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{
SubscriptBox[\"y\", \"i\"], RowBox[{\"h\", \"(\", 
SubscriptBox[\"x\", \"i\"], \")\"}]}], \
TraditionalForm]],ExpressionUUID->\"7d2dbdc4-1faa-4fd5-abaf-97b6ccc859f9\"]],\
ExpressionUUID->\"192f7351-47ae-4ce5-9b73-b9484df48827\"]\)\>\""}], 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.5999944603634357`*^9, 3.599994493588257*^9}, {
  3.599995527890851*^9, 3.599995607101728*^9}, {3.59999759190174*^9, 
  3.599997634142555*^9}, {3.599998769467708*^9, 3.599998882743507*^9}, {
  3.5999990056548223`*^9, 3.599999008217857*^9}, {3.599999195190351*^9, 
  3.5999991997650547`*^9}, {3.599999331756563*^9, 3.599999344516803*^9}, {
  3.600092833145628*^9, 3.6000928702255983`*^9}, {3.60009296960063*^9, 
  3.600092970173424*^9}, {3.6074305028656063`*^9, 
  3.607430508832467*^9}},ExpressionUUID->"d42f9947-8486-49de-a5d0-\
1de71ec9bb33"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       Thickness[0.01], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQnbx+wvv//7/vZwCDD/Z1qrcOpLUj+LNmK086y4fg
z7/fkR/I+Q3OF7sQ7K8p+hXOPxEQ7HJa9Quc76GpWqKs9BnOt1oXs+y8/ic4
/1dXmrCR5kc4/+v3JVPj1D/A+UeUJpnsy30H51uz1m/WTnkD509xMDd3rH0F
5yfPiXj6av4LOP/8cjlOxlnP4Hw5ng2G+7c9gfO5FJ6df7nqEZyfE9I6Y8WK
B3B+wuH7p+Um3YXzlWz/BR5tvAnnr8zY/HD3tqtwftbnjTHdsy7C+Xp1rJFs
yqfhfOHKK9zTZh+G86+n5Gitf7wNzi9l/t6r2LkOzi+v0uo7OXUenH8vX9k0
xqMfzr/WfuzXhQh/OB8AvXOlrw==
        "]], 
       LineBox[CompressedData["
1:eJxFz21I0wEQBvA5s0XkQMVwk0wNoyhGoC5touYLivlCWzMjy1FarrSBlk4l
YeG0xaZ/QQsXuilprYnWejHFSelYg8o022LQbJiNNU3LLRcbywri7uB4+H05
nos6I2CXkUkkUvrf/ZemFr1npqgghfR/VIy+2m1jbHCXsPvnnJEHtpj5w735
5eBoFpMveCkAx+aL2iOU1eDa4bwjy2ENYLo1dg/H2Ag+vUVGtmSLwKTE6k/p
AWJwhjylK6hRCu7UaCiZxa3g6i/BrKQdBFjnE6sE3nbwOUZFs2mkE3y/LSH1
zoFu8CadYpwS1wMu+bU58eJBBfjGA0cYTaEEJ9NGg6z9feABB9f/0qMBsFDW
ZpNMD4Fb+SIT79oIONCVyxo8OgW2XtbH1TS9Aq+M5k3WGmbxfksvr1RiBMes
q0OEt83gec1OLavcAubesl5fIqzgnn6pNvfmAv57svJbQN0ieJqnustusoGf
BNJPuSvs4N3yKDsl1wH21DT51Jxl8JInnHovYQWsPN/yPnzXdzBx+LWUFvMD
TBWo06ZC18ATGc+0T+lOsK+yhFlIdYH9KO+69vnQzOyqyRzSOvb5OGgPXUNn
VBiIvHW0zPs5QexBR9LDJS6yG5x1XLJ3LgTdMVt2gYhHM/QRy1vr0ELuoY60
q+gXi9ykehH6mL9M+lWCbkj17jfI0YaxD5XicXRwjjNU+xxdbKZOuHToVXcm
tfQNenv846G0eTRP97awfgGt4iz9fmhDJ1VFF0Stopv9kt1FTvQMcUJBuNH0
yCtZBi/67DCxurGB/gMrHxCb
        "]]}, {}}, {{}, {}, {}}}, Axes -> True, AxesLabel -> {None, None}, 
    AxesOrigin -> {0, 0}, Background -> GrayLevel[1], 
    BaseStyle -> {"Palatino", Bold, 16}, GridLines -> Automatic, ImageSize -> 
    600, Method -> {}, PlotRange -> {{-1.5, 1.5}, {-0.5, 1.5}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], Automatic}],
   "\"Error function e, as a function of: \
\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nSubscriptBox[\\\"y\\\", \\\"i\\\"], \\n\\n   RowBox[{\\\"h\\\", \\\
\"(\\\", \\nSubscriptBox[\\\"x\\\", \\\"i\\\"], \\\")\\\"}]}], \\n  \
TraditionalForm]]]]]\\)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6074305182405767`*^9},
 TextAlignment->Center,ExpressionUUID->"334c5d3c-7a22-48a7-9ca0-c0fa493bced4"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.601386029889903*^9, 3.6013860331555233`*^9}, 
   3.60743052878615*^9},ExpressionUUID->"aa7ff82f-47c9-46c2-8a3f-\
935edd08c35e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tMaximal-margin classifiers"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.59989587689098*^9, 3.599895892048147*^9}, {3.599895942273438*^9, 
  3.599895956106649*^9}, {3.599997812882894*^9, 3.5999978173844213`*^9}, {
  3.600001523801238*^9, 3.6000015293877583`*^9}, {3.600001797005638*^9, 
  3.600001802768417*^9}},
 CellTags->
  "sec:max_margin",ExpressionUUID->"ed58420e-a71e-415e-8225-5acbfcd08dd0"],

Cell[CellGroupData[{

Cell["Margin-based Generalization Bounds", "Subsection",
 CellChangeTimes->{{3.6000018604500504`*^9, 3.600001896893854*^9}},
 CellTags->
  "margin_bound",ExpressionUUID->"b4618a38-f3dc-4bd5-b10e-3eb03253329f"],

Cell[TextData[{
 "In the previous section we have introduced linear classifiers, the 0/1 \
error function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "(", 
    RowBox[{"h", ",", "i"}], ")"}], TraditionalForm]],ExpressionUUID->
  "b59b66e5-894f-4015-9a0a-952d0e6db627"],
 " and the risk functional ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["err", "\[CapitalDifferentialD]"], "(", "h", ")"}], 
   TraditionalForm]],ExpressionUUID->"3b94c52c-98cf-4828-85d4-41e3aac82196"],
 ". Starting from these definitions, a more optimization-friendly performance \
measure can be obtained by using the definition of ",
 StyleBox["functional margin",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "i"], TraditionalForm]],ExpressionUUID->
  "92e48081-8fbe-475a-ad0c-98e93e3c6ff0"],
 ", of a classifier ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "e56a5d7a-9f4b-48af-b94d-95877fe407cc"],
 " over a sample ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], ",", 
     SubscriptBox["y", "i"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "f813c08c-63bc-4bb7-87e9-5dbb4988859f"],
 ":"
}], "Text",
 CellChangeTimes->{{3.599994302797205*^9, 3.5999943241344013`*^9}, {
   3.599994362972232*^9, 3.5999944444415607`*^9}, {3.599995241059703*^9, 
   3.5999952572511787`*^9}, {3.599995618292294*^9, 3.599995667540577*^9}, {
   3.599995727457095*^9, 3.599995748864458*^9}, {3.599995787655945*^9, 
   3.599995912903537*^9}, {3.599995962020927*^9, 3.599996010283751*^9}, {
   3.599996073913365*^9, 3.599996074383387*^9}, {3.599997644131403*^9, 
   3.599997654536499*^9}, 3.599999465685328*^9, {3.599999741572907*^9, 
   3.5999997654585238`*^9}, {3.6000013609599867`*^9, 3.600001361172513*^9}, {
   3.600001563186242*^9, 3.600001626437427*^9}, {3.600676347164753*^9, 
   3.600676371773777*^9}, {3.601586899455288*^9, 3.601586910593154*^9}, 
   3.6028564935711327`*^9, {3.607429719504444*^9, 3.60742972158954*^9}, {
   3.607430604408039*^9, 3.607430656303341*^9}, {3.637563102385953*^9, 
   3.637563124193836*^9}, {3.637563496670677*^9, 
   3.637563497522789*^9}},ExpressionUUID->"7722d8a6-b60e-4ff8-a851-\
e8b4a7cfb58c"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Gamma]", "i"], "=", 
  RowBox[{
   SubscriptBox["y", "i"], "h", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], ")"}], "."}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.5999959493023653`*^9, 3.599995953719469*^9}, {
  3.599996014195363*^9, 3.599996034756254*^9}, {3.599999769055859*^9, 
  3.599999772772359*^9}, {3.600001653935862*^9, 3.60000165485928*^9}, {
  3.600091396276722*^9, 
  3.600091400954399*^9}},ExpressionUUID->"d5a5d358-b2b9-4e66-9997-\
3cd9f5030214"],

Cell[TextData[{
 "Note that whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "i"], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"7c70c792-d5a2-418a-b13d-8e2c54f90f5c"],
 ", we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"e", "(", 
     RowBox[{"h", ",", "i"}], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"d49d6f41-75fa-45f1-a90d-56e6e546e7dd"],
 " and the sample ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "0bcb2bf4-efee-4dfb-a299-f50dd325f02b"],
 " is correcty classified, while if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "i"], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"152e6f80-f9a7-4526-8a04-27b8a8f2de31"],
 ", we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"e", "(", 
     RowBox[{"h", ",", "i"}], ")"}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"02ca24cf-7647-4f13-8597-4075508afa01"],
 " and the sample is missclassified. \nWe can than define the ",
 StyleBox["minimal functional margin",
  FontSlant->"Italic"],
 " of a classifier using a scoring function ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "bb792fcd-0740-4eb1-b0dd-56c86697d518"],
 " on a training set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "788913e7-20ff-4547-b3ba-4e893873d8f8"],
 ", as"
}], "Text",
 CellChangeTimes->{{3.599996048918401*^9, 3.599996060837015*^9}, {
  3.59999618849629*^9, 3.59999619102376*^9}, {3.59999771033974*^9, 
  3.599997750823564*^9}, {3.5999977831216793`*^9, 3.5999978863941708`*^9}, {
  3.599997995922997*^9, 3.599997999004837*^9}, {3.599999476675037*^9, 
  3.5999995251109858`*^9}, {3.599999778635126*^9, 3.5999997804083443`*^9}, {
  3.6000016490258417`*^9, 3.600001673828826*^9}, {3.60158691936445*^9, 
  3.601586922364491*^9}, {3.602856522113866*^9, 3.602856523214366*^9}, {
  3.60742973303699*^9, 3.607429835232155*^9}, {3.607431069027816*^9, 
  3.607431085163354*^9}, {3.637563146992399*^9, 
  3.637563165012268*^9}},ExpressionUUID->"b7a5ce11-d890-429d-a2d1-\
32222b4c6707"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["m", "S"], 
   RowBox[{"(", "h", ")"}]}], "=", 
  RowBox[{
   SubscriptBox["min", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ",", 
       SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
   SubscriptBox["\[Gamma]", "i"]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.5999978955436907`*^9, 3.599997988866353*^9}, 
   3.599999793796834*^9, {3.600001681671842*^9, 
   3.6000016844109898`*^9}},ExpressionUUID->"564f0eea-78ee-4775-8429-\
580f8c052732"],

Cell[TextData[{
 "Using this quantity we can now state without proving the following result \
from the Generalization Theory of max-margin classifiers ",
 ButtonBox[Cell["[1]", "Citation",ExpressionUUID->
  "d83d1be8-370c-433d-9a3b-4a7853c7ee39"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ". "
}], "Text",
 CellChangeTimes->{{3.6000021520783777`*^9, 3.600002156522519*^9}, {
  3.60742984679766*^9, 
  3.6074298490243063`*^9}},ExpressionUUID->"b0201633-e4e6-4c4f-aadb-\
9803f821868e"],

Cell[TextData[{
 StyleBox["Theorem 1. ", "Subsection"],
 "Let ",
 Cell[BoxData[
  FormBox["\[ScriptCapitalH]", TraditionalForm]],ExpressionUUID->
  "bed2366d-d24a-4678-8424-a5569abbec70"],
 " be the set of linear scoring functions having a unit weight vector ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "c23e4013-e787-4180-8e54-29b58c94efe6"],
 ", on an input space ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "8436b161-1e66-438b-83bc-d343a00e6635"],
 ". For any probabilty distribution on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "\[Times]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"2184adeb-2329-4934-8ef6-9ccfc5f31424"],
 ", with support on a ball of radius ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "e4224b59-486c-4299-902e-6875c7667e2c"],
 " around the origin, with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", "\[Delta]"}], TraditionalForm]],ExpressionUUID->
  "bd79560c-dd40-4670-bfa5-a7517d966606"],
 " over ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ccbee44b-7f4a-493b-b4b1-0152035583f0"],
 " random samples ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "7cf9b8b4-5089-4d90-a789-6431951c5e51"],
 ", the error of any classifier using a scoring function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "\[Element]", "\[ScriptCapitalH]"}], TraditionalForm]],
  ExpressionUUID->"c6fa34d1-8868-4b6b-8ebc-4dda8545275b"],
 " with a minimal margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["m", "S"], "(", "h", ")"}], " ", "\[GreaterEqual]", " ", 
    "\[Gamma]"}], TraditionalForm]],ExpressionUUID->
  "f2630899-e50b-48da-8448-eb57ea6bd2f5"],
 " is bounded by"
}], "Text",
 CellChangeTimes->{{3.600002045349361*^9, 3.600002064902932*^9}, 
   3.60000216302361*^9, 3.600002197076413*^9, {3.600007053813912*^9, 
   3.600007054102824*^9}, {3.6074315808767147`*^9, 3.607431582604834*^9}, {
   3.607432079682301*^9, 3.607432101606476*^9}, {3.63756335849697*^9, 
   3.637563374431131*^9}, {3.637563405298534*^9, 3.6375634281897793`*^9}, {
   3.6375635551548777`*^9, 3.637563593847636*^9}, {3.637563632802895*^9, 
   3.637563640810668*^9}},
 CellTags->"theorem1",ExpressionUUID->"e256784a-bcf8-4e6a-ac56-698afbeb14e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["err", "\[CapitalDifferentialD]"], 
     RowBox[{"(", "h", ")"}]}], "\[LessEqual]", "\[Epsilon]"}], "=", 
   RowBox[{
    FractionBox["2", "n"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"64", 
         SuperscriptBox["R", "2"]}], 
        SuperscriptBox["\[Gamma]", "2"]], "log", " ", 
       FractionBox["\[ScriptE]n\[Gamma]", 
        RowBox[{"4", "R"}]], "log", " ", 
       FractionBox[
        RowBox[{"128", 
         SuperscriptBox["R", "2"]}], 
        SuperscriptBox["\[Gamma]", "2"]]}], "+", 
      RowBox[{"log", " ", 
       FractionBox["4", "\[Delta]"]}]}], ")"}]}]}], 
  ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600000006374289*^9, 3.6000002062180643`*^9}, 
   3.6000002573346148`*^9, {3.600000475231299*^9, 
   3.60000048884702*^9}},ExpressionUUID->"20edb297-8349-4427-a905-\
c1d9d6a8c7cd"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "+"]}], TraditionalForm]],
  ExpressionUUID->"685690ad-a009-4b4c-866d-b7ae7b9f85b6"],
 "and provided that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", 
    FractionBox["2", "\[Epsilon]"]}], TraditionalForm]],ExpressionUUID->
  "fd4a54e9-c8d1-4289-8a4f-f872f0ab1479"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"64", 
      SuperscriptBox["R", "2"]}], 
     SuperscriptBox["", 
      SuperscriptBox["\[Gamma]", "2"]]], "<", "n"}], TraditionalForm]],
  ExpressionUUID->"7bf3fafd-97df-49b6-bd4f-e93155e77dc0"],
 ".\nThis bound tells us that the generalization ability of a linear \
classifier trained on a set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "79404c34-ef75-4eaf-b5aa-973d6bc1e396"],
 " composed of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "d090d7fd-056b-4279-b0bb-969226c3d235"],
 " random samples drawn from \[ScriptCapitalD], is directly related to the \
minimum margin acheived by the classifier on the training set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "649b5e53-9d20-4620-ad4a-60a095c4b9a4"],
 ". We also note that the generalization does not depend on the \
dimensionality of the input space ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "218701cd-7dc4-4b83-bf34-a3f2ac25c6cf"],
 ".\nIn other words, this theorem tells us that whenever ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "003a54f9-0de8-4341-868a-4fc3203e242d"],
 " is normalized to one, a classifier with a large minimal functional margin \
\[Gamma] will also have a low true risk on \[ScriptCapitalD] and thus perform \
well also on unseen samples drawn from \[ScriptCapitalD].\n"
}], "Text",
 CellChangeTimes->{{3.600000213585745*^9, 3.600000221727106*^9}, {
   3.600000261689476*^9, 3.600000292450082*^9}, {3.600000520930485*^9, 
   3.6000006628593903`*^9}, {3.600000859861929*^9, 3.600001272563404*^9}, {
   3.6000013728450623`*^9, 3.600001439133802*^9}, {3.600001709608714*^9, 
   3.6000017098448877`*^9}, {3.600001781941401*^9, 3.600001783769779*^9}, {
   3.6006764429267817`*^9, 3.600676445095525*^9}, 3.601558704488698*^9, {
   3.602856581445754*^9, 3.6028565916141043`*^9}, {3.6074307306914167`*^9, 
   3.607430760664345*^9}, {3.607430803758081*^9, 3.607430888817957*^9}, {
   3.607430919063895*^9, 3.607431044586088*^9}, {3.607431105422138*^9, 
   3.607431144164812*^9}, {3.607431268806119*^9, 3.607431350873888*^9}, {
   3.6074317901328917`*^9, 3.607431791885376*^9}, 
   3.607432142163611*^9},ExpressionUUID->"492d6e93-e7d7-4d9f-84d7-\
a76a1efa19f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal margin classifier: hard margin", "Subsection",
 CellChangeTimes->{{3.6000018233736467`*^9, 3.6000018292632837`*^9}, {
  3.600511116033592*^9, 
  3.600511153981496*^9}},ExpressionUUID->"6a20980b-8921-4337-bf90-\
0fe2d973132c"],

Cell[TextData[{
 "Recall that the functional margin on a sample was defined as ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["\[Gamma]", 
      RowBox[{"i", "="}]], 
     SubscriptBox["y", "i"], 
     RowBox[{"h", "(", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"], ")"}]}], "InlineFormula"], 
   TraditionalForm]],ExpressionUUID->"d9c6f686-16d8-4aec-bd32-6ca2c5f73811"],
 ". For a linear classifiers this definition specializes to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "i"], "=", 
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"4e2adeac-0fc8-4425-b281-ff478721f9b9"],
 ". This quantity obviously depends on the norm of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "47d80e9d-9db6-4662-804a-37fb1028d027"],
 ", as it is affected by any rescaling of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "cf6a70c3-a633-46d5-8958-62862ca84fe5"],
 ". In order to remove this dependency, instead of forcing ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "30628874-736c-4c48-b9ca-2f3775a96a76"],
 " to be normalized to 1 (as in Theorem 1), we consider the ",
 StyleBox["geometric margin",
  FontSlant->"Italic"],
 ", which is the Euclidean distance of the point to the hyper-plane given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], "+", "b"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"c82984c1-118f-4e0a-b8b5-9aa7566c8d81"],
 " .\nFor any ",
 StyleBox["correctly classified",
  FontVariations->{"Underline"->True}],
 " sample ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ",", 
     SubscriptBox["y", "i"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "e72d49a0-a93a-4c98-8cfe-4d818c9fbcbd"],
 ", the geometric margin can be computed as"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfS52Y2rppVeO65hXpIPou/fe5oPo68o/CkA0x4nu
6SC694P+PBDtEyezGER7LP66DEQ/6luzBkRvaXbdCaJ9T8n8B9Fiv54alwFp
vYfHw0F0w+mZCSA6Qdg1DURzumgXgegZuiwVIFrl/UcwLeFV3w6iX3F1gmll
rx0zweqcjWaB6JiKuvkgev8xkUUg+tdig5Mg+lT3gcsg2k5pyV0Qffj/2/sg
+onM5fjqq68c536RTgDRLRsOpoDonvMO6SC669kNqYUPXjkeuTdFA0TLLPGp
BdF/v9eD6TW9rFZSUq8dZXxd7EC0W2uoK4i2e5cDpgFdQLL6
  "],ExpressionUUID->"f3eed6f6-045c-4a49-a6a3-13fe302ee9d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
    SubscriptBox["y", "i"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], "|", 
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}], "+", "b"}], "|"}]}], 
  ","}]], "DisplayFormula",
 CellChangeTimes->{{3.60000405249175*^9, 3.600004093162671*^9}, {
  3.60000413469939*^9, 3.600004162886248*^9}, {3.6000042185678997`*^9, 
  3.6000042203326073`*^9}, {3.600004436032797*^9, 3.600004463584036*^9}, {
  3.600004545307625*^9, 3.6000045933056927`*^9}, {3.600004705129046*^9, 
  3.600004716759162*^9}, {3.6000048170476103`*^9, 3.600004829213614*^9}, {
  3.60000499390374*^9, 3.6000049958444643`*^9}, {3.601587007749618*^9, 
  3.601587028944851*^9}},ExpressionUUID->"f4790b0b-9e80-46fc-b708-\
370229d25ca6"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "c0332700-1a70-4ffc-995a-13541d0e2983"],
 " has the role of inverting the sign of the projection, in case the sample \
was negative. As we can see, this is basically a rescaled version of the \
functional margin defined above, making it independent from the norm of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "342e6442-9b1a-4bab-8005-f738baf1486f"],
 ".\nThe minimal geometric margin over a set of examples ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "93996f9f-5e05-4e60-a972-d9e4c8adee33"],
 " can then be defined as"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005147477468*^9}, {3.600005887337599*^9, 3.600005971401277*^9}, {
   3.601587422816578*^9, 3.6015874927953777`*^9}, {3.607431704532465*^9, 
   3.60743176222755*^9}},ExpressionUUID->"1524060c-0df2-487a-9d72-\
014e8e48f5eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["g", "S"], 
   RowBox[{"(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
  RowBox[{
   SubscriptBox["min", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ",", 
       SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   SubscriptBox["y", "i"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], 
    "."}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.6015874543083487`*^9, 3.6015874979330187`*^9}, {
   3.601587531451908*^9, 3.601587553132724*^9}, 
   3.601587593340803*^9},ExpressionUUID->"751b947d-0e0a-4cb4-afc6-\
8d28351232ae"],

Cell["\<\
Using this definition and following the intuition provided by Theorem 1 (that \
we should select a classifier with a large minimal margin) we could thus \
define the following max-margin objective function, maximizing the \
generalization ability of the classifier\
\>", "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005147477468*^9}, {3.600005887337599*^9, 3.600005971401277*^9}, {
   3.601587422816578*^9, 3.60158744344695*^9}, {3.6015875835414953`*^9, 
   3.601587584494212*^9}, {3.601587647951623*^9, 3.601587653187126*^9}, {
   3.60158768521929*^9, 3.601587687820085*^9}, {3.601587737498707*^9, 
   3.601587737953657*^9}, {3.607431559672174*^9, 3.60743164211471*^9}, {
   3.637564204633869*^9, 
   3.6375642278032227`*^9}},ExpressionUUID->"6017dc00-c123-4f62-8b33-\
89b9d3bc7909"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   SubscriptBox["min", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ",", 
       SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
   SubscriptBox["y", "i"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], 
  ","}]], "DisplayFormula",
 CellChangeTimes->{{3.600005137443612*^9, 3.600005170947382*^9}, {
   3.600007440536175*^9, 3.600007441317205*^9}, {3.602778391536978*^9, 
   3.602778399922*^9}, {3.602778480605424*^9, 3.602778482625045*^9}, 
   3.6074316295513077`*^9},ExpressionUUID->"b349112e-fc70-402b-b910-\
28fb1f8b7973"],

Cell[TextData[{
 "for any linearly separable problem ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "641c6e30-f00e-46b0-9306-4bc39c6af37a"],
 " (a problem for which there exist a linear scoring function ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], TraditionalForm]],ExpressionUUID->
  "28c45e15-35f9-4f50-bcab-3b6b8d32002b"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["m", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], ">", "0"}], 
   TraditionalForm]],ExpressionUUID->"b7e01614-df20-467e-a01a-123186f281f4"],
 ").\nThis is a non-linear non-convex objective function, which is very is \
difficult to optimize. A way to ease the optimization could be to impose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"], "=", "1"}],
    TraditionalForm]],ExpressionUUID->"5ae7fb5c-aa8e-4514-bfa4-cde12aa70e0b"],
 " (as also suggested also by Theorem 1), however this would result in a \
problem with quadratic constraints (Second Order Cone Programming), which is \
still not immediate to solve.\nAlternatively, since we are considering a \
linearly separable dataset ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "06b607cf-9294-47a6-9114-6099a34c56b9"],
 ", instead of normalizing ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "ade39d62-eafd-407e-aa8e-50409e62b091"],
 " by imposing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"], "=", "1"}],
    TraditionalForm]],ExpressionUUID->"50e23611-3788-4e25-84f7-2a3eb2cff276"],
 ", we could equivalently rescale it until ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["m", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"fee81124-f8db-4993-b2a6-625b6392ca1f"],
 ", resulting in the following optimization problem"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.600006296152946*^9, 3.600006338062229*^9}, {3.60000639992452*^9, 
   3.6000064036079407`*^9}, {3.600006887328807*^9, 3.600006926233221*^9}, {
   3.600676541491768*^9, 3.600676547884078*^9}, {3.601587689418614*^9, 
   3.601587713721084*^9}, {3.6074316248336983`*^9, 3.6074316635456877`*^9}, {
   3.607432234252885*^9, 3.607432276677658*^9}, {3.637564262008259*^9, 
   3.6375643193380127`*^9}},ExpressionUUID->"127dcb57-4878-42b7-a48d-\
f88a6040523a"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["max", 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], ",", "b"}]], 
  FractionBox["1", 
   RowBox[{"\[LeftDoubleBracketingBar]", 
    StyleBox["w",
     FontWeight->"Bold"], 
    "\[RightDoubleBracketingBar]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", ".", "t", ".", " ", 
    SubscriptBox["min", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox[
         SubscriptBox["x", 
          StyleBox["i",
           FontWeight->"Plain"]],
         FontWeight->"Bold"], ",", 
        SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]]}], " ", 
   SubscriptBox["y", "i"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", 
  "1."}]}], "DisplayFormula",
 CellChangeTimes->{{3.600005137443612*^9, 3.600005170947382*^9}, {
   3.6000062569968653`*^9, 3.600006282663604*^9}, 3.600006347788377*^9, {
   3.6000070849495296`*^9, 3.600007113916357*^9}, {3.600007430799041*^9, 
   3.6000074343497953`*^9}},ExpressionUUID->"e3c29145-6200-4416-8bcf-\
26c61a781ef8"],

Cell[TextData[{
 "By noting that the maximization of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   TraditionalForm]],ExpressionUUID->"3dd723c4-836f-4fd9-97b8-aceeb54a5cdc"],
 " can be equivalently replaced by a minimization of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"], 
   TraditionalForm]],ExpressionUUID->"425f2e84-7ac9-4a2b-b80c-8135a6d8a792"],
 " and that the constraint ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["min", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], ",", 
         SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], " ", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"8edb2a74-ec2b-4ca8-addb-c8126c767c9e"],
 " can be replaced by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "\[GreaterEqual]", 
     "1"}], ",", 
    RowBox[{"\[ForAll]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], 
         RowBox[{"i", ","}]], 
        SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]}]}], 
   TraditionalForm]],ExpressionUUID->"f806699e-4230-4d1f-9978-1a5b703ff2d5"],
 ", we obtain the final objective function of the maximal margin classifier"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006949860783*^9, 3.6000069561934233`*^9}, {3.601587795583527*^9, 
   3.601587811156686*^9}},ExpressionUUID->"0231a288-08ac-4615-8957-\
96f4d2e2fe08"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["min", 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], ",", "b"}]], " ", 
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], "\[CenterDot]", 
   StyleBox["w",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", "1"}], "-", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], "\[LessEqual]", 
   "0"}], ",", "   ", 
  RowBox[{"\[ForAll]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], 
       RowBox[{"i", ","}]], 
      SubscriptBox["y", "i"]}], ")"}], "\[Element]", 
    RowBox[{"S", "."}]}]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60000667883209*^9, 3.6000067752439413`*^9}, {
   3.6000070814275303`*^9, 3.600007111840486*^9}, {3.600007427356236*^9, 
   3.600007427719923*^9}, 3.600523071368231*^9},
 CellTags->
  "eq:max_margin_hard",ExpressionUUID->"1ef6d4a1-d781-4f70-a8b2-b50cc271060e"],

Cell[TextData[{
 "The classifier obtained by solving problem (",
 
 CounterBox["DisplayFormulaNumbered", "eq:max_margin_hard"],
 ") is also called ",
 StyleBox["hard-margin classifier",
  FontSlant->"Italic"],
 ", as it requires linear separability of the data, imposing a functional \
margin of 1, for all the training points. Indeed, with this approach any \
feasible solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["b",
      FontWeight->"Plain"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "36f91336-ee43-4d60-a3f6-aafa9fd7a248"],
 " will correctly classify all the training points with a functional margin \
of at least one. The minimal geometric margin of the optimal classifier can \
thus be computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["min", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "i"], ",", 
          SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
      FractionBox["1", 
       RowBox[{"\[LeftDoubleBracketingBar]", 
        StyleBox["w",
         FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"\[LeftDoubleBracketingBar]", 
         StyleBox["w",
          FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
       SubscriptBox["min", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "i"], ",", 
           SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
       RowBox[{
        SubscriptBox["y", "i"], "(", 
        RowBox[{
         RowBox[{
          StyleBox["w",
           FontWeight->"Bold"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], " ", "=", 
      FractionBox["1", 
       RowBox[{"\[LeftDoubleBracketingBar]", 
        StyleBox["w",
         FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], " "}]}]}], 
   TraditionalForm]],ExpressionUUID->"baed5f90-02ca-4daf-b546-0d24a28aac9f"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, 
   3.601386038116662*^9, {3.601580874222579*^9, 3.6015809456751137`*^9}, {
   3.6015867987659073`*^9, 3.60158683093867*^9}, {3.60158687541459*^9, 
   3.601586879292193*^9}, {3.601587051065177*^9, 3.601587075992231*^9}, {
   3.6015871204221783`*^9, 3.601587236661607*^9}, 3.601587269857855*^9, {
   3.601587308767202*^9, 3.6015873855278673`*^9}, {3.601587828753072*^9, 
   3.601588071883095*^9}, {3.601622264602642*^9, 3.601622266385192*^9}, {
   3.602856707658133*^9, 3.602856774199655*^9}, {3.607432377958168*^9, 
   3.607432390255774*^9}, {3.6074324887112722`*^9, 3.607432502051855*^9}, {
   3.6074326608421707`*^9, 3.607432663009742*^9}, 3.6074339643873463`*^9, {
   3.637564474128066*^9, 
   3.637564497960371*^9}},ExpressionUUID->"8d3e6866-28dc-4c71-81ca-\
308c1d955121"],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, 
   3.601386038116662*^9, {3.601580874222579*^9, 3.6015809456751137`*^9}, {
   3.6015867987659073`*^9, 3.60158683093867*^9}, {3.60158687541459*^9, 
   3.601586879292193*^9}, {3.601587051065177*^9, 3.601587075992231*^9}, {
   3.6015871204221783`*^9, 3.601587236661607*^9}, 3.601587269857855*^9, {
   3.601587308767202*^9, 3.6015873855278673`*^9}, {3.601587828753072*^9, 
   3.601588071883095*^9}, {3.601622264602642*^9, 3.601622266385192*^9}, {
   3.602856707658133*^9, 3.602856774199655*^9}, {3.607432377958168*^9, 
   3.607432390255774*^9}, {3.6074324887112722`*^9, 
   3.6074325729420013`*^9}},ExpressionUUID->"305e7b61-f7a6-4a5b-946f-\
b7d02e036406"],

Cell[TextData[{
 "It can also be noticed that (",
 
 CounterBox["DisplayFormulaNumbered", "eq:max_margin_hard"],
 ") has the form of a standard ",
 StyleBox["Quadratic Programming (QP)",
  FontSlant->"Italic"],
 " problem (a quadratic objective function, with linear constraints). It can \
thus be solved using the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " QP solver, as showcased by the following code snippet:\n"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, 
   3.601386038116662*^9, {3.601580874222579*^9, 3.6015809456751137`*^9}, {
   3.6015867987659073`*^9, 3.60158683093867*^9}, {3.60158687541459*^9, 
   3.601586879292193*^9}, {3.601587051065177*^9, 3.601587075992231*^9}, {
   3.6015871204221783`*^9, 3.601587236661607*^9}, 3.601587269857855*^9, {
   3.601587308767202*^9, 3.6015873855278673`*^9}, {3.601587828753072*^9, 
   3.601588071883095*^9}, {3.601622264602642*^9, 3.601622266385192*^9}, {
   3.602856707658133*^9, 3.602856774199655*^9}, {3.607432377958168*^9, 
   3.607432390255774*^9}, {3.6074324887112722`*^9, 
   3.6074325188927917`*^9}},ExpressionUUID->"6c85eedc-b88c-4f75-be4e-\
9c44f5bf450a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainMaxMargin", "[", 
    RowBox[{"fTr_", ",", "yTr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "nTr", ",", "fTr2", ",", 
       "d", ",", "w", ",", "v", ",", "b", ",", "i", ",", "sol", ",", 
       "cnstr"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"cnstr", "=", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<=", "0"}], "&"}], "/@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fTr", ".", "w"}], "+", "b"}], ")"}], "yTr"}]}], 
            ")"}]}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"w", ".", "w"}], ",", "cnstr"}], "}"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"w", ",", 
           RowBox[{"{", "b", "}"}]}], "]"}], ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\n", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600523181274065*^9, 3.6005232173178873`*^9}, {
  3.601373409791304*^9, 3.601373430582547*^9}, {3.63756456790762*^9, 
  3.6375645689313183`*^9}},ExpressionUUID->"ba32f8aa-8da6-4cc1-b4dd-\
bcb22369dc27"],

Cell[TextData[{
 "\nAs it can be seen, the basic max-margin classifier can be implemented in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using just a few lines of code. \nHere is an example, using the SVM \
package imported in the initialization cell of the notebook. First we make \
use of the function ",
 StyleBox["createData", "Code"],
 " in order to draw an arbitrary training set. After calling this function, \
it is possible to draw samples in the plot by clicking and dragging. A single \
click in any point of the plot will change the color/label of the samples \
that are going to be drawn subsequently.\n"
}], "Text",
 CellChangeTimes->{{3.600523190135332*^9, 3.600523306766039*^9}, {
  3.6005234114043703`*^9, 3.600523464140204*^9}, {3.6005235065280943`*^9, 
  3.600523538476019*^9}, {3.600676656209612*^9, 3.600676761650674*^9}, {
  3.601373446221478*^9, 3.6013735793660107`*^9}, {3.601386040044692*^9, 
  3.601386042277657*^9}, {3.601588084111608*^9, 3.601588084226252*^9}, {
  3.602856836313241*^9, 
  3.602856844435326*^9}},ExpressionUUID->"da376dd1-1524-4736-bbd0-\
fb4977ef610d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.599821879624202*^9, 3.599821882910767*^9}, {
   3.5998374136334047`*^9, 3.599837414563703*^9}, {3.600524449261044*^9, 
   3.600524449764729*^9}, 3.6005251182019*^9, {3.601286452426608*^9, 
   3.601286459340432*^9}, {3.60129586541825*^9, 3.601295882607009*^9}, {
   3.601297623282825*^9, 3.601297623691505*^9}, {3.6015599058363*^9, 
   3.6015599096616507`*^9}},ExpressionUUID->"ab736fc3-bd75-4939-8c10-\
739b2eda379b"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$824 = MousePosition["Graphics"]; 
     Private`p$824 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$824], 2], 
          Union[
           Partition[Private`pt$824, 2]]}, 1]]; 
     If[Private`s$824 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$824}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$824}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$824 = {}; 
     Private`s$824 = Private`s$824 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.600020789808509*^9, 3.600020856659668*^9, 3.600021064090733*^9, 
   3.600021134472349*^9, 3.600025702389955*^9, 3.600026032842807*^9, 
   3.600026264079362*^9, 3.600026352841942*^9, 3.6000264126599073`*^9, 
   3.6000266007209597`*^9, 3.600027976298297*^9, 3.600028028405682*^9, 
   3.600176728446885*^9, 3.600181734032493*^9, {3.6001820217877293`*^9, 
   3.6001820304202747`*^9}, 3.600183345188478*^9, 3.600193136661227*^9, 
   3.60019316869851*^9, {3.600193335742634*^9, 3.600193344481193*^9}, 
   3.600438694419705*^9, {3.600439402461076*^9, 3.6004394069642553`*^9}, 
   3.600439466620039*^9, {3.60044152359057*^9, 3.600441528715617*^9}, 
   3.600450816131914*^9, 3.600451015125469*^9, {3.6005233399931498`*^9, 
   3.6005233509012213`*^9}, {3.600523680628913*^9, 3.600523704957892*^9}, 
   3.600524451211219*^9, 3.6005249111054897`*^9, 3.600524941735911*^9, {
   3.6005251156066513`*^9, 3.6005251187154427`*^9}, 3.600525168965639*^9, 
   3.600525292059767*^9, {3.600525322085216*^9, 3.600525330520967*^9}, 
   3.600526153903242*^9, 3.600526235268276*^9, 3.600526277068296*^9, {
   3.600526507556377*^9, 3.6005265656547403`*^9}, 3.600527230231511*^9, 
   3.600527878259603*^9, 3.60052839679093*^9, 3.600528963692533*^9, 
   3.60054517201192*^9, 3.6005464231918573`*^9, 3.600547776709139*^9, 
   3.600602781421591*^9, 3.600603522757304*^9, 3.600603576649341*^9, 
   3.600603945564912*^9, 3.6006129983382263`*^9, 3.6006138118956957`*^9, 
   3.6006326440948353`*^9, {3.600671117185631*^9, 3.600671117554494*^9}, {
   3.600671642124771*^9, 3.600671642372834*^9}, {3.600671803610708*^9, 
   3.600671803934524*^9}, 3.600671901390617*^9, 3.600672265372055*^9, {
   3.600672525750431*^9, 3.600672526281946*^9}, 3.601206370211595*^9, 
   3.601209436802705*^9, 3.6012114669108763`*^9, {3.6012122645074587`*^9, 
   3.601212290623011*^9}, 3.601212668051188*^9, 3.601213356298387*^9, 
   3.601214040242144*^9, 3.6012146080914593`*^9, 3.601218004364975*^9, {
   3.601286272870986*^9, 3.601286273244032*^9}, 3.60128646017093*^9, {
   3.601295889847659*^9, 3.6012958903741693`*^9}, 3.60129593000884*^9, 
   3.601295972447404*^9, 3.601296089913126*^9, {3.601296909696188*^9, 
   3.601296910072357*^9}, {3.601297170354568*^9, 3.6012971707230797`*^9}, 
   3.601297661914198*^9, 3.601298894516284*^9, {3.6012989470897703`*^9, 
   3.601298947392427*^9}, 3.601301317888859*^9, {3.6013046934166737`*^9, 
   3.601304694792658*^9}, {3.601372884991866*^9, 3.601372909370584*^9}, {
   3.601375277091938*^9, 3.601375277422819*^9}, 3.601375321553116*^9, {
   3.601559771686858*^9, 3.6015597721311703`*^9}, 3.601559873485691*^9, 
   3.601559911233698*^9, 3.601559949586494*^9, 3.601560118698316*^9, 
   3.601562166296884*^9, {3.601563111904537*^9, 3.601563112365608*^9}, {
   3.601571644995494*^9, 3.601571645289775*^9}, {3.60157248923569*^9, 
   3.601572489691409*^9}, {3.6015726916095533`*^9, 3.60157270745105*^9}, {
   3.6016261561211157`*^9, 3.601626156488168*^9}, 3.601626313809525*^9, {
   3.602856855577692*^9, 3.602856855902801*^9}, {3.602859724447907*^9, 
   3.602859724787682*^9}, 3.607430517746237*^9, {3.6074324482242804`*^9, 
   3.6074324485746603`*^9}, {3.6375647250204363`*^9, 3.637564725294656*^9}, {
   3.6375655257112837`*^9, 3.637565526049217*^9}, {3.637565654608366*^9, 
   3.637565654942616*^9}, 3.637565699808429*^9, 3.637565819224247*^9, {
   3.637566042031205*^9, 3.637566042379583*^9}, {3.637573360944421*^9, 
   3.637573361280225*^9}, {3.637573767281982*^9, 3.6375737928044043`*^9}, 
   3.63757430800124*^9, {3.637574367287339*^9, 3.637574381441729*^9}, 
   3.6375818994135513`*^9, 3.637582140732675*^9, 3.637582201391613*^9, 
   3.637583464094264*^9, {3.6375855254372063`*^9, 3.637585530625801*^9}, {
   3.6375885584057913`*^9, 3.637588558971067*^9}, {3.637659185098592*^9, 
   3.637659189816359*^9}, {3.6376593282207327`*^9, 3.637659328738759*^9}, {
   3.637659648175241*^9, 3.637659648680043*^9}, 3.637659685247384*^9, {
   3.6376598721829567`*^9, 3.6376599029846077`*^9}, 3.637659935052434*^9, 
   3.6376600085031557`*^9, {3.637671396073104*^9, 3.637671396568841*^9}},
 TextAlignment->Center,ExpressionUUID->"daaae197-1f44-40d7-a70d-e5ef31ce91d1"]
}, Open  ]],

Cell[TextData[{
 "\nThe 2D coordinates and associated lables of the drawn points are then \
obtained by calling the function ",
 StyleBox["{fTr,yTr,fTe,yTe}=getTrTeData[trPerc]", "Code"],
 ", which also randomly split the data into a training and a testing set, \
with a specific percentage used for training.\nIn the following we will use a \
30/70% training/testing split.\nFinally, the classification algorithm can be \
run on the selected dataset by using the command ",
 StyleBox["runMaxMarginExperiment[fTr,yTr,fTe,yTe,trainMaxMargin]", "Code"],
 " . This command will produce a plot reporting, in the title, the training \
error, the testing error and the achieved minimal geometric margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "s"], "(", "h", ")"}], TraditionalForm]],
  ExpressionUUID->"81fcd417-8536-4217-8fa9-591ed9a6bca8"],
 " (the Euclidean distance of the closest point to the separation surface). \
The training points are represented with a large marker, while the testing \
points are represented by a small marker.\n"
}], "Text",
 CellChangeTimes->{{3.6005234829998817`*^9, 3.600523504323905*^9}, {
  3.6005235434255257`*^9, 3.600523553821986*^9}, {3.600523605337965*^9, 
  3.600523633003153*^9}, {3.60052421959686*^9, 3.6005242417990026`*^9}, {
  3.600525621685663*^9, 3.600525630796471*^9}, {3.600671934415372*^9, 
  3.600671937229444*^9}, {3.600676780381122*^9, 3.600676808730955*^9}, {
  3.600676840736334*^9, 3.60067691149102*^9}, {3.601286538518358*^9, 
  3.6012865418126507`*^9}, {3.6012871286472797`*^9, 3.601287158922804*^9}, {
  3.601373587673876*^9, 3.60137400323562*^9}, {3.6013741141416483`*^9, 
  3.601374143172521*^9}, {3.601374336687283*^9, 3.6013743372265387`*^9}, {
  3.6013860440825567`*^9, 3.601386046101164*^9}, {3.601588105156858*^9, 
  3.601588126085878*^9}, {3.602856877459526*^9, 3.602856922171908*^9}, {
  3.607432471489798*^9, 3.60743248038743*^9}, {3.607432616632223*^9, 
  3.607432616925638*^9}},ExpressionUUID->"c867ce95-efb0-4b4e-bc5d-\
100962a35d80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"results", "=", 
  RowBox[{"runMaxMarginExperiment", "[", 
   RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", "trainMaxMargin"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, 3.6006004425513983`*^9, {3.600603595693391*^9, 
   3.6006035959711657`*^9}, {3.600671920796858*^9, 3.600671925004285*^9}, {
   3.601286465650691*^9, 3.601286520255199*^9}, {3.601296113882533*^9, 
   3.6012961143798037`*^9}, {3.6012971986150007`*^9, 
   3.6012972506912613`*^9}, {3.60285717644379*^9, 3.60285717809779*^9}, {
   3.637574841944762*^9, 
   3.63757484577633*^9}},ExpressionUUID->"3fec1b93-4f30-4cb6-b514-\
05826fb63a52"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxlkl1Ik1EcxscMizJMG5QTlwoSTlZaZoYXx7oxLGSoubE0IxAjqA1bfqRl
o9CVhhFddGFLMipBqaw0VnSak3dO3Vx+Irmac2ZtJsuVUpSrLp4TvF28vPz4
n+f5f8YdU+eWCAUCgerP9/evD5HUpscGqL27SVcT2kuj2hZnPgRdjCtHVJON
QhMBj0a2yGW6T4yhlz/5dfzBwSECPRh6MPRg6Jst7vzAfQ/Tg6EHQw+GPiXC
nHXklZ/pwdCDoQeLlJu+JLX46Krlt3ZF4z3mB+60LNU5TE4Chh4MfVCbuqiI
9DE9GHo+8/NjnoiDEefXDz/rxGjG1ko/FWsfR9u4dlrwYn3/2hQPASP+6IAz
80rWAkEcjHr5euSHnp8fesT59wE/+PPzw6/84+7D9eetbN5gTWq8OqZ6ijH6
BSMfGPcExn2A+feAfD8TjSHflluoXqna9r6ihzHqxz0hf1rra6O+eIL1g/eo
B/EcQ0NrgnOOvefvG/3BH4z3YfWON883jDP2+veEmsqmGfPrQb+4H/ihXzDq
hT/i8EMc9WN+YPhj3t2bh6sa4kYI/JRc+ilFXB/bR6krWxuezFFXnVeWFHuL
7IiMr5J6rXRBdkN0WzVFbj5VWToDVlp0dLmixjBFjJldK6XFNqq2aLRna7zE
oj8hLui20YQwvaT6mY/MRQUvXqvr/W//p0X51+WFk4QrK1NKXg6weeza0r5v
tmCIzV/ij/4eyOPYvbXNXA3MaznqLU0TZrs7SG3/cMx0RB/tXzMurdXYScmg
OTnH2EuXOJpnTjDRFcUFU6h4iI6F93xdnesnDw1uzaWxASp9t7ejUDhLmpoP
zRgX/t3vmcT5DOvdAbpTXRT05HvIyv4mm+6yje3v8w9FV8P2Plp+7qRUu85B
3E7BRsedQTbv3999DXM=
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{84, 47, 79}, {23, 24, 15}, {62, 8, 12}, {66, 65, 43}, {
          30, 34, 4}, {67, 66, 43}, {19, 68, 7}, {65, 66, 11}, {66, 67, 46}, {
          32, 24, 23}, {63, 64, 7}, {23, 65, 11}, {43, 65, 15}, {64, 63, 
          42}, {19, 20, 8}, {34, 30, 26}, {68, 19, 8}, {36, 32, 28}, {30, 20, 
          19}, {38, 30, 4}, {28, 32, 23}, {26, 30, 19}, {63, 62, 11}, {65, 23,
           15}, {12, 23, 11}, {86, 42, 73}, {48, 19, 7}, {28, 23, 12}, {26, 
          19, 3}, {42, 63, 11}, {62, 68, 8}, {47, 43, 15}, {19, 48, 3}, {69, 
          68, 62}, {30, 38, 20}, {77, 42, 72}, {32, 40, 24}, {46, 42, 11}, {
          88, 43, 75}, {72, 42, 86}, {48, 50, 3}, {78, 46, 85}, {83, 50, 
          71}, {74, 43, 88}, {50, 53, 3}, {49, 48, 7}, {40, 32, 16}, {63, 69, 
          62}, {66, 46, 11}, {69, 63, 7}, {11, 62, 12}, {81, 49, 82}, {68, 69,
           7}, {87, 46, 78}, {32, 36, 16}}], 
         PolygonBox[{{89, 64, 42, 77}, {80, 48, 49, 81}, {75, 43, 47, 84}, {
          71, 50, 48, 80}, {73, 42, 46, 87}, {85, 46, 67, 90}, {70, 7, 64, 
          89}, {90, 67, 43, 74}, {82, 49, 7, 70}, {76, 53, 50, 83}}]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{31, 22, 21}, {81, 41, 80}, {17, 25, 2}, {21, 51, 14}, {
          44, 41, 2}, {54, 51, 10}, {27, 31, 21}, {29, 37, 25}, {83, 44, 
          76}, {90, 54, 85}, {39, 31, 13}, {31, 39, 22}, {45, 58, 6}, {27, 21,
           14}, {57, 59, 10}, {61, 54, 10}, {21, 22, 9}, {52, 55, 14}, {84, 
          52, 75}, {51, 52, 14}, {6, 56, 5}, {56, 57, 10}, {29, 33, 1}, {37, 
          29, 1}, {10, 21, 9}, {59, 61, 10}, {58, 57, 6}, {9, 56, 10}, {35, 
          31, 27}, {41, 45, 6}, {60, 52, 51}, {18, 17, 5}, {18, 29, 17}, {77, 
          45, 89}, {29, 25, 17}, {33, 29, 18}, {5, 17, 6}, {70, 45, 82}, {56, 
          9, 5}, {41, 6, 2}, {57, 56, 6}, {51, 21, 10}, {87, 59, 73}, {54, 60,
           51}, {89, 45, 70}, {31, 35, 13}, {80, 41, 71}, {74, 54, 90}, {17, 
          2, 6}}], 
         PolygonBox[{{78, 61, 59, 87}, {82, 45, 41, 81}, {88, 60, 54, 74}, {
          79, 55, 52, 84}, {72, 58, 45, 77}, {75, 52, 60, 88}, {86, 57, 58, 
          72}, {85, 54, 61, 78}, {71, 41, 44, 83}, {73, 59, 57, 
          86}}]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{76, 83, 71, 80, 81, 82, 70, 89, 77, 72, 86, 73, 87, 78, 85, 
          90, 74, 88, 75, 84, 79}]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], CompressedData["
1:eJw9k31Mk1cYxev4CKCrDFizCDJUZN1wqJurFhNPGURIRAaNU+YY0SqzDATm
nHEVt6IGmmUg21w01mDBjDCwUSSAo9S30Jc2ZkALrXyUtrRibcvHwPEpq3F9
XXhP8vzx++Pe+5znOXeDoJCf48NgMHjeWuWt17zF7lp9nN/eScS8cdUTIx3B
msPn/5A96iBaDsntoZ9bkKl5k5uTpaT5biIxHD/XSrgYfmPcY9MI6BCKgn+6
R8R2CbqsZRaIZ1mJ8YUlIB21eakMN2QFt7njmhqIXM1hy+86MXM+bvWoswUa
Yk163YIbwe72rsreVrSZT5cHRk0j6sA+8cfN91HekcZdXB7F3bzQzQqOEqf+
dK8L5f2NmYRt1yN9CXx/o8TSyHKDvbij89QnHeApZm2l/lNIEaiLozmdeBj/
esngrA1HejJ2DkSokV3QpvGtnIZ4l+1ZmQ+J7v17XiiGJxFc8I7OdobE5Dm/
sNwjT2kmto/UXAl14j7zxZcT+i6U/d6kmFt4DF4SJQ2+Eh+szakw4azHLta+
3Q3+FmU6VzWOyhNFu7/z70Hm2nJOk9GMzG+M5R8l67AxTsuSl7ppXnnfVRee
V9GmQ39f3dbAeSMYQY9CZOl67Oi9cmuDcBCViJhZUutBhjVImOxh3K6n1IeX
4QaZJcEIklrPz/1gJQiHk10Gmo3FQYs1agdejdPXgJPd/Lb+Y3bYvN0yzxog
OKNNE/lqUdRCGTTQ+/BMfGoiso2o+NAhDDA5aGa3L6lVuZPwZLEe6HIGUKl6
RqRlaGj+Whx58cf0MUh++ULKHh7AYeY2ZVCsmubUjA9YwdlamlPGCdPJGQfS
31/ldTyImCxqQSrkX7tMlj4fRPfF91Jjgu7RfGFvaeyt3XqoqLjVDsF8NeVf
z/qHkPhE/rDLNgRPzwHl8sFGXDptFaQ4TYgj/VI5VjVko/nrl3tG0Nt6uaTY
nySW7hzKfSky0/OSvWrAAnbhTU7D+F8QTugLW5hWBMxG6KojqoktpdSFVkii
55ck52RY4ZXzc1Fv7V97wQqG/jm5blMS0a6gZMXeKrWGET6K6Maje0KkNixc
2vlPA8+G8X1+8gdGG0TSrLIn9RqY06o6po7bMaTYZGpslhMrfO1Jd5WPu56o
cXsDX2XHfEh15/WjJvi3/nqiSGGn/fZS8Z63o47kI9l+By7qO408xlR94PZY
yQDmpPJE4rOnaEoqztn6bd//+dI7oWeOCX7Lv0n8B+WBFDk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], CompressedData["
1:eJxFlHtM01cUx4ss4oCVx4ShFaaRaB0PpxgFmRwMrKBRB8TxkjGKZQibiA4S
ZA4EWtqRiUucC5Gw4UBlklVgYBmjOy2PMh4FW0ppi4U+foI8ywyCIIEVCb/d
5PzxyU1uvvdzzr27Ei9FJFlSKBSGuSzMtclc8aV0dUPnC6SyD9pd0eqg5GZb
4SJvFuN3Mf1M9n1QMNTp0/jZLFKPqPPi4kUkn5VGldl26MC9lhngWGrC6EwN
jaf8C0RGO6uPckx4sSeiSX5eDz99s535514TBo/fYZezW8GH/88+o7WZD885
PLYkYAujvyChfgZjqR8KrT1a4b2go5cOuM/glH2UM6WoAaY1wZ186TR2b/06
yWdCD68Hq+tzj03jPW7O34eqBqDN4ibsSJ9E3WTxWzFtt6F/5eUH0yMTmJW8
EF7MrwRbVkRz4P0JVOyvTbkR3A7mNA8cnCcwMJ9+YsXZAIJbyen+i+Po0Z7Y
PszVguSH3nO2KePIP+1WRJd1gu85bs4fL5+jYYpvz3MQk7wy1VtA204AI3om
hZ30HN1+W00ViAch8lPzGhhDvskprDJPDWUCF/lVmzHkdJ8eLKEYQLkj87xU
NoqrtP5y7XEFNNWOVtEmn2GNvyPLIUoHKvP1hF0EZjDmL8cIeoEfhOqjGQTm
63wZvX5iZK/5dyUwZLmbwkntg53UrGU9hcDixHFOl4USmgP3tNsQRgwYlOSx
QmXgbTMyVpduRCUn45VIr4QL6f5XNx8xYlxr9GqqeBgC1hqgM2DhUvhcLF0O
NXKzwIsGzPiOx65KUwAn9e2wKmcD0l1yvfsqakh2cmQ1c0RGSFnNvj2/X4+N
DQ20kodSkr/oKdL+fldF8g3xGb+FpRGoYA3uOTmvw5iavQWFQ3KS601az84g
A0xI7lSkeepI32/8PhvBIr6r0NFJAS+4lm65viPIOqhqya8QkEy8m5a/WGgA
z+nPH8lXhrE055Tu344hsM+Xze10GUbbLwMEdbF1GDrmVZgxrMXKbVNednMC
kl+7Z7Yry3rA89ov3S0LT3FZela4FFm73o+TT/Ed9ZMQFfUJyT93hc7FlxnW
/c5qMGuT1SgzEtf9CjSYELWZW/GAixt8nZG1rzqOSe435oWNHudXw9byMC8L
aw3p89Whliuf7FaT56eu+XukQtmvlY4hUgK+Kl6bGCVml8ZxiYcS4L1ZA+S8
b/BG/g0u96MMhQvrSBZJPO95HHsMOnP6b70VSK87cGLprgzarrkf7gnpJ/Ms
6693vE/tJ/+D7+9biS9ky7C8kq9qumUEic3aA/ufiR8vf3xmmxQTXJO9A3dz
4D9FpGob
       "]]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[2], PointBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[4], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {}}, {}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"TRerr=0.% TEerr=2.8% Marg=0.0551\"", FontSize -> 21, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{-1.1953663793103448`, 
   0.7970186781609194}, {-0.15644794775238186`, 1.046476631469954}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.600525281598768*^9, 3.6005253136889677`*^9}, {
   3.6005253478571663`*^9, 3.600525371143449*^9}, 3.600525473291607*^9, {
   3.600525698422022*^9, 3.6005258048029137`*^9}, 3.6005259032103653`*^9, {
   3.6005261610614653`*^9, 3.600526281106331*^9}, 3.600526573182786*^9, 
   3.600526777281084*^9, {3.6005272235439568`*^9, 3.600527240872759*^9}, 
   3.600528404990016*^9, 3.600528509066758*^9, 3.6005289681701803`*^9, 
   3.600529089956275*^9, 3.600545179203183*^9, 3.600599486802042*^9, {
   3.600600439179556*^9, 3.600600443029963*^9}, {3.600603585410226*^9, 
   3.600603596615411*^9}, 3.600671168649715*^9, {3.600671657502849*^9, 
   3.6006716662418337`*^9}, 3.600671813286641*^9, {3.6006718972369537`*^9, 
   3.600671925372246*^9}, 3.600672554362094*^9, 3.6012141439917803`*^9, 
   3.601214215409931*^9, {3.601286475085067*^9, 3.601286520742255*^9}, {
   3.601295996336068*^9, 3.601296015130075*^9}, 3.601296095374415*^9, {
   3.601297208860219*^9, 3.601297219178059*^9}, 3.601298964909574*^9, 
   3.601301325744738*^9, 3.601304700631179*^9, 3.601372920719833*^9, 
   3.601375313063343*^9, 3.601375344736702*^9, 3.601559816717133*^9, {
   3.601559851094203*^9, 3.60155986282467*^9}, 3.601559893370398*^9, 
   3.60155996690933*^9, 3.601560101652937*^9, 3.601560139156393*^9, 
   3.601560664405232*^9, 3.601563125004244*^9, 3.60157166248385*^9, 
   3.6015725047098017`*^9, 3.601572725661755*^9, 3.601626190133806*^9, 
   3.6016262228601522`*^9, {3.6016262668611517`*^9, 3.601626330040524*^9}, 
   3.6028569435795317`*^9, 3.602857179012652*^9, 3.6028573805641193`*^9, {
   3.60285974033444*^9, 3.602859782181679*^9}, 3.60286008254284*^9, 
   3.607432691675115*^9, 3.6375648212489023`*^9, 3.6375649416831427`*^9, 
   3.637565535374145*^9, 3.637565667239622*^9, 3.63756572103988*^9, 
   3.637565860554153*^9, 3.6375660638111267`*^9, 3.637573403188794*^9, {
   3.637573822994574*^9, 3.637573972374054*^9}, {3.6375743232779303`*^9, 
   3.637574364556185*^9}, 3.637574402084166*^9, {3.637574848704534*^9, 
   3.637574858207715*^9}, 3.6375753120064096`*^9, 3.6375820359715137`*^9, 
   3.637582314386149*^9, 3.637583530043165*^9, 3.6375855989602222`*^9, 
   3.637588908588122*^9, {3.6376597478871107`*^9, 3.637659866003551*^9}, {
   3.637659992998116*^9, 3.63766000164018*^9}, {3.637660062593515*^9, 
   3.637660213189596*^9}},
 TextAlignment->Center,ExpressionUUID->"b43bafb3-eacd-4769-8b3b-97adb35572d4"]
}, Open  ]],

Cell[TextData[{
 "\nAs it can be seen, if the training data is linearly separable (if there \
exists an hyperplane separating the two classes), the max-margin classifier \
will always return the hyperplane maximizing the minimal geometric margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "s"], "(", "h", ")"}], TraditionalForm]],
  ExpressionUUID->"598b4201-802b-4deb-823a-e226ee6abd0c"],
 " between the two classes.\nUnfortunately, if the training data is not \
linearly separable this learning algorithm will fail to find a feasible \
solution (try drawing a non-linearly separable dataset for a direct proof). \
Moreover, while margin-maximization is a desirable property for \
generalization, when the training and the testing datasets do not exactly \
follow the same distribution (which is often the case due to noise, or too \
small training sets), exact margin maximization can result in poor testing \
performances. A way to address these problems is represented by the so-called \
\[OpenCurlyDoubleQuote]soft-margin\[CloseCurlyDoubleQuote] classifiers, \
introduced in the following Subsection.\n"
}], "Text",
 CellChangeTimes->{{3.601374016160015*^9, 3.601374108453491*^9}, {
   3.6013741701092167`*^9, 3.601374185867347*^9}, {3.601374300517311*^9, 
   3.6013743112997437`*^9}, {3.601374349818544*^9, 3.60137435164546*^9}, {
   3.6013754753413553`*^9, 3.6013758242855387`*^9}, 3.601386048099481*^9, 
   3.601558698679441*^9, {3.601588174036932*^9, 3.601588259533139*^9}, {
   3.607432723483946*^9, 3.6074328364540586`*^9}, {3.6375742776000977`*^9, 
   3.637574280398279*^9}, {3.637574436133092*^9, 3.637574476278235*^9}, {
   3.6375745098118353`*^9, 
   3.6375745166992073`*^9}},ExpressionUUID->"c54e5f8e-3dba-490c-a56b-\
93a5cef92361"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal margin classifier: soft margin", "Subsection",
 CellChangeTimes->{{3.6000689928004103`*^9, 3.6000690070043983`*^9}, {
  3.600511161175296*^9, 
  3.600511163195389*^9}},ExpressionUUID->"8a9aa383-6182-4419-9840-\
ceca8b5b4a14"],

Cell[TextData[{
 "The formulation introduced above is designed for linearly separable \
problems. However, it often happens that a dataset does not satisfy this \
condition, or it is difficult to know in advance whether it holds or not. In \
case the problem does not turn out to be linearly separable, the max-margin \
learning algorithm will fail to find a solution satisfying the constraints, \
leaving us without a solution.\nIn order to addess this problem, soft-margin \
classifiers have been designed ",
 ButtonBox[Cell["[1]", "Citation",ExpressionUUID->
  "2cc50657-e591-4a1e-9c1d-a8780a752d08"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 " to allow the algorithm to violate the constraints ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "\[GreaterEqual]", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Xi]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "644e2973-91c7-4a85-8097-6eef0552f0a2"],
 ", by an amount ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "d724009b-dc09-493c-8067-c78b8b2d268f"],
 " (called ",
 StyleBox["slack variable",
  FontSlant->"Italic"],
 ") as little as possible.\nIn this case, the optimization problem can be \
written as:"
}], "Text",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.6000690359654818`*^9, 3.600069616392734*^9}, {
   3.6000698086840277`*^9, 3.600069819840662*^9}, 3.6000698520984077`*^9, {
   3.600069946376136*^9, 3.6000699712854137`*^9}, {3.6000701256232224`*^9, 
   3.60007014793779*^9}, {3.600071495706664*^9, 3.60007150754605*^9}, 
   3.6006769472261*^9, {3.60158827235858*^9, 3.601588326002502*^9}, {
   3.607432874239674*^9, 
   3.60743288050905*^9}},ExpressionUUID->"694f82e4-35bf-44d2-887a-\
762ed83ed3ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["min", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b", ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}]], " ", 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["w",
     FontWeight->"Bold"]}]}], " ", "+", 
  RowBox[{"C", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Xi]", "i"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", "1"}], "-", 
    SubscriptBox["\[Xi]", "i"], "-", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], "\[LessEqual]", 
   "0"}], ",", "   ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n", ",", 
  "\[IndentingNewLine]", "          ", 
  RowBox[{
   SubscriptBox["\[Xi]", "i"], "\[GreaterEqual]", "0"}], ",", 
  "                                      ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60000667883209*^9, 3.6000067752439413`*^9}, {
   3.6000070814275303`*^9, 3.600007111840486*^9}, {3.600007427356236*^9, 
   3.600007427719923*^9}, {3.600069619878358*^9, 3.6000696976499662`*^9}, {
   3.6000698340070744`*^9, 3.600069843688924*^9}, {3.6000703147873783`*^9, 
   3.600070318851357*^9}, 3.600070748774111*^9, {3.6004338335707273`*^9, 
   3.600433892615193*^9}, {3.6005188532159567`*^9, 3.6005188733822203`*^9}},
 CellTags->
  "eq:1norm_svm",ExpressionUUID->"22389821-95b9-4546-b665-4b14d0c1044c"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "f06741be-e09e-4ecd-bd3b-42e19d4245b7"],
 " tunes the importance of the slack variable minimization, w.r.t. the margin \
maximization. A big value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "83900f4f-c86b-465c-a715-8024641aedf3"],
 " will push the optimization algorithm to find a hyperplane on which all the \
points are correctly classified with margin 1, while lower value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "7af9aa74-27f2-402d-8234-d7fa75e13e74"],
 " will allow the learning algorithm to commit margin - or decision - \
mistakes on some samples, without heavily affecting the decision boundary.\n\n\
In this case the minimal geometric margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "S"], "(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}], TraditionalForm]],
  ExpressionUUID->"e97c12b0-2244-456b-aa4b-9537276f6ee2"],
 " of the optimal classifier cannot be computed simply as ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   TraditionalForm]],ExpressionUUID->"40c83f75-901a-4af7-a6fb-7e3982c0e599"],
 ", since there is no guarantee anymore that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "\[GreaterEqual]", 
    " ", "1"}], TraditionalForm]],ExpressionUUID->
  "cfb0928a-b2b3-4334-ad27-1a283113fc41"],
 ". Nonetheless for all the points for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "<", "1"}], 
   TraditionalForm]],ExpressionUUID->"a6b7045b-6e29-4197-8690-8c0826413425"],
 " we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Xi]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "08fcc244-e517-4bd6-b571-37ea8b52d455"],
 ", while for the others we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "bf0b384f-5701-44f5-8c51-2874e33a8f60"],
 ". Therefore, the minimal geometric margin can be computed exactly using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[LeftDoubleBracketingBar]", 
       StyleBox["w",
        FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["max", "i"], 
        SubscriptBox["\[Xi]", "i"]}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"f4d80b4a-3976-4db4-8374-5693fdd7270b"],
 ". For linearly separable datasets and with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "\[Rule]", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "8c43de55-4f68-42f4-97cf-264e2ce502e7"],
 ", we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["max", "i"], 
     SubscriptBox["\[Xi]", "i"]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"ba288faf-793e-4106-a77c-8d34c8e2ecba"],
 " and the margin obtained with this approach will correspond to the one \
obtained by the max-margin classifier. On the other hand, on non linearly \
separable datasets, we might have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], ">", "1"}], TraditionalForm]],ExpressionUUID->
  "5b570d26-7f7b-470b-94fe-3062ff0bab1f"],
 ", resulting in negative geometric margins. In this case the geometric \
margin behaves as a signed Euclidean distance, with a negative sign meaning \
that the problem is not separable.\n"
}], "Text",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
   3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
   3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
   3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
   3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, 
   3.6015586958593483`*^9, {3.60162113767901*^9, 3.601621155282135*^9}, {
   3.601621185743477*^9, 3.601621278323886*^9}, {3.601621321146552*^9, 
   3.6016213355989933`*^9}, {3.601621427863902*^9, 3.6016216153973618`*^9}, {
   3.601621664497609*^9, 3.601621699926613*^9}, {3.601621776837029*^9, 
   3.601622163930435*^9}, {3.60162220858821*^9, 3.601622236455072*^9}, {
   3.601622299066782*^9, 3.601622393699473*^9}, 3.601626091685643*^9, {
   3.602857085844995*^9, 3.602857088063904*^9}, {3.607432973261351*^9, 
   3.607433063362577*^9}, 3.60743395766329*^9, 3.637574559415341*^9, 
   3.63757460024273*^9},ExpressionUUID->"51e630fd-5f18-4520-86fd-\
f67de701f721"],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.607433046905921*^9, 
  3.607433060149661*^9}},ExpressionUUID->"8bfbc834-bc63-4259-8b76-\
a8e60723adb0"],

Cell[TextData[{
 "Even if at a first glance the optimization problem (",
 
 CounterBox["DisplayFormulaNumbered", "eq:1norm_svm"],
 ") does not look very friendly, it can be shown to still be a QP program. It \
can thus be again directly solved using the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " QP solver, as shown by the following code snippet:\n"
}], "Text",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
   3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
   3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
   3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
   3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, 
   3.6015586958593483`*^9, {3.60162113767901*^9, 3.601621155282135*^9}, {
   3.601621185743477*^9, 3.601621278323886*^9}, {3.601621321146552*^9, 
   3.6016213355989933`*^9}, {3.601621427863902*^9, 3.6016216153973618`*^9}, {
   3.601621664497609*^9, 3.601621699926613*^9}, {3.601621776837029*^9, 
   3.601622163930435*^9}, {3.60162220858821*^9, 3.601622236455072*^9}, {
   3.601622299066782*^9, 3.601622393699473*^9}, 3.601626091685643*^9, {
   3.602857085844995*^9, 3.602857088063904*^9}, {3.607432973261351*^9, 
   3.60743303565504*^9}, {3.6375747573619413`*^9, 
   3.637574760010569*^9}},ExpressionUUID->"9c86c5b4-9197-44d0-b61b-\
d506280d3e7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainSoftMargin", "[", 
    RowBox[{"fTr_List", ",", "yTr_List", ",", "regC_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "nTr", ",", "fTr2", ",", 
       "d", ",", "w", ",", "v", ",", "b", ",", "xi", ",", "x", ",", "i", ",", 
       "sol", ",", "obj", ",", "cnstr"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xi", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"cnstr", "=", 
       RowBox[{
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "<=", "0"}], "&"}], "/@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"(", 
             RowBox[{"1", "-", "xi", "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"fTr", ".", "w"}], "+", "b"}], ")"}], "yTr"}]}], 
             ")"}]}]}], ")"}]}], " ", "&&", "\n", 
        RowBox[{"And", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ">=", "0"}], "&"}], "/@", 
           RowBox[{"Flatten", "@", "xi"}]}], ")"}]}]}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{
        RowBox[{"w", ".", "w"}], "+", 
        RowBox[{"regC", " ", 
         RowBox[{"Total", "[", "xi", "]"}]}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obj", ",", "cnstr"}], "}"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"w", ",", 
           RowBox[{"{", "b", "}"}], ",", "xi"}], "]"}], ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\n", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b", ",", "xi"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Max", "[", 
           RowBox[{"model", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ")"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"model", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600529613144619*^9, 3.60052963238398*^9}, {
  3.600603885117957*^9, 3.600603886505888*^9}, {3.601374403830535*^9, 
  3.601374430109478*^9}, {3.601573493622208*^9, 3.601573493847793*^9}, {
  3.6015883741683693`*^9, 
  3.601588380449217*^9}},ExpressionUUID->"b2fcf885-caf8-48ac-8b86-\
22b7fe2de8b6"],

Cell[TextData[{
 "\nAs before, we report here an example of usage, where ",
 StyleBox["createData[]", "Code"],
 " is called in order to draw a dataset and  ",
 StyleBox["{fTr,yTr,fTe,yTe}=getTrTeData[trPerc]", "Code"],
 " is used to obtain the coordinates of the training and the testing points, \
using a 30%/70% training/testing split.\n"
}], "Text",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
   3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
   3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
   3.600529678813099*^9, 3.600529764249748*^9}, {3.600544095482354*^9, 
   3.600544177035437*^9}, {3.6006719488475933`*^9, 3.6006719512135572`*^9}, {
   3.6013744660606613`*^9, 3.6013745296506243`*^9}, {3.601374565839364*^9, 
   3.601374849821602*^9}, {3.6013748857814693`*^9, 3.601374950895156*^9}, {
   3.601386057433106*^9, 3.601386058982265*^9}, 3.6015586941993*^9, 
   3.637576734611086*^9},ExpressionUUID->"caa86fcb-a114-4ae4-81ed-\
3d928d34bb43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601207826661016*^9, 3.6012078322261257`*^9}, {
  3.6012096925331287`*^9, 3.6012096929102297`*^9}, {3.6012976309206133`*^9, 
  3.601297631575138*^9}, {3.601297918675498*^9, 3.6012979195420094`*^9}, {
  3.6012979550010023`*^9, 
  3.601297955892606*^9}},ExpressionUUID->"75ed84dc-6a88-44cb-86b4-\
1a1be1092d41"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$667 = MousePosition["Graphics"]; 
     Private`p$667 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$667], 2], 
          Union[
           Partition[Private`pt$667, 2]]}, 1]]; 
     If[Private`s$667 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$667}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$667}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$667 = {}; 
     Private`s$667 = Private`s$667 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.600529782509405*^9, {3.600529990283494*^9, 3.600530002186282*^9}, 
   3.600530090211268*^9, 3.600530210238405*^9, {3.600530256815338*^9, 
   3.600530286011044*^9}, 3.600530410375724*^9, 3.6005304763736343`*^9, 
   3.6005441825365047`*^9, 3.600545003679199*^9, 3.600545595081881*^9, 
   3.6005462589772253`*^9, 3.600602781576613*^9, 3.6006030832068377`*^9, 
   3.6006033180255737`*^9, 3.600603522890913*^9, {3.6006039456108847`*^9, 
   3.600603945809247*^9}, 3.600612998413377*^9, 3.600613811986126*^9, 
   3.6006326441470413`*^9, 3.600671117240415*^9, 3.600671642169813*^9, 
   3.6006718036689577`*^9, {3.600672265428256*^9, 3.600672275933691*^9}, 
   3.600672525805505*^9, {3.600672575455937*^9, 3.600672628747901*^9}, 
   3.600672677987822*^9, 3.600672730325946*^9, 3.60067293990129*^9, 
   3.600673032365019*^9, 3.600673142949374*^9, {3.60120637031126*^9, 
   3.6012063706503887`*^9}, 3.601207775277233*^9, 3.601207832529253*^9, 
   3.601207865996746*^9, 3.601208442423897*^9, 3.601208487025152*^9, {
   3.601208525644061*^9, 3.6012085352612534`*^9}, {3.601208774940124*^9, 
   3.60120878254042*^9}, 3.6012091167445087`*^9, {3.601209436890952*^9, 
   3.601209437447448*^9}, 3.601209693426746*^9, 3.601211466975379*^9, {
   3.601212264522111*^9, 3.601212290660997*^9}, 3.60121266810853*^9, 
   3.6012133563570623`*^9, 3.6012140403085938`*^9, 3.601214608162497*^9, 
   3.601218004410623*^9, 3.601286272904632*^9, 3.601295889896371*^9, 
   3.601296909732279*^9, 3.601297170396491*^9, {3.601297662001245*^9, 
   3.6012976623672943`*^9}, 3.601297956422258*^9, 3.601298894647387*^9, 
   3.601298947126103*^9, 3.601304693462337*^9, 3.601372885040307*^9, 
   3.6013752771477337`*^9, 3.6015597717449512`*^9, 3.601562166361266*^9, 
   3.601563111969944*^9, 3.601571645033457*^9, 3.601572489292029*^9, 
   3.601626156175782*^9, 3.6028568556284237`*^9, 3.602857141081953*^9, 
   3.602857220153934*^9, 3.60285972449185*^9, 3.60285988514993*^9, 
   3.602859990583866*^9, 3.6028600338423443`*^9, 3.607430517793701*^9, 
   3.607432448278328*^9, 3.637564725066325*^9, 3.637565525764845*^9, 
   3.637565654656723*^9, 3.637566042079208*^9, 3.6375733609909153`*^9, 
   3.637575000818576*^9, {3.637575033777073*^9, 3.637575055248712*^9}, 
   3.637575142158746*^9, {3.637581899470537*^9, 3.637581927595129*^9}, 
   3.6375819602768717`*^9, 3.637581994823217*^9, 3.6375821407731237`*^9, {
   3.637582201438532*^9, 3.63758220173599*^9}, {3.637583464142974*^9, 
   3.637583464430566*^9}, 3.637585525555756*^9, 3.637588558476117*^9, 
   3.6375886491685677`*^9, {3.6375887838990593`*^9, 3.637588821476104*^9}, 
   3.637659185154929*^9, 3.637659328273262*^9, 3.6376596482351027`*^9, 
   3.637671396122485*^9},
 TextAlignment->Center,ExpressionUUID->"9238be7c-99d2-45fb-8239-991c35fd7cfc"]
}, Open  ]],

Cell[TextData[{
 "\nThis time, in order to use the soft-margin classifier with a \
regularization parameter ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "b4b19f71-5fad-4f59-b0d4-a4cb489101d5"],
 ", we will use the command  ",
 StyleBox["runMaxMarginExperiment[fTr,yTr,fTe,yTe,trainSoftMargin[#1, #2, \
C]&].", "Code"],
 " In this case the classifier funtion is created as an anonymous function \
with two parameters (corresponding to fTr and yTr - see the documentation -) \
while the third parameter, the regularization coefficient",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "c847ae8a-c859-4522-b05f-43dfe77c2180"],
 " is fixed. Finally, in order to show the behavoir of the algorithm when \
varying the regularization parameter, we will also make use of the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 StyleBox["Manipulate", "Code"],
 " to dynamically adjust the plot while varying the parameter ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "c842b81f-c9f0-4267-a59d-6d75c178007c"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.601374954867086*^9, 3.6013751014899483`*^9}, {
   3.601375184833784*^9, 3.601375193858099*^9}, {3.601386061880291*^9, 
   3.601386063628708*^9}, 
   3.637576779599946*^9},ExpressionUUID->"2495ec05-a47b-4ae0-b36a-\
320ad2398e4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runMaxMarginExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"trainSoftMargin", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", ".2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, {
   3.600600462988875*^9, 3.600600490747484*^9}, {3.6006006023090973`*^9, 
   3.600600617351081*^9}, 3.600603164788883*^9, 3.600603990447899*^9, {
   3.600604112686928*^9, 3.6006041143637753`*^9}, {3.600671965092746*^9, 
   3.600671965294054*^9}, {3.600672656770911*^9, 3.600672658595111*^9}, {
   3.601286614709449*^9, 3.601286623982645*^9}, {3.601286700237975*^9, 
   3.601286764071398*^9}, {3.601286988876445*^9, 3.601287001193364*^9}, {
   3.601297278695887*^9, 3.601297290837179*^9}, {3.6012974792041807`*^9, 
   3.601297500526369*^9}, {3.601297538358511*^9, 3.601297585092586*^9}, {
   3.601297713310603*^9, 3.6012977413100033`*^9}, {3.601297914356962*^9, 
   3.601297914769359*^9}},ExpressionUUID->"4f4c00c0-4871-421c-b686-\
5db5fa5fb87d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.2}}, Typeset`size$$ = {
    1001., {8., 20.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$10285$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$10285$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runMaxMarginExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`trainSoftMargin[#, #2, 10^$CellContext`c$$]& ], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1052., {61., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.601372966250511*^9, 3.601559984712159*^9, 3.6015601463192863`*^9, 
   3.601560648196865*^9, 3.601560819491561*^9, 3.60156314165327*^9, 
   3.6015716781021643`*^9, 3.6015725231652803`*^9, 3.60157259248239*^9, 
   3.601572737232231*^9, 3.601626243854045*^9, 3.6016263428498783`*^9, 
   3.6028571191699953`*^9, 3.602857154839723*^9, {3.602857243070468*^9, 
   3.602857338210691*^9}, 3.602859809329527*^9, 3.602859871915287*^9, {
   3.602859904005724*^9, 3.6028600446975718`*^9}, 3.607433127612075*^9, 
   3.637564853024686*^9, 3.637565731869989*^9, 3.63756588020093*^9, 
   3.637566075614814*^9, 3.637574905470798*^9, {3.637574944557906*^9, 
   3.637574972840777*^9}, 3.637575017511821*^9, {3.637575080167186*^9, 
   3.637575128583579*^9}, 3.6375751609028873`*^9, {3.637581917568626*^9, 
   3.63758194152759*^9}, 3.637581977725383*^9, 3.637582010113209*^9, {
   3.637582230820006*^9, 3.637582274309915*^9}, 3.637582304993907*^9, 
   3.6375834981706343`*^9, 3.637585576056095*^9, {3.6375857930855513`*^9, 
   3.6375858087978992`*^9}, {3.637588683766335*^9, 3.637588752579894*^9}, 
   3.637588838137336*^9, 3.637588888596665*^9},
 TextAlignment->Center,ExpressionUUID->"da959926-ede0-4249-a575-15edb4b6045d"]
}, Open  ]],

Cell[TextData[{
 "\nAs it is possible to see, in agreement with the theory when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "\[RightArrow]", "\[Infinity]"}], TraditionalForm]],
  ExpressionUUID->"93fb9157-6d58-42eb-bd2b-10bc99c07582"],
 ", the solution returned by soft-margin classifier reduces to the one of the \
max-margin classifier. On the other hand, reducing ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "fb73e0de-c2f6-4338-934c-30aed2a51297"],
 " might results in the max-margin principle being violated, resulting in a \
different separation hyperplane. When the noise in the data is high, this \
might result in better performance on unseen samples."
}], "Text",
 CellChangeTimes->{{3.601375224930306*^9, 3.6013752325484877`*^9}, {
   3.60137540215469*^9, 3.6013754610603323`*^9}, {3.601375835744356*^9, 
   3.601376069596875*^9}, 3.6013860666940823`*^9, 3.601558688900959*^9, {
   3.607433175066598*^9, 
   3.607433249435253*^9}},ExpressionUUID->"d8e51949-78be-4a83-82a2-\
5b742cf52a3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximal margin classifier: hinge-loss", "Subsection",
 CellChangeTimes->{{3.600090403054838*^9, 3.60009041228967*^9}, {
  3.6005111769690857`*^9, 3.600511189362093*^9}},
 CellTags->
  "subsec:hinge_loss",ExpressionUUID->"bd0be1ea-33fe-47f1-b756-3132ee5e0c59"],

Cell[TextData[{
 "An interesting property of the formulation introduced in the previous \
sub-section is that, by using the fact that the objective function is \
minimizing w.r.t. ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Xi]",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "d7a31f16-c920-4a3a-81bf-f7082c063968"],
 " and performing a simple case analysis, it is possible to see that for any ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["(",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}], ")"}], TraditionalForm]],
  ExpressionUUID->"c34b2cb0-d22f-4f61-bae2-9a1bed243054"],
 ":"
}], "Text",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090420965437*^9}, {
   3.6000907095950127`*^9, 3.6000907169789877`*^9}, 3.600155060116129*^9, {
   3.600544262412472*^9, 3.600544264853862*^9}, 3.60067706256285*^9, {
   3.601389838113303*^9, 3.6013899348842487`*^9}, {3.601389968160818*^9, 
   3.6013899697787113`*^9}, {3.601390108620432*^9, 3.60139013955446*^9}, {
   3.637576893202181*^9, 
   3.637576945874955*^9}},ExpressionUUID->"74ceaf5a-b847-4101-bdca-\
685540b84a07"],

Cell[CellGroupData[{

Cell[TextData[{
 " whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "\[LessEqual]", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "6ac2dc58-bd4d-4f27-9210-dacd8f9a219a"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "b627bcc0-e09d-43b1-a16f-e1e32a87f64f"],
 " (no additional slack is necessary to satisfy the constraints);"
}], "Item",
 CellChangeTimes->{{3.60007140215028*^9, 3.6000714048159437`*^9}, {
   3.600071471087552*^9, 3.600071486127376*^9}, {3.600071539107299*^9, 
   3.6000715483156967`*^9}, 3.60007159412475*^9, {3.600433271266449*^9, 
   3.6004332719557037`*^9}, {3.6004333262443323`*^9, 
   3.6004333277650023`*^9}},ExpressionUUID->"18b74b14-25ea-4632-8235-\
ab2d3c3d46aa"],

Cell[TextData[{
 "whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ">", "0"}], 
   TraditionalForm]],ExpressionUUID->"0226d4ab-392e-4cac-bfea-19cdd8ac7d4e"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", 
    RowBox[{"1", "-", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"f5cf89f4-17f5-46cb-86b9-aedce1766665"],
 " (the minimal ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "11f8cb4c-fb1f-4913-bcf5-7a62ea58e79c"],
 " satisfying the constraints)."
}], "Item",
 CellChangeTimes->{{3.60007140215028*^9, 3.600071453305488*^9}, {
   3.6000715661678467`*^9, 3.600071607546055*^9}, 3.600072002455305*^9, {
   3.600433273163218*^9, 3.600433276731516*^9}, {3.6004333300526257`*^9, 
   3.600433336539894*^9}, {3.60138813785434*^9, 3.601388143645668*^9}, {
   3.601388199359839*^9, 
   3.60138821253098*^9}},ExpressionUUID->"22d2e8d4-6628-441a-a90a-\
ac196492c7e8"]
}, Open  ]],

Cell[TextData[{
 "We can thus write a closed form solution for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "7c0849dc-6736-479b-8855-0ec1f809a8b8"],
 " as a function of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["(",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}], ")"}], TraditionalForm]],
  ExpressionUUID->"e1876472-781b-4cbe-bb67-353a3d538c9a"]
}], "Text",
 CellChangeTimes->{{3.6000716232316027`*^9, 3.6000717172050867`*^9}, {
  3.600071797373171*^9, 3.600071804208117*^9}, {3.600072063822472*^9, 
  3.600072139207631*^9}, {3.60007219023997*^9, 3.600072247029084*^9}, {
  3.601389991992825*^9, 3.601390056675672*^9}, {3.601390087604802*^9, 
  3.601390168739094*^9}},ExpressionUUID->"09d6e491-b15e-42fc-bd08-\
f6e1892c8a67"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Xi]", "i"], "=", 
   SubscriptBox[
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], 
     "\[RightBracketingBar]"}], "+"]}], ","}]], "DisplayFormula",
 CellChangeTimes->{{3.601390068246149*^9, 
  3.6013900714502153`*^9}},ExpressionUUID->"11831c5c-e734-4626-b53b-\
00e8ca0bf6ab"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", "x", 
     SubscriptBox["|", "+"]}], "=", 
    RowBox[{"max", "(", 
     RowBox[{"x", ",", "0"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "dda8d605-385c-475a-baf5-2aa9b9497b02"],
 ".  By construction, for any given ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["(",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}], ")"}], TraditionalForm]],
  ExpressionUUID->"1a2befad-a384-4333-958d-0121ccf1b61d"],
 " this choice of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "1d7bcaab-2115-4f4c-a3c8-d2f1a8e6bfd6"],
 " ensures that all the constraints are satisfied. We can thus subsitute for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "6ea3c567-3ce5-4e9d-8f69-17834ad3eac4"],
 " in the objective function and remove the constraints, obtaining the \
following optimization problem:"
}], "Text",
 CellChangeTimes->{{3.6000716232316027`*^9, 3.6000717172050867`*^9}, {
  3.600071797373171*^9, 3.600071804208117*^9}, {3.600072063822472*^9, 
  3.600072139207631*^9}, {3.60007219023997*^9, 3.600072247029084*^9}, {
  3.601389991992825*^9, 3.601390035029743*^9}, {3.601390073716324*^9, 
  3.601390076351453*^9}, {3.60139019456527*^9, 3.601390333031674*^9}, {
  3.601390401102871*^9, 3.601390402716786*^9}, {3.601390687937025*^9, 
  3.601390690051483*^9}, {3.637576996041149*^9, 
  3.637577005157626*^9}},ExpressionUUID->"790131a9-1234-439d-9a13-\
a28b4aabf239"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["min", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], " ", 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["w",
     FontWeight->"Bold"]}]}], " ", "+", 
  RowBox[{"C", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox[
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
      "\[RightBracketingBar]"}], "+"]}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6000721591150208`*^9, 3.600072181415753*^9}, {
  3.6000722300726633`*^9, 
  3.600072241744952*^9}},ExpressionUUID->"17069927-a568-4975-a751-\
d9ce3b7ede1e"],

Cell[TextData[{
 "This is a non-smooth unconstrained convex optimization problem, which can \
be solved by using simple sub-gradient descent procedures.  As before, the \
minimal geometric margin can be computed exactly using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[LeftDoubleBracketingBar]", 
       StyleBox["w",
        FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["max", "i"], 
        SubscriptBox["\[Xi]", "i"]}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"3a53c914-2e66-4de6-903d-d2f5c2e8cbf1"],
 ", where in this case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", 
    SubscriptBox[
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["y", "i"], "(", 
        RowBox[{
         RowBox[{
          StyleBox["w",
           FontWeight->"Bold"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], 
      "\[RightBracketingBar]"}], "+"]}], TraditionalForm]],ExpressionUUID->
  "3e4a831d-ffe5-4c38-b618-4b0bf8aa859f"],
 ". We can also equivalently compute it using its definition, whichever is \
faster in the implementation.\n\nRecalling that the functional margin is \
defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Gamma]", "i"], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], ",", "b"}]], "(", 
      StyleBox[
       SubscriptBox["x", 
        StyleBox["i",
         FontWeight->"Plain"]],
       FontWeight->"Bold"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "05c62c54-d003-4ccd-a738-27ce7fdbd80d"],
 " and the 0/1 error function as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalChi]", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], ",", "b"}]], "(", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ")"}]}], "<", "0"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"195bd026-875a-4dee-b1ef-f2a1f817a3db"],
 ", we can see that both the 0/1 error and the constraints violation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", 
    SubscriptBox[
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{
         SubscriptBox["f", 
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], ",", "b"}]], "(", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], ")"}]}]}], "\[RightBracketingBar]"}], 
     "+"]}], TraditionalForm]],ExpressionUUID->
  "4b4ff933-6ab5-45f0-a753-6bfa8dab682d"],
 " (often refered to as ",
 StyleBox["hinge-loss",
  FontSlant->"Italic"],
 ") can be expressed as a function of the functional margin ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "i"], TraditionalForm]],ExpressionUUID->
  "2f8cedaf-0cd5-4b1a-a747-756e7e986409"],
 ". Moreover we have"
}], "Text",
 CellChangeTimes->{{3.600072201825953*^9, 3.6000722083525143`*^9}, {
   3.600072271422114*^9, 3.6000723155509863`*^9}, {3.600072364013007*^9, 
   3.600072392412217*^9}, {3.600090845600378*^9, 3.6000908459810553`*^9}, {
   3.600090878254984*^9, 3.600090932290251*^9}, {3.600091001853043*^9, 
   3.600091166851041*^9}, {3.600091297397209*^9, 3.6000912978433123`*^9}, {
   3.600094482291164*^9, 3.600094502641637*^9}, {3.600094577882024*^9, 
   3.600094581776475*^9}, {3.600153228630068*^9, 3.6001532599410954`*^9}, {
   3.600153423589492*^9, 3.600153435742185*^9}, {3.601390340706565*^9, 
   3.60139035926153*^9}, {3.601622444788268*^9, 3.601622507610202*^9}, {
   3.601622931148408*^9, 3.601622956020783*^9}, {3.6016230015286903`*^9, 
   3.6016230218652573`*^9}, 3.601626109910359*^9, {3.602857486784349*^9, 
   3.60285749239607*^9}, {3.637577039962811*^9, 3.6375770716417427`*^9}, {
   3.6430865302926817`*^9, 
   3.643086568489581*^9}},ExpressionUUID->"42cdd8f7-16f4-4eb6-a04b-\
739364194911"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{"\[CapitalChi]", "(", 
      RowBox[{
       SubscriptBox["\[Gamma]", "i"], "<", "0"}], ")"}], "\[LessEqual]"}],
    TraditionalForm], 
   SubscriptBox[
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Gamma]", "i"]}], "\[RightBracketingBar]"}], "+"]}], 
  ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600091506754642*^9, 3.600091546586398*^9}, 
   3.600154643457857*^9},ExpressionUUID->"fafbda14-8d49-4ca1-b854-\
0811c2542e98"],

Cell["\<\
as it can also be seen in the following figure.
\
\>", "Text",
 CellChangeTimes->{{3.600072201825953*^9, 3.6000722083525143`*^9}, {
   3.600072271422114*^9, 3.6000723155509863`*^9}, {3.600072364013007*^9, 
   3.600072392412217*^9}, {3.600090845600378*^9, 3.6000908459810553`*^9}, {
   3.600090878254984*^9, 3.600090932290251*^9}, {3.600091001853043*^9, 
   3.600091166851041*^9}, {3.60009129225014*^9, 3.6000914835746737`*^9}, {
   3.600091573755001*^9, 3.600091589195252*^9}, {3.6000930824444017`*^9, 
   3.600093086838382*^9}, 3.60009438495957*^9, {3.600153284105681*^9, 
   3.600153284728677*^9}, 
   3.601386071870221*^9},ExpressionUUID->"cd3096da-c1f9-4ce4-a979-\
8972c4dc6905"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Labeled", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"err", "[", "x", "]"}], ",", 
        RowBox[{"hinge", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1.5"}], ",", "2.5"}], "}"}], ",", 
      RowBox[{"PlotLegend", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<0/1 Error\>\"", ",", "\"\<Hinge Loss\>\""}], "}"}]}], 
      ",", 
      RowBox[{"LegendPosition", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".5", ",", ".2"}], "}"}]}], ",", 
      RowBox[{"LegendShadow", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".02", ",", 
         RowBox[{"-", ".02"}]}], "}"}]}], ",", 
      RowBox[{"LegendSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.2"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Full", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".5"}], ",", "2.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", ".01", "]"}], ",", "Blue"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", ".01", "]"}], ",", "Red"}], "}"}]}], 
        "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    "\"\<Hinge Loss and istantaneous error, as a function of the \
margin.\>\""}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.600093131245949*^9, 3.600093279883689*^9}, {
  3.600093324189554*^9, 3.6000933347352867`*^9}, {3.600093368172399*^9, 
  3.600093404706318*^9}, {3.6000934567967463`*^9, 3.6000934816712933`*^9}, {
  3.600093515357876*^9, 3.6000935181937037`*^9}, {3.600093692311961*^9, 
  3.600093749388242*^9}, {3.60009378075563*^9, 3.600093970889696*^9}, {
  3.600094016823143*^9, 3.600094032366508*^9}, {3.600094118782789*^9, 
  3.600094357553536*^9}},ExpressionUUID->"1b8df8cb-01be-49f0-8de0-\
8877c2595443"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     InsetBox[
      GraphicsBox[{{{}, {}, {
          RGBColor[0, 0, 1], 
          Thickness[0.01], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQrWcv9ur//+/7GcDgg31Q+9nVxvEIfvn5ltz0fd/g
/CtXuF8dTPwK58seyBcxl/kC52/NPsLKf/cTnJ/QY/jhZtNHOP/HpOqO/fYf
4Hw32T3GBoffwvlWU5OeLBN+Deez3zz0IWjSCzj/F1vI+ye3nsL5xxjme64J
fAznG1SfNrS8+gDOb9gfKBHhegfhP4WGlhU21+H8wlCBq0eOX4Tzp4ofb7px
4wScH56+csrPrXsR7lnza8nW+5vg/LyH07MeCy2A8z+YZYREcEyD8znCHJdf
vtoO51tM+exzqqAa4b6PE3W3Xo+B8y1Z9Zc/eBoC5wMAciCYww==
           "]], 
          LineBox[CompressedData["
1:eJxF0HtI0wEQB/C5TdNJQyskMDGtOQ3NIFuGwtbAB7IEh7k/VptODZymopUZ
BmnbciLTRMlwTmI656M5KYviZ7g/jDIEHzXNpm5aosyV5msOHxXV3cFxfODg
jm+QpICfTSaRSPG/+8+84B7Zbv2Wyib9K880/wnbpBi8wrqcN+slBednqDZ1
h4vAWcyfLFFwCVj/2SJcaLkH1hL0nYvM+2BNC0fdbJCD67NbLan9VeABZ58h
43oduFt2N3KkSg3mJisazRI9uKTagxp1qAP3hxQFD01ov4QH8bzjXWA7u3Ld
NP0UPHQ0Tp/W3Qu+QUugcpkvwfO3GKJqugn/E2hneKMfwGpqgLPJMQb2VirU
g6JJ8LubZUpZ8TS4zSiIuHLeBubEDpzwsc+DyTv5b1SFC5jX6PI1ZvgS3gtR
lrum7GBTTy6nUfgd/LdWwOntKo9QJXqtlsbOGV4FR79uMCZ4r4Fz8j3Dzmat
gw2xmjWKbgNsbfAftJG3wAwvYrE10Qk+RuTGuVdug/e3yR1Fcy7wZkq/aJCx
A56KEvszZLvgAoGPb7BlD/NMKgqvoJM4/22OGBkvJdCdGvbJryI3sKCH5Ruw
h74jf1Ju6SSD2xcDmug8CriiWZ4+k4wW8R0MQwrajyCMlwRoeY3wbbUEncl6
vEorRQfKjiQe0KFd0WUHJ/Ros2N+TNeFVgmeXY3vRe+e4hfLCfSX0RoNZRz9
QrGVOf4JXRcjDtNOopPaTj/nzqBf3R5+X76Ero84V5OyjC6cU6cG/UCH8vJm
B9bRVLePrbVbaGtfjDTdhSak2sgzu+hHgd4b+/voXxvoAeM=
           "]]}, {
          RGBColor[1, 0, 0], 
          Thickness[0.01], 
          LineBox[CompressedData["
1:eJxlyX8w23ccx/HUF+2OGsakh6Ita1VNSmsc9/6y0qGlVZ1eR5EOm1+hLaE4
qWV+7Ky1UpJrmM2Pou6YYnbCJzSUsvlRBF1aRExFkJHmx6L23d/743XPe9zL
hkoLjtYikUhexP6rI3y4ururQOVWevLdXQynqQ4XqNQK1Kkx4mftYHjLE4rd
llyBZmbJJSo1hp88ep66LFGgA6V2lC05hrsaMedGBArE2eeduCzBcFwke85u
VqAqWbp4RIDhwfm/P3aOUKCGp8tT7GYMp48yE2N73iJubF+HcwSGT07qrfZG
yVHcqo58vkULt+TRTFwttpHBvOt35gZaeHs8X+d94d9o7tRibn7SHjyyiLI5
mytDTgNkZUIvCVfezyxAsImyhjz5r61IuK8l19npqRRVG7w6wFp4B+4PqEt1
H0hQhT/lxovCHdg727cZfH8FMROi0o/5aUCtG7KxNCdG2Vgj/YZUDQOkH/2a
LorQdcbokel6FThlDlPcpuYRq1vM4sQpgYEukq/4/InmaSa6nxspINiawaz3
ECCTfdY29qNySLlsOMV/No7CTM+ckqVswwOzZ7kzM4Noa/GKobn5FoTGNpSq
2rtRapk/O+KlDJIWyuNExlVID4WYlzM2wTswjzVNrQeLh/SyiYx1EKXZXisy
6IWzP6ethHElwAutfnVufBgM7UMHm/TeAEfbUvlQOgGt2TLsZOEy6BXmcfqv
zcDtLi6lYkwEg6lZhcybQrDo9+ry9F2A2pbQE2GuC9BReaH27A9CwD14hw0l
ImDk53S+PjYDWpqknrvJy6DZe+ibxYMvoHJ8LeYjhzdQ8Nu5L6lBw8CxK7yj
npNAcfRLlWkpD3gtTKVmSQIkT6mlfgIPxO4M2u66BBJMdr20zvDAMYgero2t
QXGej4nwLwQ8erSbwfE1IHlPutx91APiQS+ZTeYazHTKUjftuOAYr470M5dC
cZ2Dss32VwiWywUBtlJIvnwB/2mqA+g5ssDAj6Xwmfatgu+/7QBeyYrHpU+l
QKJ2kWPE7XCJO00Oj5fCV5b+bma1bZC+/8lYcpcU8NLY2xlHWqG3OR5nfbEO
m5iPKtO3ETzSKq1uxqwDziHr/sFqgE6P8XfnU9aB4bJmbC2ph5ah091Y/jqQ
oksc+PceQZVojzutlfDAQoT+bA0wzFjOvu9tAMlwp8hNUAka4XNjG5MNYOA1
dcLMCkiv2ZH9c5D4UwJ4d6w5kEy53vKLC+EJ9tbQ12yIDHA8YRlJuPT01aua
EsBz+HbbHYSd5gPfeucC10ehM9pL+FC4djY5Bz7Rtxc3jBBeUsXtf5wBbRNh
fKaAcF3ZeIXnLXBi36uOWCQ8FpMcVpUITRF9ue5SwiFVntn9VDhqJ48yVRKO
jD2e3hj0P/8LtygPrQ==
           "]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQPSFSd8JTtg/2DFBwbs+x/0E8CD6PQkL+AUEEv+PZ
JL/ZMgh+Q/EPnkAjBH/ftYk1+8wR/D+W2m+0bRH8Coa402weCH5B7+HOPbEI
fsLyPjaNTgSfbXoBt2Ufgr+mLUjAazKC/zNVTCpnLoI/SWWe7oaNCP7RhWtD
LG4h+Fpzzizy0P4I53+ewGWfeRbBt9g1dYM792c4PzOPQ9M45Qucv85m3mfm
ZV/h/AdTpY8+ZPoO56ty7nmxxOMHnC+zJ9uVteMnnP//J9PKoke/4PxvgXvj
jqr+gfNvmcRLq7b8hfPzwwUEle78g/O5vYp0mvgYHGD8a7oXLlfuQfBXzbNX
eRLHCOeHrzcTlP2H4Fe1Lmy8s4oJzl/+QnY2nw8znN80tzXhnh+CHxf0VnVd
IIIvtmfPBt9wBL+1P/pYTxKCn2w28yNXJYIv3yLiwb4Mwf9lUcN7fQWCf+3t
40vLViP4feGbY902Ivh/tYKKW/cg+Lcv9s9jvozgb2v7nnz5KoI/yTpec/EN
BN9rqd4Wp3sI/s6KsycbXyL4U3RN+wPfIPgFj+aEKL5H8DV8cu4f+ILgszBe
WTLhO4L/YKt1VsIvBH9P1mJ9g78I/nR57q///yP4ANxNyrs=
           "]]}, {}}, {{}, {}, {}, {}}}, Axes -> True, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
       GrayLevel[1], BaseStyle -> {"Palatino", Bold, 16}, 
       DisplayFunction :> $DisplayFunction, FormatType -> TraditionalForm, 
       GridLines -> Automatic, ImageSize -> 600, Method -> {}, 
       PlotRange -> {{-1.5, 2.5}, {-0.5, 2.5}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {
         Scaled[0.02], Automatic}], {-1, -0.75}, {Left, Bottom}, {2, 1.5}], 
     GraphicsGroupBox[{{
        GrayLevel[0], 
        RectangleBox[{0.52, 0.18000000000000002`}, {0.92, 0.38}]}, {
        GrayLevel[1], 
        EdgeForm[{
          GrayLevel[0], 
          Thickness[0.001]}], 
        GraphicsGroupBox[{
          RectangleBox[{0.5, 0.2}, {0.9, 0.4}], 
          InsetBox[
           GraphicsBox[{{{
               InsetBox[
                GraphicsBox[{
                  RGBColor[1, 0, 0], 
                  Thickness[0.01], 
                  LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {Left, Bottom}, {
                1, 1}], 
               InsetBox[
               "\"Hinge Loss\"", {1.2100000000000002`, 0.58}, {-1, 0}, 
                Automatic, {1, 0}]}, {
               InsetBox[
                GraphicsBox[{
                  RGBColor[0, 0, 1], 
                  Thickness[0.01], 
                  LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {Left, Bottom}, {
                1, 1}], 
               InsetBox[
               "\"0/1 Error\"", {1.2100000000000002`, 1.74}, {-1, 0}, 
                Automatic, {1, 0}]}}, {}}, AspectRatio -> 0.5, FormatType -> 
            TraditionalForm, PlotRange -> {{-0.1, 3.26}, {-0.1, 2.42}}], {0.5,
            0.2}, {Left, Bottom}, {0.4, 0.2}]}]}}]}, AspectRatio -> Automatic,
     Background -> GrayLevel[1.], ColorOutput -> Automatic, ImageSize -> 600.,
     PlotRange -> All],
   "\"Hinge Loss and istantaneous error, as a function of the margin.\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.600093265892646*^9, {3.600093328029045*^9, 3.600093335201136*^9}, {
   3.600093371478383*^9, 3.6000934054485064`*^9}, {3.6000934650536947`*^9, 
   3.6000934821932898`*^9}, 3.600093518904855*^9, {3.600093682488847*^9, 
   3.600093715270859*^9}, 3.600093758144931*^9, {3.600093789457769*^9, 
   3.600093971955018*^9}, 3.600094026985216*^9, 3.6000941262722054`*^9, {
   3.600094159026362*^9, 3.6000943633867397`*^9}},
 TextAlignment->Center,ExpressionUUID->"ddd99801-c2e8-4bcd-a55c-37e1707a26b9"]
}, Open  ]],

Cell["\<\

The hinge loss is thus clearly a convex piecewise-linear upperbound of the \
0/1 error function. Using this intuition, the hinge-loss classifier objective \
function can be virtually decomposed in two parts: \
\>", "Text",
 CellChangeTimes->{{3.600072201825953*^9, 3.6000722083525143`*^9}, {
   3.600072271422114*^9, 3.6000723155509863`*^9}, {3.600072364013007*^9, 
   3.600072392412217*^9}, {3.600090845600378*^9, 3.6000908459810553`*^9}, {
   3.600090878254984*^9, 3.600090932290251*^9}, {3.600091001853043*^9, 
   3.600091166851041*^9}, {3.60009129225014*^9, 3.6000914835746737`*^9}, {
   3.600091573755001*^9, 3.600091589195252*^9}, {3.6000930824444017`*^9, 
   3.600093086838382*^9}, {3.600094486669729*^9, 3.600094545714559*^9}, {
   3.600094624204111*^9, 3.600094647449463*^9}, {3.600094709463649*^9, 
   3.600094787988662*^9}, {3.6001532947532673`*^9, 3.600153317960039*^9}, {
   3.600154676245984*^9, 3.600154687314789*^9}, {3.6006771590608683`*^9, 
   3.600677176207753*^9}, 3.6013860745439253`*^9, {3.602857536788834*^9, 
   3.602857562095058*^9}, {3.6375770934446173`*^9, 
   3.637577117789996*^9}},ExpressionUUID->"cd05b306-44a4-4653-a394-\
aae7e54cea0c"],

Cell[CellGroupData[{

Cell[TextData[{
 "a \[OpenCurlyDoubleQuote]",
 StyleBox["regularizer",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["w",
     FontWeight->"Bold"]}], TraditionalForm]],ExpressionUUID->
  "4fb2468c-9a69-4e29-abca-6c929e1c785e"],
 ", named in this way because of its role in favoring simple solutions"
}], "Item",
 CellChangeTimes->{{3.600091181152338*^9, 3.6000912605961437`*^9}, {
  3.600094803062545*^9, 3.600094835866577*^9}, {3.6001533264864693`*^9, 
  3.600153364470174*^9}, {3.600154693739958*^9, 3.600154696004071*^9}, {
  3.6074333453055277`*^9, 3.6074333499646683`*^9}, {3.6430864186280327`*^9, 
  3.6430864196400146`*^9}},ExpressionUUID->"e2a70d07-edb2-4698-a91b-\
9cb41244dc0f"],

Cell[TextData[{
 "a weighted loss function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"1", "-", 
        RowBox[{
         SubscriptBox["y", "i"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
       "\[RightBracketingBar]"}], "+"]}]}], TraditionalForm]],ExpressionUUID->
  "99663734-bee0-4513-9106-ea0179fcd33d"],
 ", measuring the hinge-loss on every sample"
}], "Item",
 CellChangeTimes->{{3.600091181152338*^9, 3.6000912878115053`*^9}, {
  3.600094569178194*^9, 3.600094570439437*^9}, {3.6000947993169937`*^9, 
  3.600094825127008*^9}, {3.600153369950371*^9, 3.600153383222048*^9}, {
  3.607433357603455*^9, 3.607433359757029*^9}, {3.607433932426351*^9, 
  3.6074339359775047`*^9}},ExpressionUUID->"8e11f643-5cf7-4609-bfdc-\
cb87b54e29c6"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"2ec01b7a-8df6-4e18-ba30-35a4995c748c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.607433368352339*^9, 
  3.607433374420573*^9}},ExpressionUUID->"2989a964-4b02-4ae5-aca4-\
9a2f21d3a2b8"],

Cell["\<\
As before, we report here the code snippet of this implementation
\
\>", "Text",
 CellChangeTimes->{{3.6005442882927713`*^9, 3.6005443042883883`*^9}, 
   3.601386076379731*^9, 
   3.6074333625220213`*^9},ExpressionUUID->"015f9962-a262-4958-a874-\
d022121faad5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hinge", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "-", "x"}], ",", 
         RowBox[{
          RowBox[{"1", "-", "x"}], ">", "0"}]}], "}"}], "}"}], ",", "0"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"trainSoftMarginHinge", "[", 
    RowBox[{"feats_List", ",", "labels_List", ",", "regC_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "b", ",", "d", ",", "nTr", 
       ",", "v", ",", "w", ",", "regularizer", ",", "loss", ",", "obj", ",", 
       "sol"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "feats", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"regularizer", "=", 
       RowBox[{"w", ".", "w"}]}], ";", "\n", 
      RowBox[{"loss", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"hinge", "@@@", 
         RowBox[{"(", 
          RowBox[{"labels", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"feats", ".", "w"}], "+", "b"}], ")"}]}], ")"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{"regularizer", " ", "+", " ", 
        RowBox[{"regC", " ", "loss"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{
        RowBox[{"FindMinimum", "[", 
         RowBox[{"obj", ",", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"w", ",", 
            RowBox[{"{", "b", "}"}]}], "]"}]}], "]"}], "//", "Quiet"}]}], ";",
       "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Min", "[", 
          RowBox[{"(", 
           RowBox[{"labels", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"feats", ".", 
               RowBox[{"model", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{"model", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "]"}], ")"}],
         "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"model", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600544854869842*^9, 3.600544869258173*^9}, {
  3.600603635602695*^9, 3.6006036366102333`*^9}, {3.601376250280011*^9, 
  3.6013762567611713`*^9}, {3.601573476747438*^9, 3.6015734770535173`*^9}, {
  3.601623044296619*^9, 
  3.601623056384856*^9}},ExpressionUUID->"9c8de514-d24b-4714-b534-\
5221c67253c6"],

Cell["\<\

An example of usage is as follow
\
\>", "Text",
 CellChangeTimes->{{3.6005448879827833`*^9, 3.60054489880509*^9}, {
  3.601386078534184*^9, 3.6013860796351767`*^9}, {3.601560585359741*^9, 
  3.601560587116675*^9}},ExpressionUUID->"85b2fd07-4aa8-4f7b-8417-\
3325b33da83f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60121194128167*^9, 3.601211945994905*^9}, {
  3.601213846066174*^9, 
  3.601213846423414*^9}},ExpressionUUID->"67456d63-0355-4de5-a3ed-\
a4f2cd468042"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$693 = MousePosition["Graphics"]; 
     Private`p$693 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$693], 2], 
          Union[
           Partition[Private`pt$693, 2]]}, 1]]; 
     If[Private`s$693 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$693}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$693}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$693 = {}; 
     Private`s$693 = Private`s$693 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6005449418843603`*^9, 3.600545026353217*^9, 3.600545344832444*^9, {
   3.600549892714267*^9, 3.600549896275764*^9}, {3.600587742396299*^9, 
   3.600587757977747*^9}, 3.600602781749795*^9, 3.600603523043189*^9, 
   3.6006039456469507`*^9, 3.600612998820183*^9, 3.600613812104033*^9, 
   3.6006326442290087`*^9, 3.600671117281825*^9, 3.600671642210066*^9, 
   3.60067180370498*^9, 3.600672265467708*^9, 3.600672525853112*^9, {
   3.600672836554018*^9, 3.600672850631194*^9}, 3.6012063703524323`*^9, 
   3.601209437147979*^9, 3.6012114671204643`*^9, 3.601211946322893*^9, {
   3.6012122448130617`*^9, 3.6012122910579147`*^9}, {3.601212668169895*^9, 
   3.601212668525999*^9}, {3.601213356436779*^9, 3.601213356823247*^9}, 
   3.601213402009972*^9, {3.6012134433127337`*^9, 3.6012134609849977`*^9}, 
   3.601213643644863*^9, 3.601213852234685*^9, 3.601214040359129*^9, 
   3.601214608246007*^9, 3.60121800451103*^9, 3.601286272936027*^9, 
   3.6012958899364843`*^9, 3.601296909755733*^9, 3.601297170433475*^9, 
   3.6012976620494633`*^9, 3.6012988947650013`*^9, 3.6012989471568413`*^9, 
   3.6013046935022507`*^9, 3.601372885069866*^9, 3.601375277184816*^9, 
   3.601559771791875*^9, 3.6015608051139927`*^9, 3.60156216642771*^9, 
   3.601563112013534*^9, 3.6015716450697536`*^9, 3.601572489368885*^9, 
   3.601626156217442*^9, 3.602856855665761*^9, 3.60285972452811*^9, 
   3.607430517837002*^9, 3.607432448325654*^9, 3.63756472510083*^9, 
   3.6375655258096*^9, 3.637565654687269*^9, 3.637566042116534*^9, 
   3.6375733610310087`*^9, 3.6375818995097313`*^9, 3.637582140823168*^9, 
   3.637582201471571*^9, 3.637583464194372*^9, 3.637585525650531*^9, 
   3.6375885585333138`*^9, 3.6376591852004957`*^9, 3.637659328318981*^9, 
   3.6376596482811728`*^9, 3.6376713961710167`*^9},
 TextAlignment->Center,ExpressionUUID->"70047871-55c8-4a95-950d-4ac24ee20818"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runMaxMarginExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"trainSoftMarginHinge", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", ".2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, 
   3.600544981696217*^9, {3.6005450379414673`*^9, 3.60054508839544*^9}, {
   3.600545360991832*^9, 3.600545434011033*^9}, {3.600545472664554*^9, 
   3.600545559374083*^9}, {3.600545609202199*^9, 3.600545627332015*^9}, {
   3.6005479317609177`*^9, 3.600547943871744*^9}, 3.6006036721231003`*^9, {
   3.600604130271123*^9, 3.6006041313075647`*^9}, 3.600672824777946*^9, {
   3.600672888585968*^9, 3.600672926349937*^9}, {3.600673201958695*^9, 
   3.600673221709093*^9}, {3.601211506662661*^9, 3.6012115593205023`*^9}, {
   3.601211963663365*^9, 3.60121206767241*^9}, {3.6012123175245247`*^9, 
   3.60121252049656*^9}, {3.601212561616869*^9, 3.6012125815873137`*^9}, {
   3.601212612434774*^9, 3.601212627681984*^9}, 3.601212679938843*^9, 
   3.6012127106813993`*^9, {3.6012133667569923`*^9, 3.601213367635418*^9}, {
   3.6012134119254217`*^9, 3.6012134339214478`*^9}, {3.601213662321473*^9, 
   3.601213675149495*^9}, {3.6012137652131767`*^9, 3.6012137742405357`*^9}, {
   3.601213833558949*^9, 3.601213835855653*^9}, {3.601213887084127*^9, 
   3.601213912709806*^9}, {3.601287015355753*^9, 3.601287025155109*^9}, 
   3.601287106576169*^9, {3.601297927697929*^9, 3.601297927958023*^9}, {
   3.601298003109445*^9, 3.60129803642181*^9}, {3.601373005470107*^9, 
   3.6013730104967957`*^9}, {3.601373041330082*^9, 3.601373050067439*^9}, 
   3.6028575856574078`*^9},ExpressionUUID->"b9afa8e7-2630-4f3f-ae2d-\
0e7895235b49"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.2}}, Typeset`size$$ = {
    1065., {8., 20.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$12773$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$12773$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runMaxMarginExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`trainSoftMarginHinge[#, #2, 10^$CellContext`c$$]& ], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1116., {61., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.60137303558141*^9, 3.601373053759708*^9}, 
   3.601560219901368*^9, 3.601560605644328*^9, 3.6015606951247168`*^9, 
   3.6015608530852222`*^9, 3.601563162058833*^9, {3.601563636857156*^9, 
   3.601563641360997*^9}, 3.601563683412404*^9, {3.6015637241738586`*^9, 
   3.6015637381113367`*^9}, 3.6015717330080233`*^9, 3.601572618322707*^9, 
   3.6016263703538713`*^9, 3.602857586810186*^9, {3.602859831611567*^9, 
   3.602859859544814*^9}, 3.602860149431301*^9, 3.6074333953964863`*^9, 
   3.6375648805595827`*^9, 3.6375659061552477`*^9, 3.6375660985779543`*^9, 
   3.63758205550838*^9, 3.6375823520399103`*^9, 3.637585618610615*^9, 
   3.637588922277966*^9},
 TextAlignment->Center,ExpressionUUID->"5f329a4f-eadc-4215-8342-001b5151b52e"]
}, Open  ]],

Cell["\<\

As it is possible to see, the behavior of this classifier is very similar to \
the one of the original soft-margin algorithm (though the solution might \
slightly differ, for numerical reasons).
\
\>", "Text",
 CellChangeTimes->{{3.601376100004849*^9, 3.601376134040353*^9}, 
   3.601386086412291*^9, 3.601558674131753*^9, {3.607433419237398*^9, 
   3.607433442678946*^9}},ExpressionUUID->"c94979cb-3207-4631-ae42-\
c675a26664c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minimizing the 0/1 error", "Subsection",
 CellChangeTimes->{{3.601209915340871*^9, 3.601209917694199*^9}, {
  3.60121504252315*^9, 3.601215073415551*^9}, {3.6012152593121233`*^9, 
  3.601215263961134*^9}, {3.60121530191003*^9, 
  3.601215315701867*^9}},ExpressionUUID->"06944fe2-05ae-45ea-81d9-\
31032e7bb976"],

Cell[TextData[{
 "For what we said above, soft-margin maximization - and thus good \
generalization abilities - can be acheived through the minimization of the \
regularized hinge loss function: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["w",
     FontWeight->"Bold"]}], " ", "+", 
   RowBox[{"C", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"1", "-", 
        RowBox[{
         SubscriptBox["y", "i"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
       "\[RightBracketingBar]"}], "+"]}]}]}]], "InlineFormula",
  CellChangeTimes->{{3.6000721591150208`*^9, 3.600072181415753*^9}, {
   3.6000722300726633`*^9, 3.600072241744952*^9}},ExpressionUUID->
  "709da8c8-d557-4467-a5b3-b0b679f20a1b"],
 ".  On the other hand, we have also seen that the hinge-loss is a convex \
piecewise-linear upper-bound to the 0/1 error, which ultimately is the \
quantity that we care about. What would happen if we replace  the hinge-loss \
in this regularized objective function, with a 0/1 error function?\n"
}], "Text",
 CellChangeTimes->{{3.6012099215635433`*^9, 3.601210038930832*^9}, {
   3.601210344003456*^9, 3.60121039523493*^9}, {3.6012144715930243`*^9, 
   3.601214527549773*^9}, {3.601215077486929*^9, 3.601215109167843*^9}, {
   3.601215146221079*^9, 3.601215238753796*^9}, {3.601215269929373*^9, 
   3.601215285806988*^9}, {3.601215331093032*^9, 3.601215398032632*^9}, {
   3.601373105606681*^9, 3.60137322428964*^9}, {3.602857624875058*^9, 
   3.602857634939942*^9}, 3.6074334826529284`*^9, 3.60743392661095*^9, {
   3.637577217810164*^9, 3.63757721874469*^9}, {3.637582771103168*^9, 
   3.6375827734851513`*^9}},ExpressionUUID->"9eb61eec-363f-4915-9fb3-\
f2f2d2af97c3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.607433486692894*^9, 
  3.607433492728703*^9}},ExpressionUUID->"543d6a15-1a3b-4506-b66a-\
5118af991404"],

Cell[TextData[{
 "We can verify this by using the numerical optimization abilities of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (",
 StyleBox["NMinimize", "Code"],
 ") to solve"
}], "Text",
 CellChangeTimes->{{3.6012099215635433`*^9, 3.601210038930832*^9}, {
   3.601210344003456*^9, 3.60121039523493*^9}, {3.6012144715930243`*^9, 
   3.601214527549773*^9}, {3.601215077486929*^9, 3.601215109167843*^9}, {
   3.601215146221079*^9, 3.601215238753796*^9}, {3.601215269929373*^9, 
   3.601215285806988*^9}, {3.601215331093032*^9, 3.601215398032632*^9}, {
   3.601373105606681*^9, 3.60137322428964*^9}, {3.602857624875058*^9, 
   3.602857634939942*^9}, 
   3.6074334826529284`*^9},ExpressionUUID->"d8ae073f-cb2a-429e-b92f-\
68df92ba4081"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["min", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], " ", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], "\[CenterDot]", 
     StyleBox["w",
      FontWeight->"Bold"]}]}], " ", "+", 
   RowBox[{"C", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"\[CapitalChi]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "i"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "<", "0"}], 
       ")"}]}]}]}]}], ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6000721591150208`*^9, 3.600072181415753*^9}, {
   3.6000722300726633`*^9, 3.600072241744952*^9}, {3.6012104743903723`*^9, 
   3.601210487709112*^9}, 
   3.60121053938375*^9},ExpressionUUID->"487bb05b-e410-48af-a523-\
cc29508bfd9f"],

Cell[TextData[{
 "Note that, although the objective function still includes a regularizer, \
the indicator function ",
 Cell[BoxData[
  FormBox["\[CapitalChi]", TraditionalForm]],ExpressionUUID->
  "c7b9fd83-8a41-46e1-bf2e-789740164c96"],
 " does not measure the margin obtained by ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "ffc635dc-d29e-481c-ac93-1551b1cc9354"],
 ", but only the 0/1 error. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " we can minimize this function for example, by asking NMinimize to perform \
a random search, as shown in the following code snippet\n"
}], "Text",
 CellChangeTimes->{{3.60121049972244*^9, 3.6012105058656883`*^9}, {
   3.601210541564143*^9, 3.6012105688797617`*^9}, {3.60121453139952*^9, 
   3.601214578522887*^9}, {3.6012154037449617`*^9, 3.601215408313727*^9}, {
   3.601373232196843*^9, 3.601373252758483*^9}, 3.601386088896632*^9, {
   3.637582608594431*^9, 3.637582632277896*^9}, {3.637582716462081*^9, 
   3.637582735381411*^9}, {3.637582788322219*^9, 3.637582801326556*^9}, {
   3.6375828373589354`*^9, 3.6375829585811663`*^9}, {3.6375830268854923`*^9, 
   3.6375830292114697`*^9}, {3.637583192864036*^9, 3.6375831970239058`*^9}, {
   3.6375832709007597`*^9, 
   3.637583345646347*^9}},ExpressionUUID->"6e054c7c-f0aa-4261-bd3f-\
3ef2b0e7e8d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainZeroOneError", "[", 
    RowBox[{"c_", ",", "feats_", ",", "labels_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "b", ",", "d", ",", "nTr", 
       ",", "v", ",", "w", ",", "regularizer", ",", "loss", ",", "obj", ",", 
       "sol"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "feats", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"regularizer", "=", 
       RowBox[{"w", ".", "w"}]}], ";", "\n", 
      RowBox[{"loss", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"err", "@@@", 
         RowBox[{"(", 
          RowBox[{"labels", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"feats", ".", "w"}], "+", "b"}], ")"}]}], ")"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{"regularizer", " ", "+", " ", 
        RowBox[{"c", " ", "loss"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"NMinimize", "[", 
        RowBox[{"obj", ",", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"w", ",", 
           RowBox[{"{", "b", "}"}]}], "]"}], ",", " ", 
         RowBox[{"Method", "\[Rule]", "\"\<RandomSearch\>\""}]}], "]"}]}], 
      ";", "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Norm", "[", 
          RowBox[{"model", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], 
        RowBox[{"(", 
         RowBox[{"Min", "[", 
          RowBox[{"(", 
           RowBox[{"labels", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"feats", ".", 
               RowBox[{"model", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{"model", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "]"}], 
         ")"}]}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601210571525784*^9, 3.6012105835260897`*^9}, {
  3.601573414482918*^9, 
  3.601573440950531*^9}},ExpressionUUID->"3d27ca2c-182b-400b-a149-\
70687907823f"],

Cell["\<\

Following is an example of usage of this code
\
\>", "Text",
 CellChangeTimes->{{3.6005448879827833`*^9, 3.60054489880509*^9}, {
  3.601210632252318*^9, 3.601210638991849*^9}, {3.601373260890164*^9, 
  3.601373269229082*^9}, {3.601386091010215*^9, 3.601386092805372*^9}, {
  3.637582593947945*^9, 
  3.6375825954243917`*^9}},ExpressionUUID->"da57480a-049c-4d17-a4c9-\
a6153dea8080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601214091257781*^9, 3.601214096377967*^9}, {
  3.601214601576762*^9, 
  3.6012146018379908`*^9}},ExpressionUUID->"c2419323-a9f4-4568-859a-\
c3abdf4f4f4f"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$719 = MousePosition["Graphics"]; 
     Private`p$719 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$719], 2], 
          Union[
           Partition[Private`pt$719, 2]]}, 1]]; 
     If[Private`s$719 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$719}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$719}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$719 = {}; 
     Private`s$719 = Private`s$719 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.60121087419002*^9, {3.601210940269863*^9, 3.6012109481673*^9}, 
   3.60121099324424*^9, {3.601211467185676*^9, 3.6012114673875103`*^9}, {
   3.601212264618929*^9, 3.6012122907590446`*^9}, 3.60121266821483*^9, 
   3.601213356497918*^9, {3.601214040450753*^9, 3.601214040704617*^9}, 
   3.60121409680414*^9, {3.601214608348693*^9, 3.601214608629203*^9}, 
   3.6012180045608263`*^9, 3.601286272978816*^9, 3.601295889980215*^9, 
   3.601296909781158*^9, 3.601297170474646*^9, 3.6012976620815477`*^9, 
   3.60129889488898*^9, 3.601298947184609*^9, 3.601304693536516*^9, 
   3.601372885110718*^9, 3.601375277226056*^9, 3.6015597718380957`*^9, 
   3.601562166493429*^9, 3.601563112057412*^9, 3.601571645114797*^9, 
   3.601572489412768*^9, 3.6016261562586946`*^9, 3.602856855701194*^9, 
   3.6028597245657988`*^9, 3.607430517877798*^9, 3.607432448368534*^9, 
   3.637564725132847*^9, 3.637565525847085*^9, 3.637565654716428*^9, 
   3.637566042161289*^9, 3.6375733610705833`*^9, 3.6375818995422907`*^9, {
   3.637582140871317*^9, 3.637582141111209*^9}, 3.637582201506496*^9, 
   3.637583464222974*^9, 3.637585525737719*^9, 3.637588558595929*^9, 
   3.637659185250656*^9, 3.637659328373419*^9, 3.637659648328662*^9, 
   3.637671396219679*^9},
 TextAlignment->Center,ExpressionUUID->"8379ff10-e696-4c27-ad88-4bf46d0998dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runMaxMarginExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"trainZeroOneError", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "10", ",", ".2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.601206412072904*^9, 3.601206439602756*^9}, {
   3.601207402577566*^9, 3.601207422893263*^9}, {3.601207473430217*^9, 
   3.6012074880340767`*^9}, {3.6012075318410597`*^9, 3.601207549397902*^9}, {
   3.601207579515867*^9, 3.6012076661646357`*^9}, {3.601207702131342*^9, 
   3.601207756902109*^9}, {3.60120779520131*^9, 3.601207802489641*^9}, {
   3.601207892818038*^9, 3.601207942630393*^9}, {3.6012079732655983`*^9, 
   3.60120805640635*^9}, 3.6012085698823757`*^9, {3.601208744131277*^9, 
   3.601208749528508*^9}, {3.601208846906273*^9, 3.601208878723583*^9}, {
   3.60120891918299*^9, 3.601208982964459*^9}, {3.601209016606789*^9, 
   3.601209071829247*^9}, {3.601209105216289*^9, 3.601209105504429*^9}, {
   3.601209176094448*^9, 3.601209188093761*^9}, {3.601209465009707*^9, 
   3.601209465726193*^9}, {3.601209495974411*^9, 3.6012095473117437`*^9}, {
   3.601209578809228*^9, 3.601209584813322*^9}, 3.6012096397776337`*^9, {
   3.60120985755095*^9, 3.6012098579378023`*^9}, {3.601287041349455*^9, 
   3.6012870991566477`*^9}, {3.601298065938662*^9, 
   3.601298071661854*^9}},ExpressionUUID->"3c9b77f8-c693-4425-95eb-\
6523c3d7fb23"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 7.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 10, 0.2}}, Typeset`size$$ = {
    400., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$21516$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$21516$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runMaxMarginExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`trainZeroOneError[#, #2, 10^$CellContext`c$$]& ], 
      "Specifications" :> {{$CellContext`c$$, 0, 10, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {247., 256.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.601563369208535*^9, 3.60157175384159*^9, 3.6015726548731318`*^9, 
   3.6016264029562387`*^9, 3.602857644758247*^9, 3.602860159017392*^9, 
   3.607433503336472*^9, 3.6375650928769083`*^9, 3.6375659287909822`*^9, 
   3.637574038211939*^9, 3.637582074764988*^9, {3.637582156703615*^9, 
   3.6375821690456257`*^9}, 3.637582360592127*^9, 3.6375856319604073`*^9, 
   3.637588951460347*^9},
 TextAlignment->Center,ExpressionUUID->"6ab9e0e6-7d58-437a-9b23-4a1370db2f4c"]
}, Open  ]],

Cell[TextData[{
 "\nAs it is possible to see ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " may be able to find an hyperplane minimizing the training 0/1 error. \
However, not only the optimization is much harder (as the objective function \
has always sub-gradient 0) but, more importantly, without promoting any \
margin maximization the generalization abilities of the classifier are \
clearly negatively affected. This in turn results in a high testing error \
rate."
}], "Text",
 CellChangeTimes->{{3.6012106431864967`*^9, 3.601210688540284*^9}, {
   3.601210771627122*^9, 3.6012108692579308`*^9}, {3.6012146700441027`*^9, 
   3.6012146935613422`*^9}, {3.601214731122373*^9, 3.6012147453805923`*^9}, {
   3.601214817452739*^9, 3.601215028390627*^9}, {3.601215415462797*^9, 
   3.601215415846622*^9}, 3.6013860958792686`*^9, {3.6028576648450603`*^9, 
   3.602857666219592*^9}, {3.607433538013639*^9, 3.607433541302189*^9}, {
   3.607433572582103*^9, 3.607433574507115*^9}, {3.6375834173384123`*^9, 
   3.637583426863504*^9}},ExpressionUUID->"5cfdba45-6554-4a3d-aebd-\
a90f2b80d086"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tSupport Vector Machines"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.600154775042107*^9, 3.6001547788358383`*^9}},
 CellTags->"sec:svm",ExpressionUUID->"8b377088-801a-4cc6-acb9-b7fbd0e8f3b5"],

Cell[TextData[{
 "In the previous Section we introduced the basic theory of max-margin \
classifiers. A Support Vector Machine is basically a max-margin classifier \
(hard or soft-margin) trained in a different way. In this section we will \
first briefly introduce the ",
 StyleBox["convex optimization",
  FontSlant->"Italic"],
 " theory ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "28a54667-5043-4d87-84bd-0a49d3c16cc8"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 " necessary to derive the SVM algorithm, and then perform the derivations \
necessary to obtain SVMs and finally present the resulting implementations.\n"
}], "Text",
 CellChangeTimes->{{3.600154875125265*^9, 3.6001549181816397`*^9}, 
   3.600155031827753*^9, {3.6001553088687277`*^9, 3.600155366668939*^9}, {
   3.600155430120121*^9, 3.600155445536603*^9}, {3.6001554825240726`*^9, 
   3.600155496361331*^9}, {3.600155582648361*^9, 3.6001555947194567`*^9}, {
   3.600414871766923*^9, 3.600414873146832*^9}, {3.600429222572053*^9, 
   3.600429337504127*^9}, {3.600511207971109*^9, 3.600511228061693*^9}, {
   3.600512833942341*^9, 3.6005128343868933`*^9}, {3.600677197978772*^9, 
   3.6006773089673767`*^9}, {3.600677372353778*^9, 3.600677376555369*^9}, {
   3.6006786361826878`*^9, 3.600678644731577*^9}, 3.601558667665824*^9, {
   3.607433596645958*^9, 3.607433614258649*^9}, {3.637577530666527*^9, 
   3.637577531167904*^9}},ExpressionUUID->"8d2089f3-5b93-41da-95f3-\
4f53e27c9207"],

Cell[CellGroupData[{

Cell["Convex Optimization Theory", "Subsection",
 CellChangeTimes->{{3.600429345878928*^9, 
  3.600429351035904*^9}},ExpressionUUID->"636dd8a5-e124-415f-b970-\
f5601e14510e"],

Cell["Suppose we are given an optimization problem of the form", "Text",
 CellChangeTimes->{{3.600415182339123*^9, 3.600415235021255*^9}, {
  3.6004152679843388`*^9, 3.60041532191236*^9}, {3.600415439755579*^9, 
  3.6004155884965687`*^9}, {3.600415641729501*^9, 3.600415652938727*^9}, {
  3.600416054015314*^9, 3.6004160579326*^9}, {3.600416453336545*^9, 
  3.600416454451515*^9}, {3.600416911156144*^9, 3.600416911686496*^9}, {
  3.600678620696653*^9, 
  3.6006786305596952`*^9}},ExpressionUUID->"732ea5d0-b8d0-4aea-847a-\
c9b953044e95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["min", 
    StyleBox["w",
     FontWeight->"Bold"]], "f", 
   RowBox[{"(", 
    StyleBox["w",
     FontWeight->"Bold"], ")"}]}], ",", "         ", 
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], "\[Element]", "\[CapitalOmega]", "\[Subset]", 
   SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", 
     SubscriptBox["g", "i"]}], 
    RowBox[{"(", 
     StyleBox["w",
      FontWeight->"Bold"], ")"}]}], "\[LessEqual]", "0"}], ",", " ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{"\t ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["h", "i"], 
     RowBox[{"(", 
      StyleBox["w",
       FontWeight->"Bold"], ")"}]}], "=", "0"}], ",", " ", 
   RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
   "m"}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600415328840414*^9, 3.6004154058700333`*^9}, {
   3.600415665891083*^9, 3.6004157237966223`*^9}, {3.600415896963788*^9, 
   3.600415897999427*^9}, 3.600417100003827*^9, {3.600418690524115*^9, 
   3.600418694226101*^9}},
 CellTags->
  "primal_problem",ExpressionUUID->"8c84cf9b-3ddd-4ac4-b928-9579ab0bba01"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a6c621bb-ab70-46e2-b070-8387b7206d58"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "i"], ",", 
    RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"b1622c60-dff6-46cf-8d87-8d07f630b390"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "i"], ",", " ", 
    RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "m"}], 
   TraditionalForm]],ExpressionUUID->"a3a4aef3-7957-4e11-a3b8-309cc481a3a4"],
 ",  are a set of real functions defined on a domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalOmega]", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}], TraditionalForm]],
  ExpressionUUID->"45421e90-b6fd-49cd-a08b-bed7a33407da"],
 " . This problem is refered to as the ",
 StyleBox["primal problem",
  FontSlant->"Italic"],
 ".\n\nThe ",
 StyleBox["generalized Lagrangian",
  FontSlant->"Italic"],
 " of the minimization problem (",
 
 CounterBox["DisplayFormulaNumbered", "primal_problem"],
 ") is defined as"
}], "Text",
 CellChangeTimes->{{3.6004156039110603`*^9, 3.6004156486544733`*^9}, {
  3.6004157289837933`*^9, 3.600415772365546*^9}, {3.6004158993933773`*^9, 
  3.600415899750411*^9}, {3.600416060875347*^9, 3.600416063338799*^9}, {
  3.600416102200801*^9, 3.600416104148707*^9}, {3.600416355581702*^9, 
  3.600416380401072*^9}, {3.600416414240261*^9, 3.600416532321621*^9}, {
  3.6004169138287563`*^9, 3.6004169213589773`*^9}, {3.600418102342947*^9, 
  3.600418115255018*^9}, {3.600428905610808*^9, 3.6004289099762383`*^9}, {
  3.600429414824535*^9, 3.600429429469164*^9}, {3.6006785802651653`*^9, 
  3.6006785805358467`*^9}, {3.6006786649110613`*^9, 
  3.6006786652763*^9}},ExpressionUUID->"838899d1-87a0-4363-9d84-b7f3a5d6a7c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Beta]",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f", 
      RowBox[{"(", 
       StyleBox["w",
        FontWeight->"Bold"], ")"}]}], "+", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["g", "i"], 
       RowBox[{"(", 
        StyleBox["w",
         FontWeight->"Bold"], ")"}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "m"], 
      RowBox[{
       SubscriptBox["\[Beta]", "i"], 
       SubscriptBox["h", "i"], 
       RowBox[{"(", 
        StyleBox["w",
         FontWeight->"Bold"], ")"}]}]}]}], "=", " ", 
    RowBox[{
     RowBox[{"f", 
      RowBox[{"(", 
       StyleBox["w",
        FontWeight->"Bold"], ")"}]}], "+", 
     RowBox[{
      RowBox[{
       StyleBox["\[Alpha]",
        FontWeight->"Bold"], "\[Transpose]"}], 
      StyleBox["g",
       FontWeight->"Bold"], 
      RowBox[{"(", 
       StyleBox["w",
        FontWeight->"Bold"], ")"}]}], "+", 
     RowBox[{
      RowBox[{
       StyleBox["\[Beta]",
        FontWeight->"Bold"], "\[Transpose]"}], 
      StyleBox["h",
       FontWeight->"Bold"], 
      RowBox[{"(", 
       StyleBox["w",
        FontWeight->"Bold"], ")"}]}]}]}]}], ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600415778069233*^9, 3.600415886046279*^9}, {
  3.6004159335411863`*^9, 3.600416041078998*^9}, {3.600416311897974*^9, 
  3.600416312525124*^9}, {3.600417144930235*^9, 3.6004171523903913`*^9}, {
  3.600418677149428*^9, 
  3.600418685861945*^9}},ExpressionUUID->"25a63f95-2e62-48fa-9c9a-\
e6d6917c4558"],

Cell[TextData[{
 "and the ",
 StyleBox["Lagrangian dual problem",
  FontSlant->"Italic"],
 " is defined as"
}], "Text",
 CellChangeTimes->{{3.60041604667068*^9, 3.600416068173777*^9}, {
  3.600416116838738*^9, 3.6004161580773067`*^9}, {3.6004163089355993`*^9, 
  3.600416309859293*^9}, {3.600417049611938*^9, 3.600417053903081*^9}, {
  3.60067858810745*^9, 3.600678588418157*^9}, {3.600678666438592*^9, 
  3.600678666894721*^9}},ExpressionUUID->"5f5833a7-d0e0-45b7-9829-\
2436cfb1a3c6"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["max", 
   RowBox[{
    StyleBox["\[Alpha]",
     FontWeight->"Bold"], ",", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]}]], "  ", 
  StyleBox["\[Theta]",
   FontWeight->"Bold"], 
  RowBox[{"(", 
   RowBox[{
    StyleBox["\[Alpha]",
     FontWeight->"Bold"], ",", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", ".", "t", ".", " ", 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"]}], "\[GreaterEqual]", 
   StyleBox["0",
    FontWeight->"Bold"]}], ","}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60041604667068*^9, 3.600416068173777*^9}, {
  3.600416116838738*^9, 3.600416290006764*^9}, {3.6004175737175837`*^9, 
  3.600417578551526*^9}, {3.600417988927905*^9, 3.60041806731647*^9}},
 CellTags->
  "eq:dual_problem",ExpressionUUID->"683e7de3-2e30-419c-9217-b7047432b84e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["\[Theta]",
      FontWeight->"Bold"], "(", 
     RowBox[{
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], ",", 
      StyleBox["\[Beta]",
       FontWeight->"Bold"]}], ")"}], "=", " ", 
    RowBox[{
     SubscriptBox["inf", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[Element]", "\[CapitalOmega]"}]], 
     RowBox[{"L", "(", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", 
       StyleBox["\[Alpha]",
        FontWeight->"Bold"], ",", 
       StyleBox["\[Beta]",
        FontWeight->"Bold"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "45be1f53-5c38-495a-a665-edae185fdcb8"],
 ".\nWe will now cite the following important results from optimization \
theory."
}], "Text",
 CellChangeTimes->{{3.600416566102697*^9, 3.600416579133808*^9}, {
  3.600416648379065*^9, 3.600416683946109*^9}, {3.600416787348226*^9, 
  3.600416826918919*^9}, {3.600417294162068*^9, 3.6004173156659803`*^9}, {
  3.600418044059804*^9, 3.600418124542616*^9}, {3.600427516955368*^9, 
  3.6004275342828817`*^9}, {3.600429444385693*^9, 
  3.600429444854097*^9}},ExpressionUUID->"bc25d2d5-3afd-4753-b325-\
c1ae0ea8842e"],

Cell[TextData[{
 StyleBox["Theorem 2 ", "Subsection"],
 StyleBox["(",
  FontWeight->"Plain"],
 StyleBox["Strong duality theorem",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[")",
  FontWeight->"Plain"],
 StyleBox[".", "Subsection"],
 " Let ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["w",
     FontWeight->"Bold"], "*"], TraditionalForm]],ExpressionUUID->
  "9dff8cab-09cf-4323-a954-af24da42d32b"],
 " be the solution of the of the primal optimization problem (",
 
 CounterBox["DisplayFormulaNumbered", "primal_problem"],
 ") and let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], "*"], ",", 
     SuperscriptBox[
      StyleBox["\[Beta]",
       FontWeight->"Bold"], "*"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "343f70b7-390a-4158-945f-9c37924e7a36"],
 " be the solution of the Lagrangian dual problem (",
 
 CounterBox["DisplayFormulaNumbered", "eq:dual_problem"],
 ").\nIf ",
 Cell[BoxData[
  FormBox["\[CapitalOmega]", TraditionalForm]],ExpressionUUID->
  "a6dc1fa2-9db7-4b9e-9ba7-5c9d17aeb8d5"],
 " is convex and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "i"], ",", 
    SubscriptBox["h", "i"]}], TraditionalForm]],ExpressionUUID->
  "78c5da61-3c96-4779-a385-24ea1559385b"],
 " are affine functions (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "i"], "(", 
     StyleBox["w",
      FontWeight->"Bold"], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["a",
        FontWeight->"Bold"], "\[Transpose]"}], 
      StyleBox["w",
       FontWeight->"Bold"]}], "-", "d"}]}], TraditionalForm]],ExpressionUUID->
  "ac0537f7-f385-4335-8c24-ca5239dc2795"],
 "), then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SuperscriptBox[
      StyleBox["w",
       FontWeight->"Bold"], "*"], ")"}], "=", 
    RowBox[{
     StyleBox["\[Theta]",
      FontWeight->"Bold"], "(", 
     RowBox[{
      SuperscriptBox[
       StyleBox["\[Alpha]",
        FontWeight->"Bold"], "*"], ",", 
      SuperscriptBox[
       StyleBox["\[Beta]",
        FontWeight->"Bold"], "*"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"8c0c5b2f-d90a-4c75-bbaa-78aeafb7bf1a"],
 ". "
}], "Text",
 CellChangeTimes->{{3.6004156039110603`*^9, 3.6004156486544733`*^9}, {
   3.6004157289837933`*^9, 3.600415772365546*^9}, {3.600416874764727*^9, 
   3.6004168785045643`*^9}, {3.6004169244023333`*^9, 
   3.6004170120570917`*^9}, {3.600417044456476*^9, 3.600417076161985*^9}, {
   3.6004171677026377`*^9, 3.600417242629196*^9}, {3.600417279678604*^9, 
   3.600417289065919*^9}, {3.6004173207138443`*^9, 3.600417336754115*^9}, {
   3.600417605760099*^9, 3.600417622161007*^9}, {3.600418193059209*^9, 
   3.6004184479104156`*^9}, {3.600418526867786*^9, 3.6004185274644403`*^9}, {
   3.600419015125244*^9, 3.600419018595573*^9}, {3.600425897987835*^9, 
   3.600425898295209*^9}, {3.600426133978353*^9, 3.600426135471858*^9}, {
   3.600427111261457*^9, 3.600427112864626*^9}, {3.6004271726863937`*^9, 
   3.600427175101616*^9}, {3.600427520940413*^9, 3.6004275211997004`*^9}, 
   3.600427735726377*^9, {3.6004288268446207`*^9, 3.600428827126993*^9}, {
   3.600513222779529*^9, 3.600513223571279*^9}, {3.6375776532850857`*^9, 
   3.6375776972475224`*^9}},ExpressionUUID->"69cbf817-7d93-48fc-be35-\
befb43b6d7ed"],

Cell[TextData[{
 StyleBox["Theorem 3 ", "Subsection"],
 StyleBox["(",
  FontWeight->"Plain"],
 StyleBox["Karush\[Dash]Kuhn\[Dash]Tucker",
  FontSlant->"Italic"],
 StyleBox[" - KKT - optimality conditions",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[")",
  FontWeight->"Plain"],
 StyleBox[".", "Subsection"],
 " Given a primal optimization problem (",
 
 CounterBox["DisplayFormulaNumbered", "primal_problem"],
 "), where ",
 Cell[BoxData[
  FormBox["\[CapitalOmega]", TraditionalForm]],ExpressionUUID->
  "ea3cc041-c4a1-4a6c-88fa-096828399829"],
 " is convex, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "i"], ",", 
    SubscriptBox["h", "i"]}], TraditionalForm]],ExpressionUUID->
  "5b997a33-8f96-4b74-a3d4-8c087ad9bc5b"],
 " are affine functions and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "\[Element]", 
    SuperscriptBox["\[ScriptCapitalC]", "1"]}], TraditionalForm]],
  ExpressionUUID->"13de5130-93cc-4297-b143-e80e53c3ac16"],
 ". Necessary and sufficient conditions for a point ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["w",
     FontWeight->"Bold"], "*"], TraditionalForm]],ExpressionUUID->
  "068262fe-9097-4760-873a-a0b0204fcdbb"],
 " to be an optimum are  the existence of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "*"], ",", 
    SuperscriptBox[
     StyleBox["\[Beta]",
      FontWeight->"Bold"], "*"]}], TraditionalForm]],ExpressionUUID->
  "fd2e5c65-3b99-4eda-afcb-b2ad4ad53e46"],
 " such that"
}], "Text",
 CellChangeTimes->{{3.6004156039110603`*^9, 3.6004156486544733`*^9}, {
   3.6004157289837933`*^9, 3.600415772365546*^9}, {3.600416874764727*^9, 
   3.6004168785045643`*^9}, {3.6004169244023333`*^9, 
   3.6004170120570917`*^9}, {3.600417044456476*^9, 3.600417076161985*^9}, {
   3.6004171677026377`*^9, 3.600417242629196*^9}, {3.600417279678604*^9, 
   3.600417289065919*^9}, {3.6004173207138443`*^9, 3.600417336754115*^9}, {
   3.600417605760099*^9, 3.600417622161007*^9}, {3.600418193059209*^9, 
   3.6004184479104156`*^9}, {3.600418526867786*^9, 3.6004185274644403`*^9}, {
   3.600419015125244*^9, 3.600419018595573*^9}, {3.600425897987835*^9, 
   3.600425898295209*^9}, {3.600426133978353*^9, 3.600426135471858*^9}, {
   3.600427111261457*^9, 3.600427112864626*^9}, {3.6004271726863937`*^9, 
   3.600427175101616*^9}, {3.600427520940413*^9, 3.6004275211997004`*^9}, 
   3.600427735726377*^9, {3.600427809285172*^9, 3.600427885849931*^9}, {
   3.600427931483832*^9, 3.6004280662357693`*^9}, {3.600428420767791*^9, 
   3.60042842139086*^9}, {3.600428469156039*^9, 3.600428472735189*^9}, {
   3.600428831434767*^9, 3.600428831543598*^9}, {3.6004299159154577`*^9, 
   3.600429919811499*^9}},ExpressionUUID->"c363b972-272a-4eed-830e-\
a9de8a522e27"],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", "L"}], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", 
      SuperscriptBox[
       StyleBox["\[Alpha]",
        FontWeight->"Bold"], "*"], ",", 
      SuperscriptBox[
       StyleBox["\[Beta]",
        FontWeight->"Bold"], "*"]}], ")"}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["w",
     FontWeight->"Bold"]}]], "=", 
  StyleBox["0",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", "L"}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       StyleBox["w",
        FontWeight->"Bold"], "*"], ",", 
      SuperscriptBox[
       StyleBox["\[Alpha]",
        FontWeight->"Bold"], "*"], ",", 
      StyleBox["\[Beta]",
       FontWeight->"Bold"]}], ")"}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]}]], "=", 
  StyleBox["0",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Alpha]", "i"], "*"], 
    SubscriptBox["g", "i"], 
    RowBox[{"(", 
     SuperscriptBox[
      StyleBox["w",
       FontWeight->"Bold"], "*"], ")"}]}], "=", "0"}], ",", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  RowBox[{"n", "                ", 
   StyleBox[
    RowBox[{"(", 
     RowBox[{"KKT", " ", "complementarity", " ", "condition"}], ")"}], 
    "Text"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["g", "i"], 
    RowBox[{"(", 
     SuperscriptBox[
      StyleBox["w",
       FontWeight->"Bold"], "*"], ")"}]}], "\[LessEqual]", "0"}], ",", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox[
    SubscriptBox["\[Alpha]", "i"], "*"], "\[GreaterEqual]", "0"}], ",", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600428098450416*^9, 3.600428276349086*^9}, {
  3.60042830994925*^9, 3.600428360656294*^9}, {3.600428971555417*^9, 
  3.60042897299465*^9}, {3.600429597108923*^9, 3.600429603784739*^9}, {
  3.600515291370558*^9, 3.6005153267401447`*^9}},
 CellTags->"eq:kkt",ExpressionUUID->"9e89ef74-fd83-4028-ab0c-3017a3d0581e"],

Cell[TextData[{
 "Theorem 2 tells us that if ",
 Cell[BoxData[
  FormBox["\[CapitalOmega]", TraditionalForm]],ExpressionUUID->
  "537cf0f9-65ac-4d11-8e8c-f00e9e0fb212"],
 " is convex and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "i"], ",", 
    SubscriptBox["h", "i"]}], TraditionalForm]],ExpressionUUID->
  "5ef698f7-12f4-4cb2-91b3-1bfca9e84e17"],
 " are affine functions, the optimal value of the primal problem can be \
obtained by solving the Lagrangian dual problem. Moreover, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "\[Element]", 
    SuperscriptBox["\[ScriptCapitalC]", "1"]}], TraditionalForm]],
  ExpressionUUID->"d744db3b-e335-4df6-b330-bcfdec09ad65"],
 " Theorem 3 gives us the conditions characterizing the solution of both the \
primal and the dual problems. For example, the first condition in (",
 
 CounterBox["DisplayFormulaNumbered", "eq:kkt"],
 ") provides a way to compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\[Theta]",
     FontWeight->"Bold"], "(", 
    RowBox[{
     SuperscriptBox[
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], "*"], ",", 
     SuperscriptBox[
      StyleBox["\[Beta]",
       FontWeight->"Bold"], "*"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "cbb82896-0374-4fec-a79f-73288f4f4f7d"],
 ", as it is showcased below for the SVM optimization problem.\n"
}], "Text",
 CellChangeTimes->{{3.6004156039110603`*^9, 3.6004156486544733`*^9}, {
   3.6004157289837933`*^9, 3.600415772365546*^9}, {3.600416874764727*^9, 
   3.6004168785045643`*^9}, {3.6004169244023333`*^9, 
   3.6004170120570917`*^9}, {3.600417044456476*^9, 3.600417076161985*^9}, {
   3.6004171677026377`*^9, 3.600417242629196*^9}, {3.600417279678604*^9, 
   3.600417289065919*^9}, {3.6004173207138443`*^9, 3.600417336754115*^9}, {
   3.600417411934288*^9, 3.600417423052297*^9}, {3.6004175079538803`*^9, 
   3.6004175395920963`*^9}, {3.600418577302629*^9, 3.600418671703981*^9}, {
   3.600418713467914*^9, 3.600418786173774*^9}, {3.600418820726795*^9, 
   3.6004188963217573`*^9}, 3.600418938868869*^9, {3.60041909773505*^9, 
   3.600419110274001*^9}, 3.600425266898609*^9, 3.6004255520373907`*^9, {
   3.600425630225403*^9, 3.6004256330049477`*^9}, {3.600427729505784*^9, 
   3.600427734453733*^9}, {3.600428975423246*^9, 3.600429058864686*^9}, {
   3.600429095992033*^9, 3.6004291459168453`*^9}, 3.600429196837678*^9, {
   3.600429940666926*^9, 3.6004299498798103`*^9}, {3.60043000224362*^9, 
   3.600430227450808*^9}, {3.6004302759189262`*^9, 3.6004302930976877`*^9}, 
   3.601385814964429*^9, 3.601558663281171*^9, {3.607433654410502*^9, 
   3.607433656197339*^9}, {3.607433715280018*^9, 3.607433715673252*^9}, {
   3.637578039799329*^9, 
   3.63757806250173*^9}},ExpressionUUID->"cc687e90-5346-4b45-b90b-\
7b2057601d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support Vector Machines", "Subsection",
 CellChangeTimes->{{3.600429383935976*^9, 
  3.600429387959351*^9}},ExpressionUUID->"fb21b2a3-23db-4f8e-9431-\
1a711f46f324"],

Cell[TextData[{
 "Support Vector Machines arise when applying the convex optimization theory \
outlined above, to the max-margin classifiers introduced in Section ",
 
 CounterBox["Section", "sec:max_margin"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.600512740961812*^9, 3.600512801119184*^9}, {
   3.60051283892124*^9, 3.600512850395771*^9}, 3.601558659500217*^9, {
   3.601558736117927*^9, 
   3.601558740347517*^9}},ExpressionUUID->"87759d45-1983-4b40-9c09-\
6be30e3d4902"],

Cell[CellGroupData[{

Cell["Hard-margin SVM", "Subsubsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 
  3.6005128719736147`*^9}},ExpressionUUID->"dd249775-47a1-498b-b44c-\
9b6d2f90eefe"],

Cell[TextData[{
 "The generalized Lagrangian of the optimization problem for the max-margin \
classifier (in eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:max_margin_hard"],
 ")) is given by "
}], "Text",
 CellChangeTimes->{{3.6005128770847673`*^9, 3.600512943813957*^9}, {
  3.600677425738347*^9, 
  3.600677480971018*^9}},ExpressionUUID->"a853c70b-647d-4742-8978-\
2d45ad342351"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["L",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     FractionBox[
      StyleBox["1",
       FontWeight->"Plain"], "2"], 
     SuperscriptBox[
      RowBox[{"\[LeftDoubleBracketingBar]", 
       StyleBox["w",
        FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"]}], " ", 
    "+", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SubscriptBox["y", "i"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
       ")"}]}]}]}]}], ","}]], "DisplayFormula",
 CellChangeTimes->{{3.600512955178851*^9, 3.6005129730155067`*^9}, {
  3.600513906229238*^9, 3.600513910547207*^9}},
 CellTags->
  "eq:hard_margin_svm_L",ExpressionUUID->"60722845-d174-438b-a5f6-\
30a0a1e979d7"],

Cell[TextData[{
 "where, for simplicty we have divided the squared norm of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "9115a2df-8fd9-4967-8fba-c01ca5e82154"],
 " by ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "06987d3b-54e3-4544-a5e1-1294d261a2a6"],
 ". The objective function in eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:max_margin_hard"],
 ") is convex and differentiable, while the constraints are affine function ",
 StyleBox["(each constraint can be expressed as ",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          StyleBox["w",
           FontWeight->"Bold"], "b"}
        }], ")"}], "\[Transpose]"}], 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", "yi"}], " ", 
          StyleBox[
           SubscriptBox["x", 
            StyleBox["i",
             FontWeight->"Plain"]],
           FontWeight->"Bold"]}]},
        {
         RowBox[{"-", "yi"}]}
       }], ")"}]}], "-", "1"}], TraditionalForm]],
  FontSize->12,ExpressionUUID->"5511e7f6-4028-4a7f-8440-939bacdac2e4"],
 StyleBox[")",
  FontSize->12],
 ", and we can thus apply Theorem 3 to get the following KKT optimality \
conditions:"
}], "Text",
 CellChangeTimes->{{3.6005129784631653`*^9, 3.600513025922779*^9}, {
   3.6005130576397543`*^9, 3.6005130974873857`*^9}, {3.600513365653596*^9, 
   3.600513516719843*^9}, {3.600513650699325*^9, 3.600513760507359*^9}, 
   3.600517241981903*^9, 
   3.637577872750004*^9},ExpressionUUID->"409c287a-3499-479d-ba1b-\
729aad1a5844"],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["w",
     FontWeight->"Bold"]}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", "b"}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["y", "i"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          StyleBox["w",
           FontWeight->"Bold"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}], "=", 
   "0"}], ",", "     ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "i"], "\[GreaterEqual]", "0"}], ",", 
  "                                          ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]}], "DisplayFormula",
 CellChangeTimes->{{3.600156554617927*^9, 3.6001565591323*^9}, {
   3.600156717264855*^9, 3.600156812411139*^9}, 3.600156864861678*^9, {
   3.600156910962696*^9, 3.6001569205414753`*^9}, {3.600157072728825*^9, 
   3.6001571011797667`*^9}, {3.600158546688363*^9, 3.600158553918486*^9}, 
   3.600513870738564*^9, {3.60051722534639*^9, 3.60051723159496*^9}, {
   3.60051890411646*^9, 
   3.600518919036416*^9}},ExpressionUUID->"0fedcaca-a3d9-46b0-bb90-\
fffcfce57481"],

Cell["where the first two conditions expand to", "Text",
 CellChangeTimes->{{3.600157083887292*^9, 3.6001571066608353`*^9}, {
  3.600158558436887*^9, 3.6001585591646*^9}, {3.600172004709982*^9, 
  3.600172009771409*^9}, {3.600513867266624*^9, 
  3.600513867631464*^9}},ExpressionUUID->"baa148cc-f88a-464c-b313-\
93241d24c2fc"],

Cell[BoxData[{
 RowBox[{
  StyleBox["w",
   FontWeight->"Bold"], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["y", "i"], 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["y", "i"]}]}], "=", "0."}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600157117284062*^9, 3.600157123893322*^9}, {
   3.600157245162938*^9, 3.60015732138794*^9}, {3.600157886285673*^9, 
   3.60015788974968*^9}, {3.60015856782475*^9, 3.600158618089786*^9}, {
   3.600158661435207*^9, 3.60015866767249*^9}, 3.600513864747818*^9, 
   3.60051392712012*^9},
 CellTags->
  "eq:hard_margin_svm_w",ExpressionUUID->"92c91af1-1f4c-4d00-bf47-\
db60389cfab3"],

Cell[TextData[{
 "We can then plug eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:hard_margin_svm_w"],
 ") into eq. (",
 
 CounterBox["Title", "eq:hard_margin_svm_L"],
 "), to obtain"
}], "Text",
 CellChangeTimes->{{3.6005139229439096`*^9, 3.6005139327340612`*^9}, {
  3.600513998355977*^9, 3.600514040753975*^9}, {3.600514214591071*^9, 
  3.6005142148630037`*^9}, {3.602857905701252*^9, 
  3.602857907301415*^9}},ExpressionUUID->"3197420c-a9eb-4101-ac8a-\
87aeef01635d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", 
   RowBox[{"(", 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"]}]}]}]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "i"], 
      SubscriptBox["y", "j"], 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}]}]}]}], " ", "-", 
   RowBox[{"b", 
    UnderscriptBox[
     UnderscriptBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["y", "i"]}]}], "\[UnderBrace]"], 
     "0"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"]}], 
        ")"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Alpha]", "i"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox[
         StyleBox["H",
          FontWeight->"Bold"], 
         RowBox[{"i", ",", "j"}]]}]}]}]}]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{
  3.6001735831201057`*^9, {3.6001754518709583`*^9, 3.600175487788825*^9}, {
   3.60051411622726*^9, 
   3.600514161953629*^9}},ExpressionUUID->"bec0423a-21cb-44f0-af8f-\
5f55aa0ce4ba"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["y", "j"], "(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"0ef9ec04-e1f3-44a9-85c0-b70d05271a22"],
 ".\nWe note that both ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "b946459e-cf98-4250-bd51-f9023e5fe434"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "bf2db6d4-c664-4fff-bcb5-1f9068b1ab72"],
 " have disappeared form this problem. However, after solving for ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Alpha]",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "ebc7353f-dae5-4038-910e-fc3e056c8807"],
 ", the optimal ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["w",
     FontWeight->"Bold"], "*"], TraditionalForm]],ExpressionUUID->
  "5f04e3a0-df14-42ad-b611-b3b94e69f195"],
 " can still be obtained using eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:hard_margin_svm_w"],
 "), while ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "871a2407-5979-4867-af80-f1d721a90a62"],
 " can be obtained by enforcing the KKT complementarity condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "e36b4757-f129-459f-a586-a9d92416de6c"],
 ". Indeed, by multiplying this constraint by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "253d20fe-1ab7-47b5-8565-2048a4de7ce5"],
 " and summing over all ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "b5501851-ade0-42ba-af82-5f37d0cfc7b4"],
 ", we can compute the value of ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "f8d65c44-bbb1-4b74-88b7-6b588628d0fa"],
 " satisfying all the constraints:"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600174027303218*^9, 3.6001741208317432`*^9}, {3.600174352033383*^9, 
   3.600174383955019*^9}, {3.600174491817814*^9, 3.600174537941121*^9}, {
   3.600175445275632*^9, 3.600175448682406*^9}, {3.600175506253343*^9, 
   3.600175508667962*^9}, {3.600175871676817*^9, 3.600175927236977*^9}, {
   3.600430909988146*^9, 3.6004309310256977`*^9}, {3.600514166631318*^9, 
   3.600514195458735*^9}, {3.6005152064756107`*^9, 3.600515283881835*^9}, {
   3.600515344928915*^9, 3.600515409862432*^9}, {3.600518062887248*^9, 
   3.600518095663272*^9}, {3.600677531332918*^9, 3.600677573255021*^9}, 
   3.64308709869904*^9},ExpressionUUID->"8de1dd42-d1c0-4ba6-aeea-\
1ccfb1c75e41"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "i"], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}]}]}], "-", "b"}], ")"}]}]}], "=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}]}], "=", 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"]}]}], "\[UnderBrace]"], "0"], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "j"], 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["\[Alpha]", "i"]}]], 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "n"], 
         RowBox[{
          SubscriptBox["\[Alpha]", "i"], 
          SubscriptBox["\[Alpha]", "j"], 
          SubscriptBox["y", "j"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "j"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], ")"}]}]}]}]}], ")"}]}], " ", "=", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold"], "\[Transpose]"}], 
         StyleBox["\[Alpha]",
          FontWeight->"Bold"]}]], 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "n"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "n"], 
           RowBox[{
            SubscriptBox["\[Alpha]", "i"], 
            SubscriptBox["y", "i"], 
            SubscriptBox["\[Alpha]", "j"], 
            SubscriptBox[
             StyleBox["H",
              FontWeight->"Bold"], 
             RowBox[{"i", ",", "j"}]]}]}]}]}], ")"}]}], "=", 
      RowBox[{"-", 
       FractionBox[
        StyleBox[
         RowBox[{
          RowBox[{
           OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
         FontWeight->"Bold"], 
        RowBox[{
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold"], "\[Transpose]"}], 
         StyleBox["\[Alpha]",
          FontWeight->"Bold"]}]]}]}]}]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{{3.600174127286213*^9, 3.600174151893757*^9}, {
  3.600174192850265*^9, 3.600174297068885*^9}, {3.6001743312244453`*^9, 
  3.6001743320502377`*^9}, {3.600174395426324*^9, 3.60017448222078*^9}, {
  3.600174609257825*^9, 3.600174620294325*^9}, {3.600174700488557*^9, 
  3.60017476750701*^9}, {3.6001748058235807`*^9, 3.600174817131991*^9}, {
  3.600174862424131*^9, 3.600175009763543*^9}, {3.600175081076378*^9, 
  3.6001750843648157`*^9}, {3.6001751300761957`*^9, 3.600175142796803*^9}, {
  3.600175178151023*^9, 3.600175202209634*^9}, {3.60017552263131*^9, 
  3.6001755621461077`*^9}, {3.600175619176784*^9, 3.6001757437281857`*^9}, {
  3.600435176945134*^9, 3.600435180026492*^9}, {3.60051426419655*^9, 
  3.6005142837214518`*^9}},ExpressionUUID->"85ec0331-5929-4426-972a-\
27fa23c2b8af"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Alpha]", "~"], "i"], "=", 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["y", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "4c1ce803-4172-474a-ae9a-0bf8a8caff9f"],
 ".\nThe Lagrangian dual problem can thus be defined as"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600174027303218*^9, 3.6001741208317432`*^9}, {3.60017522567037*^9, 
   3.600175228536392*^9}, {3.600175718035424*^9, 3.6001757187181892`*^9}, {
   3.600175750944895*^9, 3.600175831350972*^9}, {3.6005143339971437`*^9, 
   3.600514339262733*^9}},ExpressionUUID->"a49d0c08-8525-430d-a63b-\
f5040ddb8611"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{"{", 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "}"}]], 
   StyleBox[
    RowBox[{"1", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], 
   StyleBox[
    RowBox[{"\[Alpha]", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["H\[Alpha]",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["s",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox["t",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "\[GreaterEqual]", 
  StyleBox["0",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], 
      StyleBox["\[Transpose]",
       FontWeight->"Plain"]}], 
     StyleBox["y",
      FontWeight->"Bold"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox["0",
     FontWeight->"Bold"]}], ","}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60017364117669*^9, 3.6001736928282843`*^9}, {
  3.6001737746175947`*^9, 3.60017385821412*^9}, {3.600175162048126*^9, 
  3.600175164631028*^9}, {3.600677610391242*^9, 3.600677616531293*^9}, {
  3.6028583730545607`*^9, 3.6028583827818108`*^9}},
 CellTags->
  "eq:hard_margin_svm_Dual",ExpressionUUID->"7f4fc88b-2349-44f2-8696-\
97b0b614fb0d"],

Cell[TextData[{
 "with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"-", 
     FractionBox[
      StyleBox[
       RowBox[{
        RowBox[{
         OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
       FontWeight->"Bold"], 
      RowBox[{
       RowBox[{
        StyleBox["1",
         FontWeight->"Bold"], "\[Transpose]"}], 
       StyleBox["\[Alpha]",
        FontWeight->"Bold"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "11ead9d7-85a0-4e8d-b41e-03ac6807ca73"],
 ".  The KKT conditions guarantee us that solving this problem is equivalent \
to solve the primal max-margin optimization problem. Note that this is again \
a quadratic program, with simpler constraints, which can be solved by using \
off-the-shelf the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " QP solver. On the other hand, the prediction for a given sample ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], "i"], TraditionalForm]],ExpressionUUID->
  "5e792b41-d7d9-42f7-97ce-423763cff2f2"],
 " can be computed with"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005456864968147`*^9, 3.600545700613552*^9}, {
   3.600546086295779*^9, 3.6005460870879908`*^9}, {3.600677628407139*^9, 
   3.6006777163858547`*^9}, 3.6015586551940937`*^9, {3.601622748825629*^9, 
   3.601622815469157*^9}, {3.6016231250698767`*^9, 3.601623127931273*^9}, {
   3.6016232604861717`*^9, 3.60162326741459*^9}, {3.6016233002996483`*^9, 
   3.6016233228344*^9}, {3.6016234515069513`*^9, 3.6016234630445004`*^9}, {
   3.601623543396038*^9, 3.601623545576292*^9}, {3.601623613108419*^9, 
   3.601623643378582*^9}, {3.601623826542027*^9, 3.601623827898641*^9}, {
   3.601623922085689*^9, 3.601623934134159*^9}, {3.601715356947105*^9, 
   3.60171540012154*^9}, {3.6017155563549356`*^9, 3.6017155944614773`*^9}, 
   3.6028579410764847`*^9},ExpressionUUID->"02ad0b14-45db-4a9a-8344-\
9d9e3fefdc69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    RowBox[{"(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], " ", "+", "b"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}]}]}], "+", "b"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         OverscriptBox["\[Alpha]", "~"],
         FontWeight->"Bold"], 
        StyleBox["\[Transpose]",
         FontWeight->"Plain"]}], 
       StyleBox[" ",
        FontWeight->"Bold"], 
       StyleBox["k",
        FontWeight->"Bold"], 
       RowBox[{"(", 
        RowBox[{":", 
         RowBox[{",", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}]}], ")"}]}], "+", "b"}]}]}]}], 
  ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{3.601715407263446*^9, 3.601715444664547*^9, 
  3.601715481756896*^9},ExpressionUUID->"5399cc5a-4a47-4129-9463-\
804c42728776"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["k",
     FontWeight->"Bold"], "(", 
    RowBox[{":", 
     RowBox[{",", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"6ddc5621-fd30-4be4-9aa2-9675cc7db937"],
 " is the vector containing the inner products between all the training \
instances and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], "i"], TraditionalForm]],ExpressionUUID->
  "82fe9ed1-f711-4ae5-ab41-9e5dd71382ec"],
 ".\n\nFinally, using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"], 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}]}]}], TraditionalForm]],ExpressionUUID->
  "bdf0a769-6099-4718-80da-024db9371a68"],
 " and the facts that by construction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"6021f422-e61b-4a81-a23f-c6ec76fec0ae"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"]}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"f26786a5-2a79-4dbf-8f44-574cea7a1907"],
 ", we can compute the minimal geometric margin as"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005456864968147`*^9, 3.600545700613552*^9}, {
   3.600546086295779*^9, 3.6005460870879908`*^9}, {3.600677628407139*^9, 
   3.6006777163858547`*^9}, 3.6015586551940937`*^9, {3.601622748825629*^9, 
   3.601622815469157*^9}, {3.6016231250698767`*^9, 3.601623127931273*^9}, {
   3.6016232604861717`*^9, 3.60162326741459*^9}, {3.6016233002996483`*^9, 
   3.6016233228344*^9}, {3.6016234515069513`*^9, 3.6016234630445004`*^9}, {
   3.601623543396038*^9, 3.601623545576292*^9}, {3.601623613108419*^9, 
   3.601623643378582*^9}, {3.601623826542027*^9, 3.601623827898641*^9}, {
   3.601623922085689*^9, 3.601623934134159*^9}, {3.601715356947105*^9, 
   3.6017154776947517`*^9}, 
   3.607433809000391*^9},ExpressionUUID->"db372dda-e344-4bd4-9e68-\
a3eb80488ca1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["g", "S"], 
   RowBox[{"(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "n"], 
        RowBox[{
         SubscriptBox["\[Alpha]", "i"], 
         SubscriptBox["\[Alpha]", "j"], 
         SubscriptBox["y", "i"], 
         SubscriptBox["y", "j"], 
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "j"]}]}]}]}], ")"}], 
     RowBox[{"-", 
      FractionBox["1", "2"]}]], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["y", "i"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "n"], 
         RowBox[{
          SubscriptBox["\[Alpha]", "j"], 
          SubscriptBox["y", "j"], 
          RowBox[{
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "j"]}]}]}]}]}], ")"}], 
     RowBox[{"-", 
      FractionBox["1", "2"]}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SubscriptBox["y", "i"], "b"}]}], ")"}]}]}], ")"}], 
    RowBox[{"-", 
     FractionBox["1", "2"]}]], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[Alpha]", "i"]}], ")"}], 
    RowBox[{"-", 
     FractionBox["1", "2"]}]]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.601623144017231*^9, 3.6016231451197367`*^9}, {
  3.601623205236801*^9, 3.601623208445745*^9}, {3.601623275581362*^9, 
  3.6016232794166937`*^9}, {3.601623336392014*^9, 3.601623425424549*^9}, {
  3.6016234710926313`*^9, 3.6016235157209797`*^9}, {3.601623561558578*^9, 
  3.601623604321465*^9}, {3.601623654255562*^9, 3.60162365866744*^9}, {
  3.601623692867774*^9, 3.6016237267201357`*^9}, {3.601623878819889*^9, 
  3.601623907696751*^9}, {3.601623941178073*^9, 3.601623995593197*^9}, {
  3.601625248429729*^9, 
  3.601625263276997*^9}},ExpressionUUID->"341dc3e9-19f0-4d75-a0cf-\
aae78eb044b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support vectors and generalization  ability", "Subsubsection",
 CellChangeTimes->{{3.600516572783146*^9, 3.600516581479706*^9}, {
  3.6005167168202353`*^9, 3.6005167209714613`*^9}, {3.6005189316224546`*^9, 
  3.600518931785338*^9}},ExpressionUUID->"f8d6fe00-19a5-4303-8154-\
5dcad62512dc"],

Cell[TextData[{
 "It is important to note that due to the constraints ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "ab55ea46-d1b3-497a-88cd-c3d84b206d5b"],
 ", only a small subset of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "50a3513b-37de-4ff3-81ef-27f994f56485"],
 " will be non-zero. Specifically the only ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], "\[NotEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"e2f054ab-99d8-4afb-8a56-00a569fb0750"],
 " will be those for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"12b2a686-f41c-4a91-a148-2cb5d18794a0"],
 ", that is: only the training points with functional margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"0a71f61c-c787-4480-bbe5-6ad85be44437"],
 " will have an ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "4961c102-a560-42e3-a1be-012fe638cf2c"],
 " different from zero (for all the other points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "0d938dda-3893-40fd-8a08-fb5a38d6fdd7"],
 " must be zero). These points are the ",
 StyleBox["Support Vectors",
  FontSlant->"Italic"],
 " of the considered problem. \n\nAn important theoretical result for Support \
Vector Machines is that the ",
 StyleBox["expected ",
  FontSlant->"Italic"],
 "generalization error of a SVM can be obtained by a ",
 StyleBox["leave-one-out",
  FontSlant->"Italic"],
 " argument ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "019bf0f2-cf2e-45fb-b730-cb89f5add905"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ". Since when a non-support vector is omitted, it is correctly classified by \
the remaining subset of the training data, the leave-one-out estimate of the \
generalization error is given by"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.6005165851954737`*^9}, {3.600677757555637*^9, 3.600677789539145*^9}, {
   3.601386623921225*^9, 
   3.6013866239214*^9}},ExpressionUUID->"89a7d805-feb0-4475-bc66-\
11817c84e1e4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"#", "SV"}], "n"], ","}]], "DisplayFormula",
 CellChangeTimes->{{3.60051574189585*^9, 3.600515750787139*^9}, 
   3.600515781307664*^9},ExpressionUUID->"860b8aa1-db17-4225-ac6e-\
7474a05855d1"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"#", "SV"}], TraditionalForm]],ExpressionUUID->
  "8e5d059b-64e1-46dd-8f6f-b03763e888ad"],
 " denotes the number of Support Vectors. \nA cyclic permutation of the \
training set shows that the expected error of a test point is bounded by this \
quantity. This gives us another criteria (besides the maximal margin \
principle) to perform model selection: when comparing two models with similar \
testing performances, the one with fewer support vectors should be prefered.\n"
}], "Text",
 CellChangeTimes->{{3.600515758635311*^9, 3.600515893314638*^9}, {
   3.6005162249309397`*^9, 3.600516380265181*^9}, {3.600516451187839*^9, 
   3.6005164690412903`*^9}, {3.6005461027436113`*^9, 3.600546157811988*^9}, {
   3.6006777934200277`*^9, 3.600677797195367*^9}, {3.6006790967491913`*^9, 
   3.600679109313181*^9}, {3.6006791538231916`*^9, 3.6006791542853107`*^9}, {
   3.600679203770637*^9, 3.600679222444211*^9}, {3.600679429138935*^9, 
   3.600679431559985*^9}, 3.6013767001944304`*^9, {3.607433896546997*^9, 
   3.607433913774089*^9}},ExpressionUUID->"472ab42e-3d45-4b4b-88bd-\
a23dab1af286"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.6074339017542343`*^9, 
  3.6074339076858997`*^9}},ExpressionUUID->"58b0f33c-0e2d-437e-85e2-\
d24804c7bed4"],

Cell[TextData[{
 "A code snippet implementing hard-margin SVM and showing the support vectors \
is provided below, where ",
 StyleBox["KTr", "Code"],
 " is expected to be the matrix of inner products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["KTr", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "j"]}]}], TraditionalForm]],ExpressionUUID->
  "e4c872ce-0d98-4b67-9349-15408d3df336"],
 " computed using the training samples\n"
}], "Text",
 CellChangeTimes->{{3.600515758635311*^9, 3.600515893314638*^9}, {
   3.6005162249309397`*^9, 3.600516380265181*^9}, {3.600516451187839*^9, 
   3.6005164690412903`*^9}, {3.6005461027436113`*^9, 3.600546157811988*^9}, {
   3.6006777934200277`*^9, 3.600677797195367*^9}, {3.6006790967491913`*^9, 
   3.600679109313181*^9}, {3.6006791538231916`*^9, 3.6006791542853107`*^9}, {
   3.600679203770637*^9, 3.600679222444211*^9}, {3.600679429138935*^9, 
   3.600679431559985*^9}, 3.6013767001944304`*^9, 3.607433896546997*^9, {
   3.637578920429126*^9, 
   3.637578920971682*^9}},ExpressionUUID->"e624e65e-9770-4ac4-b1d4-\
798e1a03061a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainHardMarginSVM", "[", 
    RowBox[{"KTr_", ",", "yTr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nTr", ",", "d", ",", "H", ",", "f", ",", "a", ",", "alpha", ",", "b", 
       ",", "margin", ",", "sol", ",", "obj", ",", "constraints"}], "}"}], 
     ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "KTr", "]"}]}], ";", "\n", 
      RowBox[{"f", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"a", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"H", "=", 
       RowBox[{
        RowBox[{"yTr", ".", 
         RowBox[{"Transpose", "[", "yTr", "]"}]}], " ", "KTr"}]}], ";", "\n", 
      RowBox[{"constraints", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"alpha", ".", "yTr"}], "]"}], "==", "0"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", ">=", "0"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"And", "@@", "alpha"}], ")"}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"alpha", ".", "H", ".", "alpha"}]}], " ", "-", " ", 
        RowBox[{"f", ".", "alpha"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obj", ",", "constraints"}], "}"}], ",", "alpha", ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\[LineSeparator]", 
         RowBox[{"AccuracyGoal", "->", "1"}], ",", " ", 
         RowBox[{"PrecisionGoal", "->", "1"}], ",", " ", 
         RowBox[{"MaxIterations", "->", "100"}], ",", " ", "\[LineSeparator]", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}], 
         ",", " ", 
         RowBox[{"Gradient", ":>", " ", 
          RowBox[{
           RowBox[{"H", ".", "a"}], " ", "-", "f"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"(", 
        RowBox[{"alpha", "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"alpha", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "<", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "8"}], ")"}]}]}], "&"}], "/@", "alpha"}], ",", 
            "True"}], "]"}]}], "]"}], "]"}], "=", "0"}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Total", "[", "alpha", "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"alpha", " ", 
           RowBox[{"yTr", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}], ".", "H", ".", 
         "alpha"}]}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"Total", "[", "alpha", "]"}], "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"alpha", " ", 
        RowBox[{"yTr", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alpha", ",", "b"}], "}"}], ",", "margin"}], "}"}]}]}], "\n",
     "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600545717875956*^9, 3.600545751119782*^9}, {
   3.600585819582821*^9, 3.6005858288391867`*^9}, 3.6006042128918858`*^9, {
   3.600604265210268*^9, 3.600604273450542*^9}, {3.601588478974782*^9, 
   3.601588482089418*^9}},ExpressionUUID->"605d0bb8-3dc4-4220-97d2-\
d3f71e1706db"],

Cell[TextData[{
 "\nAs before, we make use of ",
 StyleBox["createData[]", "Code"],
 " to draw a datset and then we obtain the 2D training and testing matrices \
and labels, using ",
 StyleBox["getTrTeData", "Code"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.600546320652032*^9, 3.6005463437612333`*^9}, {
  3.6006790268837757`*^9, 3.600679140519519*^9}, {3.600679171350915*^9, 
  3.600679201241987*^9}, {3.60067923626015*^9, 3.60067935278434*^9}, {
  3.601376421303667*^9, 3.601376633858713*^9}, {3.6013766911938267`*^9, 
  3.601376696855672*^9}},ExpressionUUID->"dc3d3415-cbff-4c8e-a90e-\
1be7be3fa4d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e482877a-994d-49db-b578-884bba4977a2"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$745 = MousePosition["Graphics"]; 
     Private`p$745 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$745], 2], 
          Union[
           Partition[Private`pt$745, 2]]}, 1]]; 
     If[Private`s$745 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$745}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$745}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$745 = {}; 
     Private`s$745 = Private`s$745 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6005481748004313`*^9, {3.600548527014482*^9, 3.600548535300232*^9}, 
   3.60054881372934*^9, {3.600548863497181*^9, 3.6005488860857277`*^9}, 
   3.6005493036961613`*^9, {3.6005493502402*^9, 3.6005493713830833`*^9}, 
   3.600549479168809*^9, {3.6005495192934027`*^9, 3.6005495251830683`*^9}, 
   3.600550178410387*^9, 3.600585746776744*^9, {3.600590623675686*^9, 
   3.6005906310066977`*^9}, 3.600590726854548*^9, 3.6005908772505617`*^9, {
   3.600598917722591*^9, 3.6005989405406446`*^9}, 3.600599110860197*^9, 
   3.600599443958766*^9, 3.600599582535881*^9, 3.600602782182436*^9, 
   3.600603523385064*^9, 3.6006039456721487`*^9, 3.600610585106822*^9, 
   3.6006129988954983`*^9, 3.600613812201179*^9, 3.600632644271154*^9, 
   3.600671117325617*^9, 3.600671642243865*^9, 3.600671803735737*^9, 
   3.600672265501902*^9, 3.600672525891562*^9, 3.60120637038491*^9, 
   3.6012094371933126`*^9, 3.601211467232752*^9, {3.601212264674571*^9, 
   3.601212290791333*^9}, 3.601212668249308*^9, 3.601213356535677*^9, 
   3.6012140404884243`*^9, 3.601214608386944*^9, 3.6012180046242743`*^9, 
   3.601286273026966*^9, 3.601295890024681*^9, 3.601296909804433*^9, 
   3.601297170515983*^9, 3.6012976621200314`*^9, 3.6012988950067387`*^9, 
   3.601298947215431*^9, 3.601304693568375*^9, 3.601372885156996*^9, 
   3.601375277266766*^9, 3.601559771884309*^9, 3.601562166577299*^9, 
   3.601563112101934*^9, 3.601571645145769*^9, 3.6015724894480963`*^9, 
   3.601626156297797*^9, 3.6028568557453737`*^9, 3.602859724608704*^9, 
   3.607430517929019*^9, 3.607432448405761*^9, 3.637564725159348*^9, 
   3.637565525882448*^9, 3.637565654749401*^9, 3.637566042202242*^9, 
   3.6375733611127863`*^9, 3.637581899581437*^9, 3.637582140909525*^9, 
   3.637582201539864*^9, 3.637583464261553*^9, 3.637585525828174*^9, 
   3.637588558654112*^9, 3.637659185302246*^9, 3.637659328428247*^9, 
   3.637659648377462*^9, 3.637671396275231*^9},
 TextAlignment->Center,ExpressionUUID->"b0ec1ea3-038a-4e9a-bb6e-ea1de8e9a6b2"]
}, Open  ]],

Cell[TextData[{
 "\nIn order to train a hard margin SVM, we will use the code ",
 StyleBox["runSVMExperiment[fTr,yTr,fTe,yTe,trainHardMarginSVM,linearKernel]",
   "Code"],
 ", where ",
 StyleBox["linearKernel", "Code"],
 " is the function used to compute the inner products between the samples, \
which is in turn used by the training algorithm to compute the matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["H",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "9a4c58c6-d10c-4fad-be11-061299a35baa"],
 ".\nIn the following, only the Support Vectors will be marked with thicker \
markers (squares and circles), while the other training samples will be \
plotted with small marker size. Furthermore, in order to high-light the role \
of the Support Vectors (the closest training points to the separation \
hyper-plane) in the following examples we will not plot the testing samples. \
\n"
}], "Text",
 CellChangeTimes->{{3.60137662712603*^9, 3.601376639247032*^9}, {
  3.60137668044366*^9, 3.601376811776379*^9}, {3.6013849649473867`*^9, 
  3.601384971557229*^9}, {3.601385365180463*^9, 3.601385409684113*^9}, {
  3.601385995761528*^9, 3.601386003469253*^9}, {3.6028581504826813`*^9, 
  3.602858159332988*^9}, {3.63757932841257*^9, 
  3.6375793740726624`*^9}},ExpressionUUID->"5697f6b1-5f77-4a0c-a545-\
6700cff483f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"runSVMExperiment", "[", 
  RowBox[{
  "fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", "trainHardMarginSVM", ",", 
   "linearKernel"}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, 
   3.600544981696217*^9, {3.6005450379414673`*^9, 3.60054508839544*^9}, {
   3.600545360991832*^9, 3.600545434011033*^9}, {3.600545472664554*^9, 
   3.600545559374083*^9}, {3.600545609202199*^9, 3.600545627332015*^9}, {
   3.600546178439096*^9, 3.6005461830908833`*^9}, {3.600546303917809*^9, 
   3.600546306938239*^9}, {3.600546466692848*^9, 3.600546480429881*^9}, {
   3.600546575005353*^9, 3.600546829060685*^9}, {3.600546921254654*^9, 
   3.600546922412047*^9}, {3.600547983007058*^9, 3.600547984587983*^9}, 
   3.600548231401762*^9, {3.600548779230706*^9, 3.600548782614275*^9}, {
   3.600548824203184*^9, 3.600548851107295*^9}, {3.600548917877345*^9, 
   3.600548952429632*^9}, {3.6005489875330772`*^9, 3.600549078996273*^9}, {
   3.600549319947598*^9, 3.600549338716949*^9}, {3.600549397645832*^9, 
   3.6005494246282473`*^9}, {3.600549555078596*^9, 3.600549632309577*^9}, {
   3.600549854018811*^9, 3.6005498691945553`*^9}, {3.600549923290716*^9, 
   3.600549974175603*^9}, {3.600550191104844*^9, 3.600550274904955*^9}, {
   3.6005898842524137`*^9, 3.60058990481599*^9}, {3.600590770279476*^9, 
   3.6005907805314817`*^9}, {3.600590906007497*^9, 3.6005909295274487`*^9}, {
   3.600599100001532*^9, 3.600599103254562*^9}, {3.600599690230921*^9, 
   3.600599690557418*^9}, {3.6006105474506817`*^9, 3.600610631784918*^9}, {
   3.600631686689803*^9, 3.600631696086622*^9}, {3.6012171377628727`*^9, 
   3.601217160028503*^9}, 
   3.60121856408537*^9},ExpressionUUID->"fd37e9d2-e673-4b90-8dce-\
cbdc00bbc0a3"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxl3XWUVXX/vnFAWlpKRBopaVB6g5IKiAoiIiEhIEh3SEmKlHQpMHSHlMhn
gOmiu4YcZhhGxJF6AH/jWu/r3r/l9/nnWa919jkwm33NOfcGoWiXfp90T5Mq
VaqJWVKl+vf/Oy4tfeHX8IcuZu+s8aPTB7lR8x9ta1vG96JZQZOfTv1T/nXa
3A5L7z6QT07sXK1uU9/X/vdl3kMf/SEXePDkaOrsSXKbW/MGNIpJlGefr1R4
2o/35MiolP81T5DTH+45MkeWeLnBr2lLt46Mk0dv+OXMwul35L3L60y81Oy2
/HBOyg+Q6ZZcfvLgq13Cbsgprz5j7ZTr8uq+m2smNI6VDwbPjmmf5apcZWtY
mZvTL8nrF6Sa9E2mC3KhsTVi/5xyVp7Xo3/tEelPy5lb/fuME3KqAYE3s2eI
kRMbVFpSKG24fD7XL63Kpw6Sp4QWzjb8+e9yx17/jJz/aJf8Td5Dx7pfX+2/
fvInDTZVrO7hWl2Oji7xToDcOPuEE8lFdsv9vl3V7dxbh+So7tdTfkWD5NiU
X76Wr4fLyUdTz/IKxsjfP23aZ9GsE3K2nP/+77S8KOVymzb3rFys/sov0uS+
IG9u++8XdEl+p1/lgL/yXpU7//vTbx4rlzwWO/ThjOtywsWG4Vujb8jb7qx/
o3e2W/Lgh1n6lvrotlzzZf/Am7PuyKkyn8n1y/E4mT6ihs5t3SjzYfWB6QPT
B6YPTB+YPjB9YPrA9IHpA9MHpg9MH5g+MH1g+sD0gekD0wemD0wfmD4wfWD6
wPSB6QPTB6YPTB96fesD0wemD0wfmD4wfWD6wPSB6UPXk/WB6QPTB6YPTB+Y
PjB9YPrA9IHpQ+fL+tD5tT7m9y77UcGCB9UHpg9MH5g+MH1g+sD0gekD0wem
D0wfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrA9IHpA9MHpg9MH5g+MH3o9a0P
TB+YPjB9YPrA9IHpA9MHpg9dT9YHpg9MH5g+MH1g+sD0gekD0wemD50v60Pn
1/qYG1/x7y3F96gPTB+YPjB9YPrA9IHpA9MHpg9MH5g+MH1g+sD0gekD0wem
D0wfmD4wfWD6wPSB6QPTB6YPTB+YPjB9YPrQ61sfmD4wfWD6wPSB6QPTB6YP
TB+6nqwPTB+YPjB9YPrA9IHpA9MHpg9MHzpf1ofOr/Uxq0f1pV657eoD0wem
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
Yr0IOfrJkVs5a0fLdwvGTg1447jc8/eOhQMXn5ATOlz59VK+U/I3L9s3fzz/
tDe03ZN6CydFusQVF2/kyn1Wj2Me7+O1G1Fh7jk56dq57B/kuCD3HffZ2u4z
L8oPipypMz7LZbn/4U9PLZt+RX741cle+zJek2uOL53qm/dj5REnekQOS3Nd
3l903YJJh30/HXDnq5/G3fCff6Rk+ZXeTf/5ubo/2frS9/4uAUcP/n7Lf/7O
mzMjRt/2n/9K8S/O177jP//TLiXvPPO9f/XKB3/tj/Of/1fsb6lH3PWf37DI
lOw14v3nz+v0yZuPfe+/teLNcnsS/OdXu3q3xpB7/vMnvbm7cbVEr1HDf/93
3I048+XY1n8l+q9n5vH9JZd90GXnffnpkEt5+g9IkumdX096w1FD57ZulPmw
PL932Y8KFjwoz42v+PeW4nvkWT2qL/XKbZfzRw6ZsKp7gFxiZurlP8TPln+J
W1lub+wo/fjJ409WibuwQk7VqGOL4x02yRMDNoz7bN0umX8vHPPvI2P+PVjM
v3+J+ff+MP++Gebfc8L8+zWYf69D3x/s3yfA//378f/bC38fNebv38X8faOY
v18R8/fJYf7+LMzfF4T5+1Ewfx8E5r9/x/z3vnq+/feNer7991x6vv33K3q+
/Xl9Pd/+fLKeb38eU8+3P3+m59uft9Hz7c8X6Pn2+6l6vv3+kZ5v98v1/P/c
v/1vL9wfwexBzOdfzPvNjhbzEi82jHBZmowMWzzorBec8nEjqskxN23D2w/z
Fb/vlUpRl6OhLupRrRc/7D7j1e7+5ZxPQ6Jcr9Q/ZplzNNFr+b9zm3aPPaz3
Kz6/4eWF/n0DD3ZZQk8U/jT8sON43s84HnN83iwbbr+75Hcdz/sdx2OOf236
1h/CV+7V8bwfcjzm+BwZd1duv2GHjuf9kuMxxxfIMmjbha/W6XjeT/XvqZg5
vlSO54+eXl+g43m/5XjM8b88P/Rm0uOPdD55P+Z4zPF//nPu/PDri3Q879cc
jzn+5StfFVn81Xr1zfsdfWOuhxlxTzr++uc5Hc/7Icdjjs82ddjfx/td0PG8
X3I85viZpR/9kHj/oo7n/ZTjMcfnCB9cLGOfyzqe91uOxxw/u9df+4onXNHx
vB9zPOb4XJkHfuT1vKbjeb/meMzxzdo8GVh+UKyO5/2c4zHHT1vzbr3aVa7r
eN7vOR5zfPjfQzM1+9M/ns8DHI85PlPjPac/237D//nb5wX9/M36+S/4++du
/f6/zw/2fsv3F8z3g/CnvX8veeO+//5u78ccjzk+0webplZdmaTjeb/meMzx
fB7meuXzMp7x1qfT3v0wUM4duWlfqhUH5JzNdnScu2a3XHDmt5mafrHF/34y
fXib3r1Wyu/lzza51o1J8tnHwc1qXJ+mH//5+K9DyvZapZ8/n385n5jvj2km
tx+Z4YutvtOWS6hVZqeez+dlno85Pm2j0vkGlvxVTje5ZMMNRffp+Xy+5vmY
4zOEFhsQ++ZvcsaMRVbkK3BIz+fzOM/HHD8pYGb3Uj8EyukbZX3+XqYjej6f
33k+5vjJt3+Y23HKUf/Hn5y5zMh0wXo+n/d5Pub4qW9Nc/MnhsiZQzN8tiN1
mJ7PPuD5mOOn95icGDU2XM6SMd3Euy8i9Hz2BM/HHD9j/cTX046OkrM1S7O9
8LNoPZ/9wfMxx8+KH9e49vBj/tcfPLZvuVHH9Xz2Cs/HHN80j6tZs5bvqd1f
pm3y9ISez77h+ZjjI36te7z1vpP++Us/ZmmXYaf0fPYQz8cc/8FnB7/u/47v
6Wv/V/m7v0/r+0Xzhft/WlfFf3+IebdG2aPbz8stz+8JvFrB//5+fHj1ts82
X5Jbvb77fp5y/vfnk/urfF95w1W5zJbPf1z7mv/9tdeLhZ/vPul7Q4tzxY/M
8b8/xi/P+8exVv73vzJJbQ5cyX7T3xe2j/R5yazPL/XmT7oX43vanWq9B1a4
5e8P21P6fmjm+A0zT7d6+qPv8HcGvzPuvv989pe+P5o5Pv7qawUztPCdacqu
1DM339bz2Ws8H3N8mYqfxuXO4rvZuYdRS3vf8b9+23f6+s36+sfO3Vks0ve0
UlUWbSgb53/9tgf19Zv19R87MabSdN/hwwZ03RvvP5/9qK/frK+/cM5m9Zr5
zhS2vULw+rv+1297U1+/WV9//1a5m2f03Sz/g6cne8T7X7/tU339Zn39gbOu
tQv1Pa1nxeDYtxL8r9/2rL5+s77+HMc29pjsO3xf39lJt/3ns3/19Zv19XfO
NnRII9+ZMm1t/zzgnv/1217W12/W17+jRYOJaX03a3f/rczdEvV+uuHjqHMr
Jvjv3/ErX129uYH//lz24Qd9D6Ty32/Zz/TPXtX3d9urmL2K2av6fmZ7Vd9f
bK9i9ipmr2L2KmavYvYqZq9yPth3mH2H2XeYfafn277T823f6fm27/R823d6
vu07Pd/2nZ5v+07Pt33H53k+X/B5HvPrxecNvr/z9fP9kL2mz6f2/U+fT836
fmvfD7n++Plwvfx373G9vPbv/cvAI/q8xuPcf+FxPr/xOPdjeJzPczzO/Rke
5/Mdj3O/hsf5vMfj3L/hcT7/8Tj3c3icz4M8zv0dHufzIY9zv4fH+bzI+eb+
iK53e//kce6X8DjvpzzO/RP1Ye+vPM79FB7n/ZbHub/C47z/8jj3W3ic92Me
5/4Lj/P+zOPcj+Fx3q95nPsz6tfev3mc+zU8zvs5j3P/Rj++vb/r/ond79D3
Y/t+p/spdv9D32/t+5/ur9j9EB7n+yG/vty/49eX3vT12/0kff3WT9GcBUfW
ORik6//zdDX73/0zSNf7/Kdtvp5XKljX97H7A7+s3yFY13PmG7M+SZwbrOu3
8dnNTReFBet6HRsRXq/hy2BdnwcO3an2oKp//zF55yvllvXy7z/q8/rp1xqe
Sz7jJb0+emPb4v6/51cq2+JfXmnn//tlvdPsWbBtpv/vNS18dHJG+yD/36e5
mPDHhAzP/H+PI+e1LCN2VYzQ9dT0VJl+nbpH6PoZE9q4+6tLI3S97Pmta/u9
xyP8v19327iPu6b379+VDFjeJHsd//7dgEUH6v42IPL//P1xLR43+KTJiUSv
/z9Vfh9azv/zWqv/+mhXsa/8P5+SENdnQ8wC//fjc1ye9vPIKP/3Hy+9sWTO
/t1B7q+WIZlrDjnsQtt1iK57N8h1e6vWhK4Vf3e7FxbJdOSNYBe7NS6p9eC9
rlbfr3bnLRbuzve6EVA14qxXcnOJB0vahLsDGfY2e1zjvJcnIa5c4Wnhbsma
H5IOrLvgpSu9qcfqg+Fu5Pudf/ou7yXvfve+q0s9CHcdrler8d6ky1786srX
NhWPcDXGZrqSLvmK13PkwOmpyqb8/BJOdlzX4r5Xd1/1kO87xLhPatatnCld
klft0ZPUmebEuPpT173S+2CSV6Tawbo/BsW46udyno0a9Id3//QrcQP7BDv3
9eOaScmb3dvNygYPDQh2i5vnebb4u19c799brR55OdhdDo+6m7foOLex8rDx
3+UOcR2PdXj1zcuzvaQ1yztNaB7irqSeE9zlVoBXqdmwTZ2+D3G75rfLn3PD
dq9cgaC6k1Ocaub+Ce23bPcKTKkVd3NviKuVdfOmwt32eD1nJrwx/WCIy7Z0
46pJd/d4mYJfFOt5L8T99v3LehUKH/TWp8n57MfkEFds/dIj24r/7j1Oc7hj
YqFQV+i70r0K3Q/0Eoa+e37O26Fu2ReN/+yz7bB3u/73S/p/Euqu7T+xc03E
Ua/0vQ575ncLdSWv10udJjrIO/Fdk7PJk0Ldyr9HPn97fYjXtdP38xYvC3Wb
e7ybc2FCqBd4MHOuEftDXZfKJRrvnhTurWo8/HLk4Aj39qzqNSIKxHq3Dqw4
cGxzyp7ZXnV0xRuxXqGKwYtO3Ypw/U5WDpy34brXdfW9oecKRrpcyRXTPut/
w1uSL1ebS60j3a48FZp2qnHT+6TN1PHNZkS6Snf7bNv24qZ35YcaVa+luM27
b88I+uem1/CnD3+PdpGu8Lvnxuf89ZZXNFWnnDeDIt2Tz8seLxN6yytzItvT
j/+KdDkmN2g9qM9tr8vgSX/ceR7plowsnXvWzNte0ewnq519K8r9c3rTW2eK
3/FW3d0UnVAtytVZ9tbnyW3ueDlbzO//xRdRLql43qfvXLrjXfzy5KakPlHu
yu8llrV7M877a/rnm6/+GOViB46LXDQ3zit+4sm0hwFRbty1YrGHbsV5L8Pe
uNvlcJSLPJyw/FnK53G+v1Ur3O+jpGEpv97rihRt+rP/+xffLK2bL/m0//sX
v8z6Iusvmf3Pg1cnDnuleX3/82Ce4fOePh7ifx5s22fHH6s3+Z8Hj//87bbx
Gf/v7y9celBy5IXbN73VM85V7bHOv1+fOC65zGtX/Pv1pYbkLOJy+Z/nOveq
kLd3U//z3KIOH2bJ953/ee7Exz3THN3lf56rM6nEkV9y+PfT03/63b6dKT+f
/L0mPu+X56y3JejhlldzxrgCB/IWOJGc6DWstGL43KQw9ywya6r+7c94E+ts
azn6UbT7dmnPGY0WJHrpFmYd+/VK//539npjOnRfH+Rmb+/aOLjEEef9UHZI
rnP+/e6Pdq6u3Ss2yGVtfbZP52yH3LCxTXofyhKs+9sz3op4/dv8we5F49vN
3zm11+0c1O2rb94L1v3slWduNmz8UbDr+O789o3373BRSx487t8q2CXUTH47
y6IdLqnH+LZ5hwfrfvbM19aNi5gQ7PaMnTS73/N1Lkv2fGcHTw12W9ulLxC0
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
QwMi3OPvZ44eFhTrLXr+5fZn5yJc3KknLS+Muu4Nr1Uk8btXUz7fFOtatHbV
G97Xw2+WesWLdOEDov9alnDDm5YrvMacGf6f/2mU3OvnV9dGuvXZVy3q3O6W
F5r+ToW6R/w/D/Q0+MNi19dHupJNy1UY1vWWV79K+UuzLkS6BR2z9D6S47b3
5FmakvGP/T8v1LjWwFS3Y1N+vF5lBl4ue9ur0P9B3txZo9zkLUPrlgi77b3z
R+E35peP0v3oyVsXXb2bP8r1+aHUngYPb3sFtu76ZFH9KDf0eWz2yWPveF1u
1snZoGuU7j9HF3MHE1tFuexbSj5bu/+Oly5x6MyCg6Ncjw8/vBH3Tpy361y7
DPcXRel+8z8Lbi95MDXKbY0pXi/L+DjvQZlaEb+si3Jtl/y6u1lSnHcjcuiL
RTFRur/c/tUsI5IDo1ybB0UnDGh61+veqHDPR5ejXLHURUuU2HzXi+3xIl3J
S1GucXzhKZvW3PVKBf70V8O00bq/HJz+WvG45Ch3OEeb/l+mjvcGja3S9smT
KPdnziIhZ7PHe4v3N2r8LHe0O1qscM9pg+K9oDWBDTZki3Y1akxvl7VDvNdt
9/b4BzWjdb/ZNVzVqXfpaLetk3vv0L5478hfn1d/Xinaza9aKHOdc/HeqfJ9
SrxsHu26NXxzc1KtBG/zzYljyr8X7cpMSS7XL3eC99P66GvL+kXr/vOKCd2X
/tE+2q3cWiZPkf4JXlKPsa+l6hXtqrUp2HLligQv96q5adJMinbpv37jwadp
7nnLizbZv2NItMt/tuPL45EJ3sVlCWearonW/egfA0ufGzQr2s158VPc+FL3
vPqX1/z5yspod2Fogbnpv77njci7PzZdyoLZOuX1avvD73mLOmX+u/qGlNcv
GX68ysR73qtzMkQlX4zW/elFL+/lenIk2o1u/nL/zav3vKGtoo5luJByPhbl
P9u7fKK3Zfq1Q5n+jnYtN+QbXmhOojdkeXSlA5ej3ZNBVVfPq5Xo3X6ZbnnW
8jEuKSLPwYmf3/fef731+iPvx7iLOTM2/XzDfS/noLdH5ewe42YmvpYqvnCS
17htvluNh8W40M4DCxzonOR9G/dJuzzLY1y1bLkatoxL8urOv1g4cmOM27vt
cuIb+f/w7hT8Z+LsyUG6fzm1c8ztj67796ODWt+79L+8Ybof/aJpxpPrmofp
fnTtuiXDPp0QpvvRgyu/d+ifvWG6H72hZKfdm+6H6X5s6saTnvSN9+8XN621
KqlA4WjdL55Ywd0KaR2t+8Ubi12+OHB6tO4XZ8n39HihwGj/v9d+NW9oRMr5
4/5sjY3zf1z+TYi7s6vz8tcWbvLePzZ2QeuU/RJfYPjJE7nOep33rO06ZWCk
2xv4bsjLlTe9Ly7N7lMvZe8kHFk+5NGfid7/A6QvVcs=
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXXcVsUSgN+vv/d7X7tFwUZCsUGxCxCkGxExsLsFJCxAFBDFvHZ3gEoo
oCIY17p23Wu3YqKIcudxn/19/DG/PXO25uzOzs7Ozu7Z+NATe55QWSgUljYU
ClUR/lZXKDwd8EzANdWFwpEBRwVca3h0wHWGxwT8y/DYgOsNjwu4wfD4gCYV
hcKXUfZXAevF8+cRfhHQKp5/j/CPgDblQuHwoOHVUqFwRoQvBlxWUyjcFvlP
CTg14HbD0wLuMDw94E7DMwLuMjwz4LCGRP/VATdKywkBNwecGHBSwE2+O9Hv
2zFgp4Brgo5C5N8r6Noy6PyVtgm4Lt5XxPt9433zeP9LIcVtEc8/FxK+eTz/
VEj4ZvH8YyHhJ0e5uwfsYX27BuwW8HMx1QutLSP9kkJql5OM3932hq62tjdh
O9ubcGe/b5eA9n5Te+toUZFop9xN43lxIdE0Jr5hi/iWe+ObNqhI/fN1wC22
DfSuX5H6iv47IJ7XCVgXiLjPgmE+D1g7nj+J8NOAleL53QjfC1glnt+P8IOA
zuaj/9eK9x9XpTwrV6e0pFu1OqX9MGD9eP4iwi8D1qlOZVNfz8jfLGCjgB4B
TcUbIs1bEf92QDme36lKdHSKuLWle73qRC/lHliRvg3e7CJd4Lf63fDcatWJ
lv8GrBHP/4vwo6pU1qfRHp8F9G5Iz9Sxe7TnK4FfGe05tiE9D6yNPoz3L8fz
tHg/qiE9bxnvdyknPp8a79vH87/j+fJ4Xr061Ul9VwW+PPhjj4g/uyGleSbG
xZrViRbasXVFGkNLA5pG+mYBH/DdkWd6pF8nwiYBj8fzBuXUD9DOONw18Jfi
/RWRZ0RDev4tyu9lG28cMCLq6hRwQHV6913k+z7gtqj7lIBTAx6O/G0jb9co
77zAuwf0CBhUkcYPPPhzxK8b6XaJ8NaIO9n8D0bcyIBzAx6gPvH7A4aL3xLp
TjLPTQEnBJxI3oCRAecG3BVwRsCZAXcEnBZwesDdUWfTqHOVoO3GwI83/82W
Qbm3+x3k+b6Y0twQ8EDACOv4gbaMsnaO8JEI20XYI8pcHmGTwHeL8LvI2946
KHvXgN0CxgZ0s10or1PAAbRbfNuogNEBZwe+f0CHgOEBHU13X8SdY1t0oA+j
rt35nhDcG8bzqhEObkhp7kV+xPN68FSEfwasH8+7NqRvbi9NnxcTr1BG3wj7
lFJZD9kP0MT7pvLS8Oj7jvLB/dLHd9xbleg+pyrJ4L0D9lEGE+6rLCbcL+As
w/0DzjbsELBJ1PFDIcmmARVJniJf+1ckeQo+0HfwE/PAngF7OVb3EB8pn3YO
ONewS3WSEd8WEu8iM74pJHzDiiTzwE+zPL4BvofHoekcaeT77/Nb+f79o01X
jfbZPMJLKxKvHxQwOWBwwMEVacyVI83GEd7D2Ixw9eCZ8x0fPQPuCTjLdpxk
GeS/U/6Fp++Wr0l3iW1BfQ9FmTtFmZ0d66XAN4pwYkVqR9I9A6/E+80ivNg2
JW5e4CvH+00jnBOwUjxvEuGDEe4YYcco84F43iGe94vn++N5+3jeO557Kxvo
tz6GzC3dK1Kb0sZfBzxGGzC3BDwq/mXADPEvAqaLfx7wiPhnFWlsgA/n+0pJ
ZhJ28fn7iJsdMIe+DZgZMAv+NX2L2iSHu8bzmAgPLKVnZHLGB9Wm9Af6HvlM
+bz7Rtop99OKNDag6WPlFHLrE0Pi7ouxdE7A8IC7A84MOAuIsjqVklxFhncs
pXdfxRg8NeJvC7i9Mj2fFnCH4ekBdxqeEXB+5OkWedeOfN/5rXz/vRF3tnVT
zwHWhTznmfa7X7pGBPyvIskU5Ot/lRnghzSk5w/pg8i3R+CPmp9yl0SZd0kL
33aP30fdm0Z8f/gn4CPLpo2+C/yCyP89fBbpFse7HwM2q0zhT4zvyhT+DN9U
pnanPzeoTHwDH20Szz9UpPzrVya+gY/W8Huos0llekeejSsTf5CnWWUq7zvr
mBcwH/lWmWiClv6ViY4tAvr5DnzfgNUCVkfWViZaoG+jylQedexdmeQocrhs
H60VfbRmZaILflm3MvE0PP5WxB8f6d6O8J2Ak+L53Qhnw9uMxVKq80P7p5ly
GJn9RoTHRJo3S0lvQ3+boewmPTSsV5nqoY3+E++PjDSvRzgzoFM8z4pwncrE
09C0dmXiY/C1KhO94LQF7fVLRfp+aKGtn4j83aKcJ0tJX0dvfy3CL4qpHfaS
L/YL2F9e2VccXqa99qlM8hp9cWVlLvoiOuA3UdZ5Uea3pSS70dvWV66jC6J7
3hhxVfB3Oc1JaxvX2fj1nH9WVY+7OdJXM84jfa+Ab+O5Zznp1+iOJfVswrLz
SVn60K9rAmrVwasCqgN+LKZndPdbo/yaKLN7Oc0hK/s96N9F62DeQ7dbw3mP
ED2uPuCNkOtvVqW0hOiy/aOsxVFmvwi7VSQdHdkKjei56Lh18fx6VcrfryKt
N5gv+yqPwfe1DVb3G/5TlfJ0rUj6L+V2kJa1nOfWsk3RdWgrvq1fQ9JzOwZc
H99bGXiHcmqb16pSuYujTV6tamwjnolr73fyfW2NI9/O0sR3IJP7RbkTaxO/
95Wv+/iMHpLxD5VXfXz/ZTHxHTJ0dMCBAV0Dzg3oHNClMo3L7o7Nfsor6hpl
/IHKMni2g/KUsKOyk7CTMpTwgICRhtSB7KPcS2qT/N5LXj9DfmcMXBQ094o0
ZwcNE3w+J54vjufepfTugkjXM6BXwIWGvclr2CdgnCEyjPlyTMDYgPMD72H+
XWxX2p15dLTpxpsPOTeWdgnoHnCeYQ/p7BH0dCymsGdAh3ge15CeiR+pDtu5
Ks1NPUzDN/X2G5H9tDnxY+wT6ptg/f2V68zhT1QkPZ7yugSMZp0Gn6qfv+P6
rnVdoTAk4OC6tAZ52/HSIvCDAgYFtAwYLI4e9Z7rwRvkR/iylWWQ7kb59zV1
/o9d6z1Uldaen7imeFc60NlYG36gbkb4vmuQ960P3fi/pnvQMij3fstmfXef
Iem2CjoO8dtucoxC0y3KhjdcEwxXB+1gmNcNZ6sf7lGV1lUnu/Y4ybXIfsaf
6RqAdyfYhyPV52+1LalvX9Oif+5ZldZHlHuztLxuHN+cddU7qxrXXnfYb7tL
C3TsYx7S7mU6yt3bd+CHxfdPC7giYOuAobbLSNuR/iH+uYBFAVcGPC9+VcAL
4kcHXBdwbcCR2LMCrhZeNN2OAUcZPyfgh4DvA9oGHGMZ5Pu3eWajVzD3B3zA
nB+0rBKwcsjBb4LfpwSvXx7pFgY8GzDLtN9Wpu9ZZBw0vWS5/wp4JeBl6X3Z
uDYBh/r97QKOlaadpAu6z5IX8/rgbvvjHHnrXvnlfvERtt/98su95j9XXqd9
RwU8LL5z1HGcdTMeHzGO9eyMgOkBO9h+w4Sr7YftxY8I2KYu9Svfs23A4eJj
LINysRs8arnbmY90H6KDVaW2Ptz+nmZZtCntvVl9yJOAvgGbB/QX/0T9Zi31
HfSetdXF0MnANzVfn4DlUdZ2EW5b36ibogsWAt++PsVtETDAOrYMGBQwMKBZ
QM+AHgEbBfQS3zigt/gm1gPeIuAg8ze3DMqdr86F7tUy8MGm+5/6LrpYReA7
SNNftG+EbeqTfoqeuoF6dFP11m/Vg5sqb9Gns45MiD77hbo1+uM86/9JvZl4
8v9dl9qG+r5U5yYPejm6NOUuq0u0bB3wRzy3jrBVwNJ43qo+4X/WpXjwn9U1
aeuv1PubqMNCC/2U1wzUcYT8BR+gX6Nnr6F+StugO/eJuHEBF9UlWwzy/Qbl
3U3iJyrLblKu3ab8622+C+uSzLrFdCcbD9434sZbBzoouuhNpSTLbresofLm
VOUX4WV1yQYDHdDF/DMlYLJy/zLxfgETrKOz4xP518kxzJj+WH2d7+8f6S42
TzfHJ2OrqToUevkG0dbdAroGbBjQXbypPAteKKd1xkWlZGcqaGuqLCf9fry6
F23MWqOL8gL6noi6FytDmXcnBVxal+ZvaMnz+WjzdHfMQyu2kPPFB9se5J+t
PP6uLs3rlHdJwEDDiQH/ZUxUJRnxfqXyOOC9yhSuxByDDRSbfCnpQdh/0X/v
5Dvj+4oRf0FFsi9j+3zLvqYfx5gWHXyG9GZZdZ50X2g+7CK3R5nrs5+Cnaci
2akpF3vcLwF1AYPL6fmgctIp7nDufEf+AX/b+sHHWj/2lfMMKfeOqKtJlFNb
TnZV1gu1AXfR79ie4v141wOsD96Ql7NOcYvfOS/S94r08yP8oZjGCjoSNs1l
tE9Dmu9vMv9w1wHY148rJz45NsIJ1oON6T+OM/KMMC17COMqks0Imi6yzcCx
OXaxb7BBdhYfaT7w1xzHlPs06wLs4RE+GzAgnhfKr9DTEOH7EZ4W4QelZFNj
f4V9p4fk2TzXjapqnN9Gy69fODfR558bB47+gh6DfvSl8fDCp86ZlHdkObXb
sHLSa/Y2D/IBXWov62BsMF6Zx9HP0OOQOehtuyuX9jDPyb4DP80yKPdEbTXn
lZMOsK9lYUds4Tc/F2kOijTPl9I+ysN+z6GR5/d4P7Scvm2M/P0x65J4/0mE
/w04M57/R96AkfH8eYQvBxzKPkcp2TppV/YivmSMYd+K8MWAIexblJLOi96B
/oG+i+6BToJe/KBth50aeuobGvVpdJr3HB/gH1sGebIOTbno2fdYbtbLwQc2
JF7FPp71ZvRo7GPYtrAlPhCy4uOAjyqTrYzwfwEPoTcEfBLwMHqD+CPMT+IP
Gk/+GQFfMpcGPMp8Jj7dd+TBXofM+tA8awUta1YlubW3/bqq/AK+mn26j+k6
yCdrGNLX0Lum76Bl7apU7urGk78s78BD9/l90PE4ukLA1wEz1VW/MX4Ny5iq
Prsg4J3KVFYp4O3KFDYEPGYZfPO7lUnuku6tyhRfrEo2ww/Vne8wHeVhV0R2
I7PvNh788ajvm4CvA2YGfCs+yzkBvBS8+3XIrEmlZC99z3Jvt2xovM3wLena
07ZY2fbe0/bqaPuOc+6Z5VzEnvhTzs3PiF9me4Cj428U+ZpVJd1hlvTCH+vG
u3WqUt+vV5VweIh39NOFpn1cnZ61AWsObInIsk/r09z+ZF2aY5n35gXMdT6c
Lz5JGuerN8zxGyaYb47z5VzLgh/Xr0o0waNNqhJO/21QlfCmVWluZq5m7cFa
hTUK64Hrxfnmnqbj29BXWFNuaL5u8sruyjW+uZNtvYHxXaWji/mh40BxeGpD
08KXTS0bPm0mjaNMSx5sfNj6biklvqPOXeU/wvZ+W1fTryO90DRXnRd9c7E2
iSd9Rxx6cftS8i3Ar2AX7Z/D2M+K5+cjPII5KGC3gKMjbg/Dv9j/iuerIjw8
wp1D7tQG1LEXbFgfsGfASgEr16YyhkXeF7Alassl/w7xvH0pybY+Md1twt5+
wHbYteLdWhVpPuS5QzwPibJaB2xVm8ppb7lbR7hVQA90kohrGdCqNpXdT7nZ
XrqK0BPQEFAK6I+vA74P7NkZNg8YaLhlwCEBWwVsHTDUsE0hzRtDG5Ltrl3U
1baU7HkH1aZ9G+jY1Tqpb5DltQg4yLBlwO7SUg7Yw5C2o192tp8on7ruQTfB
J0O6B1tGq4AhAa2l9WDfgfeRLnRe5s9BAWdXpHbe1jY6oTa1EfQeb1+Cn+g7
2uwU6aNvT65NdIMfG9CuNvHCMQFtxU8yH+mODtjJuONMSx2jo/572ENifyB4
fmbQsmGEHwZ/3BNwb3Xaz+M9e9or1YRcjHfvBSzFphfv52KviPdDAw4NOKUh
PU8N2Cdg1YDVAnaU15hDj4q6d5SmQ+SprQO2iTRtSsknYltD7MXw6iD5EB2T
ej8pJN7j+aFCytvH970DNpanewVsJD7UetrUJr2vj3zeV96nX4+MuB2k71DT
bhNwmOG2AYcbbhdwhOH2AQfL+4yTnUrpm9lXH2Y85X4QbXe37cseIbw6yPQH
yxs9g45m0j2pNvE0Y+uy2jQOabMe7EObbrLx1N8xytgg3nUNmOI78nRnr9o8
3QopDfhUy6Ntrq5NtNIGl/uONrjSb+Zbp9kW4Ff5jjz/kv/gx1/cJ2K/6BrL
o8+vNYQfr7BsyrrOd+RvFXk6R97RjB/3iUYVEk/X1CZ5B99UBVRTjnx3WMBv
pbT/xT7YGaXEF4Pgu3LyHRlUTrZkbMrY8K+XXsbErY4rxtnNjj3GUEvLPDDK
usG0jNHTS4mugaVEJ3R3bUiykPBh/KAsg3JvNB9j/SZD6jhUebZNwKXyAv29
pW3ImnOh/UGbPVub+gx8gTwBvon7BnMDNiul/VT8fp6zz+jDke5dnBRhi1Li
FfiEupqLP1Ob+IZyn65NvAWODn6wMrCtfM1ebxtl/6eFtP8C/dDR1v6hz56q
TXxMWfOM51vnG06ynVvY96xF8FNBf1nkd/MNL8qj8NR/bFPa8iV5Cz562RB+
fMWQfv63+Uj3Wm3qS/K/ajw4e6H4ZOBP97plwwtv1qa+hEeety3h/dNKiS8G
sL4ppTn8sAhPce/i5OC3F0wL3W9YHmWd7F7HieXUH/TL8fH8X+XufQGbl5OP
xRYR7h38vYryFLk1RVmHX97TAc9geom4d6qTjB6mfsG8v2Xknx948wj/LKW8
YyKsjPQvR/wrARXx/FJ1wvHzID17ccz/lyknd478p8bze5H3r4CprBkjXFZK
acaWEn3IOOaQB6qT7xc+NfdXJx8g8Ad9h3/NyjVpPnm/On0fIfnxX1wQ8GxA
Id7/uzrRVx3Pr7JfyL5fPP+H/Uv2BeP5zQjfYs+qJr17g72rmhQSd2Ep2aaw
Ua1ek9r6fwHbl9OeOHvjfD/+qfilLg94sTrVzRzGN5Fnq0i/INK3jnDbctKp
2Cf/2/Ymzxo1qeyP2O+tSW0M3TU1iXboxu+HctgHbqhJtL8dUKpJIX05uZT2
BdgfWGI/0y5/2DYLA9aMuIeinDX4jsjbNqBdwLGGOwecGLBrwG4BJwfsHrCH
cnObgG0DTghob7qTTEu6owN2slxkbRvztC0n3wN8EPAZgoZvi+n74T38fy8r
pXerlVP/XWv7jisleyB2wRMbUplD7edrTLdmTWq/j+mLSH9FpLsgwuPj/S7S
eorfsadtTL/hR/w3ekmkPx/aysk/aeNykmGXO8+i012hTNuxnHwq3lLXmKq+
sdQ2XhRwnG1J3UcEbBewfcAZ6jr7BpwqLXsFDDN+h4CzAvYL2D/gSN/tGHCU
Ie17ek0a55R1mmWAn2nZ5H+kkObGMQHTDccW0pzDe+Yd+AZf5zscV3epc1A3
fLmm/HWb6eC7W8Xpb/iv7NjC7xkfZ/zPZjQk/8SW5eQT1irCiaXkh1RfTnKH
OvGnnh10jAsYX0j+YU80JLvgpaW01mbNvWk5vd+knPzqZhVSvvcsA7q/992c
QuLHBun7vJDagjZ41T6/Qblwg3TjMz03YF4hteXKylB8l5807gfLfqKQ+Ijv
Rs/FD3t+wFOF1J8rmX+xacn/me0NHT2c85kHf7ZO8r9u++Ezvl45teG65SST
eIev9IRS8j+oKSc5dYv98av1I9/3VY9eXT5Y3b7Er3pGwKOFJG/uU9Z+ZIgM
RgYgd2rlXeRjveOHsOiYL9q+O5u2Trnwt7IQficsKAuqLRferRJHLrBOJc83
kfTxgJmGFwRcGPC7eh1+QDPk3/P8BsLzC8m3cqY8cZxrX2TE14E/ZnlfmQec
cQZdFY4twkrHVqX0MY4vD7hC2TlVfEHAZeL07YSAi+WL8eLI3Smm+9h2ZR77
Qh6cYT9NNt0i65lmH04y7mjX4nzPTNvjIr/hfNvo9Ia0flpQk/jokoBL5deJ
4vN9N0levNi4WZbH2GMPkL3ApyqS3ov/Cn4UndX7kBfI3n1Yo9aktRvPyGFs
Dnsyt1cnGb93KaXdq5Set65Jafc173HG8T6no7+QqZRD/HHaMvj2bFPDxkab
YKegXXbT9oEdJNs+oGGYaXjPfLur9gfm7d21jyBXbtNGh31iV20l71gP9kJ0
p21cW/5YSn4zP5WSnYa9h4u11xDiA/ukujV6NT4m402Hfo2ejf8PPp7s/bCH
g85NHPn6q4eThvrQlZEPzIdF7Uiz3MNgT2MP7Z0raesqiWfbU4N2xpVWsDsS
rqKNqsE8sy0PWvc2HnvwTGmkPvQ4+o4+x86M7w6+P+i+O2ddtiE9c66EtSxr
1DxvttOuwVqAZ+ZQ0u5i3sHG8T6nY73A/LuT6weAcrEJ5DU/eiZ2AuxH2I4I
Wf938P2O0tDPNLxHR8Wewjvm7h20NfSzTGwIhNtZPuNrv1IaY+9rO8ZmTP/A
G+jV2O3x/RqlfX6k+GO20wXa84kfrT2fEB+lUyyf80fY88favtONH6t9GX68
U/s55eGrRb79zTunMvla4euE38g48ZmmxZ+rQyn5A3OmA59gcOTGLOPJw3ko
yuS7TzcN6d+zfr4fv+rz5ePu2kexi2KTxjaNz0or17qse7G7bO3ajzUvzw8V
GvGHfW5jeyLvW7s2zutk0rNvMsL2baZNlvoOLaX1GGeMkF/4teMXj+xqJQ3Y
UvFlv1Tb6kRx1ustXUt2NT2yDpw1JrKPsKXrt/mWQR0/lJKP2uJS8ufDNwFf
Avz18PvA3+MAQ/wKOhviZ4CfHX4O+EPgW4cvA/4G+P2tZf4flS/Qi08fe+Ds
haOfcc6B8w34DK5pHnxe8UnAP6GrtODf0M0Q34zuhvhm9DDE16KnITR1kUa+
Z3/Lo47e0gut2ACwBWBz6Ghb0T4baNPHjs4+0Gru6XTWXo/dPe8n5f2lNVfY
D1lLm/1+5ltDe/k65u9kPDj1Qgf2qX2UW6tpa2+ygr1/A3n0QG39Tdw/gGfz
fkIz+Rc5jF8lcryL9JKHMwPsi7Mf/qghY6Cp+wTwIjYY2gS6oJG9MfZekLXM
M8xj0MeeFHthyOt3Khv3rwizHwEh8ibve5GO72OvivzIaeLBWfNRftHvpO2h
iXZlry7v+xFCE23KfhtxtCM05r0jwrx3RMi+Df0AveSh7di/oY9pF+LB2ZdA
njMPMNcyp7Kuoz5kIjLyTtctrIHucN0CfrfrFtY9dxkPjm6CfbaPuh52yR7q
PoQ91Z+woQ9RH+JdL3Uv3h0ScF1NWpey3r0y4HDXZNNq0poW/F/Gsw6+ynjW
ZFcbsg5D/2Nf4dCAa12PUe41xoNfbxms/y6UFr7htpq0/mTNh724UrsksnY/
5S2+A8y1yHPmW57Rl/Zz7mUO4kwJ50w4P4Juhb6V9St0KfSx262H9n2vJrU7
7Yrexz7KAHU+2rWveiH7HIPVOwfbpuON76f+OMh0E3zXXz2S8gaqaw403Qh1
vaMivMH2YC1+S02yF2BX+E/AjQE3Bbxp3K0BbwTcLP6W72i/hTVp/wA77uvm
I907fjM89a4h3/y2+YgbW0i2bHiop3Ibm9q5pRRiY+M9fsX4G9+jz/S9+hjz
Dt9pfI3BiXu2JvUJNLG27modo0rJpodt70a/G3vJazWpLXj3ijx3vd9BPHaX
PuV09q9vOX3bibYXa4PDAg537XGIvPi+fcsYukLeJN2ttjE896r1UDf2Qs7C
cc7spZrEx4yP5xwPjI9FtjH4y8ZD6/PGMz5eMGR89FY35pv/7Xig3BeNv0Z+
3kc+7iC/o3vg64HOgY6x1D6m/j9qUvuC/16T0oIf7RnIY8pJh+E9Z4UKtalu
vum1oGNRwMJi0neo7yz1mjMcXxW1KS3ft1xayc/ZLPZasE13Mh/lM1ZfsS2X
2V60x5/SC86Yftm+/ct42ulvQ+rAV2WU4/c++wFb5z3O5/QN8h3fhXuV73eL
f6ocfdj5g/jsW0GIL8lhyl7WMsj7B5S/2dcEnLPynIXAZ/8zy0MnRW9Dd5yj
fEfXf0z5PkP8c9NOd44nPvt0EM50zphuHvSzWZb7rfHgnHujHfCH4bmz7c7c
y94Adn/23/60vdn3W2p7s7f2l+3Kntsy25t9tr/tT/YSXlPGsJdWocwd7rrz
yFLaZysYhyzdSxnK+GGPZdtC2hdHhjLO2JdGNiGr2D9/XVnFHjByh3TsIROP
3GJ/+B1lEvvGbyur2GN+S/nEfuBy+Ze9wD8cB+wN/u44GFJO52wPKSd+Ptvx
cng5nbk9opz8p3jPWTx8pkY0NJ5hxO+IvUPmjgNtX87qjTA9z51Mx1ko5peJ
7sm8qtwa7jigHNborNVZa7N3vsQxiuzEZsA5DtqSNTzr+nPyuryU8u5hHPtz
9A/tyLqc9Tlr9idX8IkYoB/JP/6m+kiwtuacKHcmLK5NZ6PxwcCnhTNEnB/C
h+d5/Xbx30WmEoe/IudNuVdhk7rkZ391XaPf/TX6xLxgPuI488r5I3x1B6jn
/lpKbY8PWdEQP7LR9cm/Bj8bfHOg60L9bejD9qbj/HqVcZwlmCat+Ovjx4uv
+UvSkv30r6tr9N//lz4xdeXkU4pvKTZyfEHxv60uJ19NfDaxF/LMGaFVy+lc
MOeDscWSl3NMVX4f9HCuF/s8dvqGcvLtxMcTPZOz7f/4NZXTM+fd+Sb8TPH1
Ze90F/FdbG98gXeznR6uT7Yl9us4W4pfPWcP8Nkf6FptSSnZZ6gXGw02EGhG
v+V8AOcEdqlL+374LFEWcwJ14IfZpZzal3sCupUTf3CG/u/atMfG3mB9Xdpj
Y7+uoi7tC7IfCE9x7hibzHLTsh9YqEsh6SrrUlr2DPcsp/ScV96nnPiSc8wV
8uYm8kBb+7pS/uN9p3LiLc5V0/472QdHqTu1K6dydrCs/cspL2emq+pS/exJ
VtelkL3Kurq0H8m34UM3VX5aoA/ZVH3Ipog/oc/WxfpvjdOfC5+zyaabJS8T
t0jenKb/1yTTzdc/bJL+Xhc7bvEz5wwV541q6hKN7MfW1qUQWne33/A9O8S0
W+tDNl76hvqujT5llJ190y6xbnz1OcvBWRDObmwrfpj8BT4r6vgu4NuA2QHf
i2Mj/qaQbMbYWr8Vx0b6nfhM831Tn2yD2KGwEWErZu+HfbYrIm5RwMKAOQE/
WMeTAT8GLA6YwXmGgC8CHg34SvwxzlSIP2494HM5H2L+JyyDcucH/MKYC5hn
SLppAc9JBzZE7hDBrvVZId3HAY6tmL2Hn7QP/yKO7Zq9w7xXTJj3Fn413Vzz
sTfydNTxW8CvAU8ZQhP2cPZL2JPBTr5Y/EnzgbMfwZlQ7kLBPs/ZUHD2a7gj
BVpnmO4LgbTEPWt7s/d7ZdT3vN+8wHd8w2zrp/+w/X9lWY/Zz+DTLZc6p8kr
hyv3OU+Uz3IRZn9JwqOVv/gmHqfsPlwevM747MN4jOmuMn6YYxKeRv4N0r71
RymVzTmxnaxzB/Fh8vUOjr9DpZVy2ykTjzZfPk/W1jjGLnKFcyoV5TRHcG7g
L30UkIn53MhQ5cIQcWxz8A18hOz+rD6N00cCPhefLi+DY+vDlvePHS/wsQFj
6tNY4p4GzhQ/YntTLrwDDz0j38yXj5AjnOsYrAzgDEw+p0KYz6AQDlA29THd
RN8NVC4Msqx8lmOQMouy85mYg/3mP2uTHwm+MHkOY/7iLpnF4pM9J3VwwBTD
IQGXGR5Sn+TAoQGHBVweMFT8kvp09opzWBPr0xks8KnmI92E+nSejDNfl5qW
M1kX+448rLcmuE793P6Ybn88LN7gfPup8uESy5tkeYOVSxdLy1xD0jGmDg84
ImB8fTqz1s/+pF+7K7vOCzhfmTZWfLp9PlaZRvwFyjTCC+uTLjBaWudYB989
0/iLlHUTpO8qaRmmfDtM+s6TFs4U1auDjLb+rtLKuv2+YlrLn29azsqNq0/n
4/pKF+96WT9hb+nobbrhkf9+yzo34KGABwNGGj7AnnXA/IB5+IgHPCX+vG16
lfw+Wd55yv4Av8R8c4tpPEyRp+av0G8XRNzjAY/xLYaPBpxnOIPz3QFPBjyB
DcNwDuepA2YHzApYYNnw3UTrJM9Fxs/k/JX5yHOh76j7FXyeAl4opjl0nP33
rOXB78w9V9hXP8lb8OCP8hz41/IHfPGlPARPjYpyH7Z989xGG4ywjemDL+Qz
8iyWVyiXPSv2rthnY96dLX+NiTzTAx4JGGs7gS+UXmh9Tnrpp9GmhQ70g1mW
9ZU0Qvc30p71gpmmo++W1CfZNkseoo0mR1lPyxPckYPfFP5T+E7h98AZKO7I
wc8BHD9afCk4u8d9OfjW4mPLvhv+QNwFsXnIrJ9CVv1cm3wmiOfM0mbx/sfa
FMe9QfgOkYf7gfAroFxkYfOALZWJhC2UhZxXb62MbCl+kPHg+CFBO3cv4OfB
WoE9SmQwuu2mAnrrj+rV6NTgv9Qmfz58/fLaiTHLvVbLVtDjd1N+cafU7yus
sdo7zrkf69sV1nU7u+7jPqpfTLdMWc48x7qwnetEaIIe9mp/lZanbS/ezbNN
50kr88kWttdvpsX/cWlt8rlkzljiO3wtfzfEB/MPQ9L1tV02cx4j3Nx5bHPr
qJFGvuW+Uton5m425nN0/Rp1AtYhVeoEFeKcVyHvTHWBKvOgOxRMt1D72OHa
Chf6/JI2M+webxaTHe0lxzl8O0X8NdO1kxZ0+beVCa+Y/kXzvGv67aLMy4yb
YtoXxR9ZQWazluJ76Zth2g12KCfdn7mZ/mR9QLuDw6N/2A+chcB+sF05nXnA
BrZNOfHu7/ZDpWsv9CH8L9l/3rqceHqJ/dbCPganP36WZ1lLLHctyPqTtRbr
yCO1Ke1UTnpYrXGsN/52Hcm6BdrRuViLEBIHP/0iDzL+CKkbO/sk7e6HaPPN
exqE7Hv0LKb5gHmgm3INOdfd+QC8h/Hg/Z0bmBN6KdPJ36KYZBUya2AxzUPM
CYOcz8B7OzeQp69zA/PJOsWkX6B3lF3Dsa7fQtmNTrdlMa0LqKOrNCJf+0kL
ZfWxPOoYYP3Q2jrgj8i3NKBVPP9en/CWxUQv+BbuQbAf0aKQ2o49iJaFtJcB
3qqQ9jTA8/kQ2rV5Ie1ZkL+17Uu6rYwH39LySLdZIe19sC9yqW10UMCQYuJv
eHvrgD+DrmUBWxUT7eDrFlM7oa+RZ5Lte7D5mB8GG06y3Qdax0TbBZyzl/g9
c2/WMuet561jkThzaJeAA4tpr4P9C+zz2ObQY9CJDikm+qD3pHJKx572ENt9
K9OSp1MxldHRvKMtu6t81k2+Gy9/9JPnuq/Ag4SZZ3vKg+hRnaX1Qt/1lhf6
WNZFvusjv/RbgZf72y6b2//0DfrYAZbb2Tp4t0Exzd/oHesXkw6B3tG8mPgU
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
AWvRqX0=
          "]], PolygonBox[CompressedData["
1:eJwtlmlsVUUYhk+hLfbOJ+BSWVqoaMUdF3Bfo5FKRFEUBS2FIoIUaFGB0rJa
JKLgQgX3fflF/EHiHhdQ3BDBGGOMiooosglVFFSq+Lx5748v93lnzp05M/N9
75w+YxqG1nfIsqyVKCRuiizbl8uyEuJGuC+xEm4rybJK+O2UZUPQK3h2Onwd
bW3o7vBM+HhiNfo3nj8W3kD7VHRrUZZNgHcSC9BV9M+BPyPGoDcUZFktfAL/
eR/dFW6CF/G7hWfLaeuEfgJdAJ9GDNSz6OHwCOID+CmiA3w6MYj+59CF8JnE
EPQ2dAs8n9gOP0N0hM8gBtN/F/oX5itDF6I/Qt8AVxMfw58QNfAoYi38kNaQ
85gaezJxfbHbzg/vgfZCazoR/ob+23Lek2/hd4ih8NXESvgxIoMHEBfz/Dp0
bc57tB5+lxgGX0u8B+9IXsti5qyH7yQ2M19P2gr4/z3orehe6Bz6T/TlTDEY
vQfeTZShB6H/gK/kmSJ4h94Jfo22KvgCokF7Q8yF5xFb4FeJgXBfvSO8UecG
NxM/wr8Ti+DlvMM8rTU8dje4Gf6J31no2cTP8H3ENp7tjT6Q/gpiF/ot9JHw
Evq3oyuUI+hXkt+tlLbZ8AjaOmktxEj4Edr209cffSH6O/R0uJH4Hm4jFsJN
PDMXbuSZzsk5fxQ8gGinMCYr58I52TW/Zq39iPC7dc7/d2vy3igHlAsPEGtz
nlNzb05e6zH0T4Krw+/aQ/sAXxR+V+XAo7RdEs4F5fzj6L+Ta0858w9cR/9+
nS1xM7xX55O5Rv+Cy3WG8E7lRHgOzbVXOQxvSj6rPdTnxOQaVa3qnc+mv0U6
5xpTrdXQdoDG1nmHz1BnuQs9DK6GNzH/EvQ++PZkVs4qd2vD/+2pfYDfSM49
5eTUvIfIS3ZrD+E1ybXXhD+Mgi8N175q/El0d/TLcMDT4IOUX6x1BW2HwqXE
ryV+poe8Kbl2ShlvJPxhsndUoWvgXjzzunJPeRLeM+2d2nrDX9A+Hl5DTjTB
h4TnSvK5sGfKO9uJ8fBo2pcz9jL0fnhVcq1rj7RXl4W9Sh70NPqKsBfJs55F
f5rsNRpDY/2QnLurOaM6+Kqwt6lmn9fawmdRTFwDjwu/Sxl9c+CJRKa8UJ6E
c0a5o7ZJ2svkWh7H+hqTPV/ev0o5Gz4znZ3uiLFwx7DXyDMX0n5qeG/qaOuv
tRH9eNcp8li4S7i2VcP3y1vDZ62aVe1G2KvkAffS/zkxFv0wY86A+9D/Zs6e
IG8oCd8N8rjFqj15Rt4DX+C3X3gtGuMk+OTwWDrDU+Cl2uOcPWtj/gx1li+h
DwvngHJBcx4OHxz2HuVYaz7nlHuqsTKdhc68yB5/lt412WtVk9Pg0eHaUw2p
lr5O3hv9ZxZcHL57dOfdnezp8vZKflvo+yrZi7SnM+X98pic7yjdVcpp5bZq
tj1/5jp7ecSE8JmX5z1d3q6cV+5rjH+Ta0y1thT9H3xHMuvO093XLbw3qinV
1oLk3NYdpbtKHiIvWYc+l/5lySyPl9d/mZwb8tRmrSXs3fomqA+vsTLv2S8m
57hyXWd0Dn0N4W8HefYU+Jawd+uOuTX8DaFviYp8LjzI7/qc7yzdXfJcea/a
zqP/6HBud6F9RjjE+oY5LlxDqiV94wyH/wd5IC8f
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
DZ7/aMuuaGPnbAc/aHyeT7R/9K24A0B7+CzuGbBHwAGRdr44HRhwgfGDAi40
/m/7MSLgYMOLGlLuH+G44sO4d8BeAf8y/ULpdK9jsKd0Ysx3d4yh2dIBuwbs
ErCuYwn91nPsia/jN3DZwDE5zLG/zzbW9xtl1jYv+P7WnPk3tJ8PBNwfMC9g
ycbYc3B+Ch4RLhXwWPz+MeCHgA8CFo1viwR8GL/bNmb8o/i9WGPG5zZkHYtz
JtuQdVDvnIb8Rj7OQxgjziD2kAb0fzdpAN+tID9BpxXlG+IryXPEV27IOUB8
tYYcP3hqGeuCjqs05Nwg36qm72faKfLy6o435Ze3zT0cA9KZHzs1JA8xP3b2
G/G1pCvjvKYh/LKs4woey1kf8TVMp73HA36SvpzDNNa3nvk0eBaEjoj/26Xq
E9gcL1cvxN8P/z/88PATxS8PHz58T6+WFznjvLJNq5/fVeqal1svuuPF1nWI
7VzinGtX33q3YOP61jsHG3l+g28heBd3RAhfVcaNFNfiPhJtjDP9FWXflebj
HhL+gIWeyu9B6pf4LhZ3gwjxz+1lX+kn/t+j7f9Y60Z+oJ8OsDztcMZb+AwS
Pq1coB+cpRZ3nPAXRh/EPxi/3e3FBV/EzaQ17W9u28Q39Ru03868tL2V9VHX
FtZHmU3My5hwbrfBAud4hMU5HiHneNiXif8i3r8Zf9JvnO3hY8l5I+eJT/jt
pzatd6IoU5xfFueZq3nuVZxlkvaYdXA2iR/mG45xcR/pzzatd6uod8Na4BHj
t24t7yQxp/HxfNj2aAc/1e+NP2rdxPEvnW0b8AX8vqDfXuHHt6XneSXP/Yo7
K5t65kdfOeNc2zNPaEac/q/t+WNxbkp5+reWZ5OsAZt4jtngOeFW0qg4G1zd
s0finNNyJllx7dnCehs9q6T8ErU8021by76u6fnmqta3X33r+WhxXnqQbVwt
reevXc3pe4Tf0afItcaUy5+XU6YgY74qp3xEXn5Wzm/Ivy/L+Q15dnH8fizg
UXzFDR8J+KKc6dT1aTnLsf58Us5wqYBn4/cfAb9zX6CcMhSZ+nU5Q2Qw+svK
yuZfAuc/Iz4z4ONy1rFkwEW2+bC6zkrK9efKmf8P7wb0DOjh3YAjjG/kt8O9
s3FYwKHe6yA8xDsM+wXsq0/8/sZX9ts+3q/obvmV/La3dzyo4/+491HOtZa1
F73gDPQy1/IzjXOnoVfAkeW8t3G49W7iN/D+oTnzbCYe5waco55BfafZ/tkB
Z4nHWbbxSznbZ53/rZxrOThBow1d8xnDHwK+D5hRzvFmPO8uJ3/ACyuIN/24
LODJgCccB8p9F3Cp3x4PuDzgKfONDHgm4Gl550fbI99Pxh8oJx8w/vc5rvDj
QwHfyi/3+g38HvTb17b5s3XdI+6fyx/fWZ77DQc4lpfYNrhcWU6+fMa8q7v+
U9farsnzy7vmg+tars+0CV3JR3/WdE2Gv6ErtKZe4tD+CmnwlDRbQ33hKXmF
sbpLejOH7ijn/IH37/Qb8Z+bc05cE3BVOfn+Wev+zbqetD5wvLqc+cmH7+HP
6grcwzlQunA35l8BB5VTN30o4MGG1HHRydDR0D0fCXi4IXVZ0tH50GHR7R5t
SN38ceMj/EaZCy1HvejOc6wXvX+ucdK/g97W+zXywHa+MX6/3/7TkLrpV8in
htyjPGHb7CfmWe995iXfdPuB7vlHc8rCYl/0pOXRTdcMubhGY+pSazVm/PuG
/LZ6Y+K3WoSrNia+fCP+qOXJ+xkytTHl7OfIxcaMzxDfL+wTdazSmPHlGzPf
Q9LgG2n3vXQ51/7fZ39WjLwrNGb/VmrMOLRZuTHj0Iu6idMmeWmDfdrn4sie
6mPpdY94kXamc+lu5cq9ygZ45fyA8wwfdO5e4Fwl/lNz8iYy6xzn872WIS/7
1HMNSTvLumnvDNtkHnCXCzn673Le2SI8uJx3tw6WX/e1jbOd2+dZ92nOGebQ
6dZH/ELlAriuIb8zB450PjFXejqvkA3Id2QZMu/X5pSZrDGsQ+ju6PKsS7sY
Z2/N+sq+p7tznvJ3+A1a3yXtyXeEbdIesn+kZVhDkKeX2M+LxJ1+jzB+kN+g
fQ/xHWl/LnB8DhX3S6Ul9V0sLS+2rrn6s+J3O6cxfYiJf6Q/K/E5nIm1pI/J
h5xntaTPEedEbVvyjOcjzrha0v9kQku+C8CbAI3VjHdSPx/vfaIREXYNWCSg
iyFngOXIf3H8XjTgf/F7yQgPrabvy5xS+pPg+79US54d/FXN34dF+LJ3KLhL
sUnoTM/G93YRXmAbC7ekTwx14JuyWaQ9F982jXCdlsyPfF07wmdakpe3jrQX
4nf7CNeP8PmW3PsWPovUt0o17ytuXs6zx66eEW5Vy/xb1vIsifO/vp4H9ffM
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
9t7nq3lmwN772QgHuhfEfkzdJ8gfnP8hl1nHFnHd7aye0dX4UuglATtX8qwC
nfKpauofO5hvaXEk35Lm3amSZ4DgiJwu7v0iM07wbAFbMm8MTNOWPLyauvVr
1dTX0N3Q2W4spcyCv45yD1DcFydkf0CbJwWcSP+qqeO+UW19u4F5toq4IONX
NmR9WEJ8oc0a0gOackZ6sDSaVErZBx7o7HzH3nFELX12e6EnKNt5o4A7/Nzl
x9/laH/ztip2Pt6g5P3J5Wv5bWgt79vO1ia+Si3frx1WSxsf+bH58Y33MXmD
DxvlMPVQ3k3AXxA/oc7qqexlyQtv0+bLlp1vZ2zOMwf02tnabN80nOxvzibI
w7lDk/Jtvn23lGsDtFgo8JvKPrOa5aZaljtRjB22/OJeGTjRj0ftC75B06RV
kz5DFf2D+L2N4W3+vt3fTZab7m/oepe0naw9Ffyw4x4vjZaqZR3H1bLcLZYt
7uaRj7MLfnN+wfuHvCUIvaH1DH/39zfjebM40N9Fa1nn5UGHZtdKvp9SzXOI
GRGeVM294tvVvJcGbTgX6u85B2c+3BmbWMpzDO6cwbvwRXFvn3xz3PPd7n4Y
mYruwHnJPOfY0dbHfm6gdVDvYOcS9Q5zzk0p5fk6OhN63GnVPFP8rppn7fuY
VrwhAo1ZY5nnzJvhzmPm8KnVPI/5pppr51LKA9bSpZUlrO3LKDNYK7iXVbyp
Rli8qUbInTDO0rD//jfC0drbu9Ty7I0zoS+ruf5trU7M20rov8tX0ucefOFZ
zvY4x/q4mnZe7AAfVPMdJ/IuV8n1fzllLXrAsspgdJ3txRXdp4Px/p6TfVZN
OzK2kTnV1Dk6mo/3oNC7V1L/Zj+yj3HCvSvpC8z+qptrIPo4Ojt+wewJ2Tvi
07arcXwvdjO+pOmUx8cCvRZ9Fn+IPY0v6zfKrGibe0mjPQP2QG5W077wZjXv
KcKbxdsPhJwJ76C8hnd6l9JOgSxewfr2lI57uFbtWEr+oMzJ1bQlvVtNH2f6
yr55MUP2oKdX8+z8h2recR9jG31Lab8g3k++Jj7EsUU2c47xjfrEsX6D1zl7
xlbyeLX1TS7GZAX5fU/XdfZF7J92sq/FGxgn2Ad0BXgFHsGfm719F/WIL027
1zqIt7VPXdUd/msbS2m7xW57qLocOh22be5JcCfiUv0kDtWn40L9Ii7R14G0
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
u+WX01bHGzXFu0SEvLfDe0Pgup72Psrtpo1wd8twn/5n7Z0n2c4u6mob2Cfe
e+AcBZry7gNnJMR5owIcie9in5a2jWXE71DbL940Wt96zxRH3gLiXj405lyC
u/6cW0Br7vfzjTj7ZmyUM9x/YrvEJoq94W7T2JveZ9rXpj/o3vVe09gnc8e7
uCfPHXvuzf/gN84/vrQdyjysznqRgN5avB1FWLwpRci7TpfZZ/p6qWNAHNsw
bx3tK07YcbHhXmI58p0q7Rib72wbHLF5PGSc/T12ZOzK2Amw52LrxUZwq/E5
phM/xzaZY9gaplv+d23YzI2zHAfw+0b8aI/7lvjWj6wmbUbYV+w9d0l37BF3
GscecYfxx+1b8U7ApQ2t9/4J2RN8LO53SPeLLTNU/5NlakkbeHRd6Q1/MBfx
r0ePQYfhnbZT1bmWd81jveupfxp+asX7brz3xr0u7shhZ+MOFve1sCccp65/
k7J5qvsG3r3Dl+YOy6OXo7P31scGX5tT1M1vMz+/welI731w/4O7tdwp2KCW
b+r95tp2u2XucN0+VVx3sT3etjveu3ir1fJ+zgT3FsVbe8S5G8Oeh70Ud2PG
KUO5u3KjaQNNp0x/6xinDjHJfKeJz6nqFzeZNty7z2urw7KvQJ/kTszx0ox7
QsONowOyB0APLN5Y5N3AYfoRrVjLO0B8K953PMHyL6iL8X4n4/mDujRvtvK+
J++SYoNGjiOnsUVhk8J2xRugvL3Fm1j45aO+4f8/AL+lwOeYWp6vUA7Zw31c
vnNXdxB9xDctwr7e5eFOz0HmXdO5xJrE+oMMQw4W75wRIi+RwcubVrwvBu8i
c5czbX/rWM05urL17mMdKytX1nYOHIsPNP4KtdwPsk/8WLrCj7eoT0yRj6HX
z+p/hMyF0+Svn/3Nfau/rKe795K4n/Rv7y5xh6n4bznozj0J3hfgbgR3EbiX
wj0F7jpDt+JeOHguIk//5XxgbNnPT5c/pjnHuMPKfV3uVpxoP26WD6ab7znH
nDdi/x+zps1Z
          "]], PolygonBox[CompressedData["
1:eJwtlXmUl2Mcxd+mMTO/3/NUpqkpJxxxFO1lz9ZqiUiOrTgYjaLMNGXfQolo
s1baVSoVJcshxMkR4UiStE3alAjJqGnhc899/7jnd+/zvO/vfZbvvd/GJeU9
y3KSJBkPcsHSkCSbM0kyNpsk1fDeMUn2whsVJEkv+GTGNqDXgS7owejO8JHg
MXhPxnblJ8mv6Kvh10W/uwd9PXwiz6yFrwEd0VP1PfgmcDF6ELoTfAQYAp8B
dsJ3gO7MT0dvg28B3dA3gu4FXuNN8AnMr4avAheiO4Ef4YWMvwHGg+/R7cAC
+O3ML+L9anRfeD/GWsArwMPwWxkbwnwVugT+FGMT4ONAgu4K1sPrMv4muAy9
FV0Pvgj8AKo4zy8YO425dtH8VFDKXCv05/Cm4Db0d2BfxmOttXb0v+gv0Weg
24Dl8FNAH+0F/JPxWNvoMc2VgvuDv6Fv9QMPwK/gmV/g9eFvgavQu9HF8MXg
EnQlugi+EAwEHdBdwSPwvqA5vAw8pPMDzeD9wYPwCtARPhw8Cv8J7Gd9K9Bn
8d/z0FmwAH00ei68AMxCZ9FFoH1NzlJnCG8IBqAXo4+BP5e+Ow/URo9Bz4XP
BgH9LHo6fCo4Ct0U5FDYS3Vm8PeZ38h6RqH36WzBGN0f6AX/O3gul9/BPN8C
nM77yxhrCT8Q7I0i0Bt+HGNTWN976OPhHzFWmfF/7ocvAZvQo9FV8OGqQe0F
zNLdBc8Vghvgr4NMuqda0XdSnHrgSvQI+GT4RJAT7UF5UTU4KdhT8pZq/pW0
Juumnusc7YHC1CMdoj0ir8gT8oY8KC+qBqag54D89Ezzoz0n76nGpwV7Ut5U
Tb2Kng/2st/G/D7O3IlgJeezhPmT4KPSu54BCqJrsH7q6cuja64ozZiL0D2i
s0Q1OjP1VL00My5l7k5wJGsP36G7ivaKalK1qTvSXfUA92ptwVlVB/wFXwEa
aD/yGHwo7zfhdyv/V57uQXtRDZTw+wKo5tmWvNOeuT+Ds6o2+AP+qdaXdYZ+
Al+u+1NeydPwz7Rf9M/oZfAPdYZZ14hq5ePgtaqGVEsvgoPwVoydy/c2Bn/7
AGMb4N+Ahuht6K/he4K9Vwv8Dl8ZXGvbmf8W/m6wlwN4G/4yOMxcG/T5/P9L
6EPo1ujz0EODz0Z7OKzzCF679ngQfm10tivzr4GXRmepMrMP/Jbo7FRG3wx/
IvgsdAaH4E8Gr017+A8+LHgvupMjqtXoLFgIng/OXGWvPCQvyePy+jTwDHoc
OML7bdEXRHtEXpkEng7OCGXFHDA6OEOUJfPB2OCaVG3OBCPRZ6O/yronqDe8
A7pkXeOq9bXBWaiMVlbfxfM10sxUduoOdBcaK2Ouf3RtqWYHwOtG702ZqGxU
D1Av0Dfug88Geannc3n2Ne05uAfViK451V4OvwPR5dFcGawsPjM6e5XZyu71
wbWjPZ3DXJ3ovWfS7FEGKYu6gbvhFczXDO7J6s3yjLyjsUHRmansVA3fA/8g
+F1lrLI2Rp+1Ml5ZXzP6LrQH7WVrcK2pxrfAdwXfnWpyJ/y34F6tO90NXxPc
a9RT1VvXBfdq9Rj1ms3BXpFHK+E7gmtbNb0dviq4N6rHqteuDu6N6qHqpXnR
tZSXnn2D6N6jnlQMz0TXhjJR2XhsdParRzVSdkT3GmXeyfDm0b1DPaiZsiQ6
C9UzToj2oLzYJM2e/wFZ11Jx
          "]]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV03e4jmUcwPH3FMneW3LsHISyGmRmhmPFOcfKaHCIM+xRyh7ZhcoeKVT2
qqxsKlQ2UVZG2pTP/cfn/f6u+32v53re+36e6C69YxOjIpFIjI9+GSOR4dzm
Fn0zRSKv09c8jJvcoI+13uE781B+5TqJ1nrRxzyEtXzOm+H3uj5cx/waPXmZ
V3mFoXSnBy/Rja4MoTNd6EAnOjKYeBJoRxztGURbXqQVbWjNQGJpSXMWupcW
+pk20wXaVOfrC/qpNtF52kg/1Ma6WhvqB/q8vq8NdJXW17laV+doPV2pdXS2
1tL3tLZ+os/pu1pTZ+nHvGFO1Gtc5QozqRH2Vi/zCz8zg2fDXuolLvIT03km
7LNe4DznmMbTYc/1LGc4zVSeCuegpzjJCapbqxbOyTyYH/mBqtaqhLMyD+J7
jlPZ2pPhHM0DOcZRnrBWKZypeQDf8S0VrVUI52zuzzcc4XFr5cNzYE5lDSsY
EZ4DXReuYy5LOR4jhjL0pxSlKU5JSpBKUYrxKNEUIYVHKEwBClGQZPKRn9zk
JQ9J5CQX2ZniXnLoR5pN39EsOlmz6nLNrJM0o07UTLpMM+gEfVjHa3pdqul0
nKbVsfqQLtE0OkYf0NH6oC7WKB2lEX1bF4X3OLw3ephDHOQt/qcTB9jPPkby
Hx3Zyx6+Du8t9+jAbnaxMzyj3CWBHWznq3A+/Es8X/IF2/iHv4kjha1s4S/+
pD3JbGYTf/A77UhiIxu4w2/089/uA5yfoTc=
          "]]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.14637212643678166`, 
       0.43134474436762316`}}, {{-0.14637212643678166`, 
       0.43134474436762316`}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.2695761494252874, 
       0.6117834312509736}}, {{-0.22733477011494252`, 
       0.010321141639805631`}}}]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], PointBox[CompressedData["
1:eJw9k3tMk1cYxrtxCaCrDFizCDKcjHXDoW6uWkx8YBAhEVlpnDLHiFY7YSAw
54yruBU10CwDu81FYxcsmBEGNooEcBT8Cr3FrNBCK9DSllasvQADx1VW4/hc
+N7k5OT3xznnfd7nORt5pVz+yzQaLWVlkTtTveYYt6uXSHj1ij9BMoq1h879
IX3QQ7QflDkjP7MhV/Mam5/XTfHtNMKcPNdBeGhB4+yj0wjpKRCE/3iHSFTz
1PYqG4SzjLTk0gqoXA1FWTQvpCU32T5NPQSetqjld9yYOZe0ZszdDg2xltO4
4EW4t0st7u9Ap/VUdWjcNOL27xV+1HYX1T3Z7MXlMdwuinxLzurGyT+96yNT
/sZM6tZrsYEEvvutwtbC8IK5uL335Mc9SJHPOiqDp5DJU5bHs3pxP/mViuFZ
Bw735ewYilEiv6RTEyiehnCn40lVgAq6fbufyc2TCC95W+84rcLk2aCowsOP
KSa2jdZfjnTjLv3ZFxMGNap+b5XPLTxESjpZGnwpPNDAr7HgjN8p1L6hA3dz
N4et8EF8vGzXt8F9yF1XzWo1WZH7tan6www93kzSMmSVXopX3/c0RhfVdOox
ONC4JXTeBFrYgwgpx4Dt/ZdvbCwYhhgxM0tKA1RRzSI604ybTWQN4Hm0UWpL
NUFF2vPTIBipBeYMj5FiU3nYYr3ShRfjDDTihI7bOXjUCcdKt/QzRvBOa7MF
gVqUtZMCjZQf/olPLES+CTUfuApCLC6KmV1LSkXhJPx5jHt6/hDEiidEdo6G
4q+EsRd+4IxD9PPnEqZ5CIfoW7vDEpUUZ+W8zwjP11Kc6SMsJ2Zc4Lz30ori
YSTkkQYpUHz1kqry6TB0F97NSgi7Q/H5PZWJN3YZoCDj1jAC65XMf/0b7kMU
EPv9TscI/H37u5cPtODiKTsv021Bkiooi2VXQjpWvGG5bxT9HZcqyoNVxNKt
g4XPBVZqXtIXDdjALL3Oavb9hYIJQ2k73Y6Q2Rh9XUwdsbmSvNAOUfz8kuis
FKu8en4u7vV9687bQTM8Va3flE50ycmyY0+tUkOLHkN8y5HdERIHFi7u+Kc5
xQHf3iDZPZMDAkle1aMmDazZtT1Tx5wYkW+ytLTJiFW++khXG+BtIuq9K4Gv
dWI+oq732hELgjt+OV4md1J6+8l4zzvRqOIiw3kLHvI7jT7EVFPotkTREOYk
sjTi08doTS/nb/lm4P98Gdww0Md5vxZfJ/4D1bkUNw==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[4], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxFlAtM01cUh4susgErjwlDEaaRaB0PpxgFmRwMrKCZDojjJWOAZQibiA4S
ZA4E+hqZuMS5EAkbDlQmWYUOLGN0p+VRVqBgC5QWLPTxF+RRygyCIIG1Ev67
yc3Nl5vc/O53zr27Ui5GpW6iUCh087SsieU0daP0OVKZB+0va7RQdqOdvcSd
w8RdyQEmhz4oHpH6NX02h9Qj6sKERBHJZ2QxFXadWvCsTw5yKjdhbM6wG1f5
F4gM9tYf5pvwQk9Us+KcDn76Znvyn3tNGDp5m1nJbAM/3j/7DDZmPjzv+Ggz
AW/S+4uTGmYxnvqB0MarDd4NOXrxgOcszjjEuFBKGsE4HCrlyYzYvfXrVL8p
Hbwaqm0oOGbEu5z8vw/VDEK71Q3YkTWN2unSN+Lab0H/6ov3jWNTmJu2GFnK
qwY7RlRL8L0pHNhfn349tAPMae47ukxhcBHtxKqLHgQ307IClybRqyOlY5Sj
AckPvWft0ieRd8qjhCaXgv9ZTv4fL56hfobnwHUUk7w601vstp0AeuxsOjP1
GXr8tpYhEA9B9KfmMTiBPJNzRHWhGioEroorthPI6j41VEbRg3JHzjmZfBzX
3PorNccHoLl+vMZt+inWBToxHGO0oDJfT9hFYDZ94VKcoBd4Iag+mk1gkdaf
3hsgRqbFvzuBYSvdFFZGH+yk5q7oKASWpkyyuqyU0BK8p8OWMGDQkKSQES4H
X9uxCX6WAZWs7JcinRLOZwVe2XLEgAltsWsZ4lEIshRAq0f2cuR8PE0BdQqz
wAt6zP6Oy6zJHABWxlsRNS56pLkW+PZV1ZHs7MRoYYkMkL6Wd2thvw6bGhvd
yh7ISP6ip0Tz+x0VydfFpwMWl8egijG05+SCFuPq9hazRxQkN5g03tIQPUxJ
bldlemtJ36/9Ph3DEp670Ml5AJ5zNnsU+I8h46CqtahKQDLxTmbRElsP3sbP
HypWR7E8/2Ptv50j4FAkn9/pOop2XwYJ+PF8DJ/wYWeParB624yP/byA5Fee
OR3Kih7wvvpLd+viE1yRnREuR9ev1+PkE3xb/ThMRX1M8s9d4fOJFfp1v3PD
mLvJejw5Gtf9CoYxKWYLp+o+Bzf4Gj13X21CMrnfVBgxfpxXC1srI3ysbIZJ
ny8PtV7+ZLeaPD/D4u+hCuW/VjuFyQj4qtTSMUrMK0/gEA8kwH09Bsl+3+CN
/BtcGUAZiRTySRZJvO96HXsEWnP6b30HkMY/cGL5jhzar3oe7gnrJ/Os6K51
vkftJ/+D7+9Zi8/nybGymqdqvmkAia3lgf3PxI+XPjq9TYZJ7mm+wbtZ8B81
BGoZ
       "]]}, {}}, {}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"TRerr=0.% TEerr=2.8% Marg=0.0551\"", FontSize -> 21, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{-1.1742456896551725`, 
   0.7442169540229884}, {-0.15644794775238186`, 0.9863304025088373}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6006106325864277`*^9, 3.600631791493237*^9, 
  3.601214172307225*^9, 3.601373330066465*^9, 3.601385635359026*^9, 
  3.601563388476163*^9, 3.601571808574512*^9, 3.60157267290895*^9, 
  3.601572789367627*^9, 3.602858166897682*^9, 3.60286018871034*^9, 
  3.607434037714691*^9, 3.637565075088029*^9, 3.637566148960614*^9, 
  3.637574082276575*^9, 3.637583618103953*^9, 3.637583710190401*^9, 
  3.6375856927336187`*^9, 3.637589011851235*^9, 3.6376602842619267`*^9},
 TextAlignment->Center,ExpressionUUID->"73e45ac0-9e93-484c-977f-b0772afad064"]
}, Open  ]],

Cell["\<\

As it can be seen, the decision surface, the margin and the training and \
testing error rates are exactly the same as the ones of the max-margin \
classifier introduced in the previous Section. However, the dual formulation \
used by SVMs allows to highlight the different role played by different \
training points: only the closest to the classification hyperplane become \
Support Vectors.
\
\>", "Text",
 CellChangeTimes->{{3.600677821135819*^9, 3.6006778968400593`*^9}, {
   3.600678723853957*^9, 3.600678731036479*^9}, {3.601385686619454*^9, 
   3.601385761512088*^9}, {3.60138586873499*^9, 3.601385998105983*^9}, {
   3.601386112492817*^9, 3.6013861486885233`*^9}, 3.6015586516546097`*^9, {
   3.602858233015098*^9, 3.602858233795185*^9}, {3.637579458246336*^9, 
   3.637579471458826*^9}},ExpressionUUID->"0a8c0117-e525-4c5a-bdf0-\
1b063ce2c396"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soft-margin SVM", "Subsubsection",
 CellChangeTimes->{{3.6005166146535053`*^9, 
  3.60051661822272*^9}},ExpressionUUID->"8488ab90-18c9-46b8-9aa9-\
e07ba1d655ab"],

Cell[TextData[{
 "A soft-margin Support Vector Machine can be obtained by constructing the \
dual problem of the objective function in eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:1norm_svm"],
 "). In order to do this we first have to write down its generalized \
Lagrangian"
}], "Text",
 CellChangeTimes->{{3.600516636306747*^9, 3.600516690310767*^9}, {
  3.600516741895606*^9, 3.600516782018572*^9}, {3.600585868042153*^9, 
  3.600585902895199*^9}},ExpressionUUID->"1fa60a76-7000-47d3-b82c-\
92edcc4faa76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["L",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["(",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["b",
      FontWeight->"Plain"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["\[Xi]",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], ",", 
     StyleBox["r",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}]}], 
  StyleBox["=",
   FontWeight->"Plain"], 
  RowBox[{
   RowBox[{
    FractionBox[
     StyleBox["1",
      FontWeight->"Plain"], "2"], 
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"]}], " ", "+", 
   RowBox[{"C", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Xi]", "i"]}]}], "+", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["\[Xi]", "i"], "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}]}], 
   "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["r", "i"], 
     RowBox[{
      SubscriptBox["\[Xi]", "i"], "."}]}]}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6005167837231417`*^9, 3.600516818754175*^9}, {
   3.600517018284396*^9, 3.600517037891486*^9}, {3.6005170907660093`*^9, 
   3.6005170979284353`*^9}, 3.6005173739926243`*^9},
 CellTags->
  "eq:soft_margin_svm_L",ExpressionUUID->"3df713f7-d94c-4d16-8fad-\
09da2f988b2f"],

Cell["\<\
We can then apply again Theorem 3 to obtain the KKT optimality conditions:\
\>", "Text",
 CellChangeTimes->{{3.600517085607532*^9, 3.600517125031438*^9}, {
  3.600585907463999*^9, 
  3.600585918802475*^9}},ExpressionUUID->"58b60a46-5de4-438b-a7ec-\
320f701bbdaa"],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], ",", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["w",
     FontWeight->"Bold"]}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], ",", 
      StyleBox["r",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", "b"}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["\[Xi]",
     FontWeight->"Bold"]}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          StyleBox["w",
           FontWeight->"Bold"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}], "=", 
   "0"}], ",", "       ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", "i"], 
    SubscriptBox["\[Xi]", "i"]}], "=", "0"}], ",", 
  "                                               ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "i"], "\[GreaterEqual]", "0"}], ",", 
  "                                                    ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "i"], "\[GreaterEqual]", "0"}], ",", 
  "                                                    ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]}], "DisplayFormula",
 CellChangeTimes->{{3.600156554617927*^9, 3.6001565591323*^9}, {
   3.600156717264855*^9, 3.600156812411139*^9}, 3.600156864861678*^9, {
   3.600156910962696*^9, 3.6001569205414753`*^9}, {3.600157072728825*^9, 
   3.6001571011797667`*^9}, {3.600158546688363*^9, 3.600158553918486*^9}, 
   3.600513870738564*^9, {3.600517164523419*^9, 3.600517175284357*^9}, {
   3.600517215065008*^9, 3.6005172181227922`*^9}, {3.6005172610847588`*^9, 
   3.600517261443778*^9}, {3.6005189404219*^9, 
   3.600518966809108*^9}},ExpressionUUID->"928043e3-7814-4bea-b3c0-\
43ed35cf1cb5"],

Cell["where the first three conditions expand to", "Text",
 CellChangeTimes->{{3.600157083887292*^9, 3.6001571066608353`*^9}, {
  3.600158558436887*^9, 3.6001585591646*^9}, {3.600172004709982*^9, 
  3.600172009771409*^9}, {3.600513867266624*^9, 3.600513867631464*^9}, {
  3.60051726785408*^9, 
  3.600517268955271*^9}},ExpressionUUID->"4270a8d1-5236-410a-aa59-\
4418f61dcfe9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["y", "i"], 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"]}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["y", "i"]}]}], "=", "0"}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"C", "-", 
    SubscriptBox["\[Alpha]", "i"]}], "=", 
   SubscriptBox["r", "i"]}], ","}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600157117284062*^9, 3.600157123893322*^9}, {
   3.600157245162938*^9, 3.60015732138794*^9}, {3.600157886285673*^9, 
   3.60015788974968*^9}, {3.60015856782475*^9, 3.600158618089786*^9}, {
   3.600158661435207*^9, 3.60015866767249*^9}, 3.600513864747818*^9, 
   3.60051392712012*^9, {3.600517274218824*^9, 3.6005172785205*^9}, {
   3.600517321977695*^9, 3.600517329588914*^9}, {3.600517734285067*^9, 
   3.600517735477496*^9}},
 CellTags->
  "eq:soft_margin_svm_w",ExpressionUUID->"a61aa2ce-25d4-4dc9-8077-\
2eda2a956a71"],

Cell[TextData[{
 "and we note also that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"C", "-", 
     SubscriptBox["\[Alpha]", "i"]}], "=", 
    SubscriptBox["r", "i"]}], TraditionalForm]],ExpressionUUID->
  "7b43136e-244e-49ca-bafe-58775ac6abcb"],
 ", together with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "i"], "\[GreaterEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"d7acdc2b-a677-447e-b224-f06d242b2a27"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], "\[GreaterEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"33e2a21b-af79-41ea-bc13-3368cd673664"],
 " gives us ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    SubscriptBox["\[Alpha]", "i"], "\[LessEqual]", "C"}], TraditionalForm]],
  ExpressionUUID->"6b06aca2-3ddb-40b6-8f33-5173e564afe0"],
 ".\nWe can thus plug eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:soft_margin_svm_w"],
 ") into eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:soft_margin_svm_L"],
 "), to obtain"
}], "Text",
 CellChangeTimes->{{3.6005139229439096`*^9, 3.6005139327340612`*^9}, {
   3.600513998355977*^9, 3.600514040753975*^9}, {3.600514214591071*^9, 
   3.6005142148630037`*^9}, 3.6005173662300177`*^9, {3.6005174084987383`*^9, 
   3.600517410639308*^9}, 3.600517493801063*^9, {3.6005176012168417`*^9, 
   3.600517656733819*^9}, {3.6005176983272676`*^9, 3.600517753274816*^9}, {
   3.600585950168448*^9, 
   3.600585971146927*^9}},ExpressionUUID->"01917583-6f95-4b01-8065-\
683e52c97244"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", 
   RowBox[{"(", 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"]}]}]}]}]}], "+", 
   RowBox[{"C", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Xi]", "i"]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["\[Xi]", "i"]}]}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "i"], 
      SubscriptBox["y", "j"], 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}]}]}]}], " ", "-", 
   RowBox[{"b", 
    UnderscriptBox[
     UnderscriptBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["y", "i"]}]}], "\[UnderBrace]"], "0"]}], "-", 
   RowBox[{"C", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Xi]", "i"]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["\[Xi]", "i"]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"]}], 
        ")"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Alpha]", "i"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["H", 
         RowBox[{"i", ",", "j"}]]}]}]}]}]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{
  3.6001735831201057`*^9, {3.6001754518709583`*^9, 3.600175487788825*^9}, {
   3.60051411622726*^9, 3.600514161953629*^9}, {3.6005175054397173`*^9, 
   3.6005175537125998`*^9}, {3.600517850817155*^9, 
   3.600517859816524*^9}},ExpressionUUID->"a41fe002-96c3-4da4-a68f-\
653d4a1a1530"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["y", "j"], "(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"7c3fd311-58bf-4747-9317-03b39e13ae5b"],
 ". As before, both ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8d7fcd8d-40ec-4b9e-981f-7afde0edd6b5"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "13700c55-1160-499d-948a-264e6f934dcd"],
 " have disappeared from the Lagrangian, but once we have solved for ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Alpha]",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "d5ff8f8c-1043-4724-a422-d0b8f118a8ed"],
 ", we can compute ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "491704a5-05a6-4a2b-8364-12fc77947c9a"],
 " using eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:soft_margin_svm_w"],
 "), while ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "8673374a-14ad-432d-9766-1cdf8b509961"],
 " can again be obtained by enforcing the KKT complementarity condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "015f200e-ed2e-43df-aa57-21b04439b412"],
 ".  Indeed if we expand this multiplication and multiply by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "i"], TraditionalForm]],ExpressionUUID->
  "7d8e0be4-78ed-4f8e-abc4-642489448c91"],
 " we obtain:"
}], "Text",
 CellChangeTimes->{{3.600518014507132*^9, 3.6005180517949467`*^9}, {
  3.600518111150139*^9, 3.600518210961157*^9}, {3.600518714069418*^9, 
  3.6005187146317987`*^9}, {3.600585987954084*^9, 3.600586028364172*^9}, {
  3.6006787835117826`*^9, 3.600678784047868*^9}, {3.6430871086626863`*^9, 
  3.643087109074937*^9}},ExpressionUUID->"147a4d45-5c0e-4d1a-a445-\
e59225abce10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["r", "i"]}], "-", 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    UnderscriptBox[
     UnderscriptBox[
      RowBox[{
       SubscriptBox["r", "i"], 
       SubscriptBox["\[Xi]", "i"]}], "\[UnderBrace]"], "0"]}], "-", 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["r", "i"], 
    SubscriptBox["y", "i"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], "=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", "0"}],
   TraditionalForm], ","}]}], "DisplayFormula",
 CellChangeTimes->{{3.600518224733889*^9, 3.6005183447924633`*^9}, {
  3.6005183855059032`*^9, 3.60051842792067*^9}, {3.600518462098566*^9, 
  3.600518480247355*^9}, {3.601568572081274*^9, 3.60156857359829*^9}, {
  3.601568628267521*^9, 
  3.601568628975306*^9}},ExpressionUUID->"a922654f-31fc-472f-bae3-\
b8f7aa884d44"],

Cell[TextData[{
 "which has the same solution: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"-", 
     FractionBox[
      StyleBox[
       RowBox[{
        RowBox[{
         OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
       FontWeight->"Bold"], 
      RowBox[{
       RowBox[{
        StyleBox["1",
         FontWeight->"Bold"], "\[Transpose]"}], 
       StyleBox["\[Alpha]",
        FontWeight->"Bold"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "324d66bd-9978-44f6-8243-b2ac97538893"],
 " as before.\nThe Lagrangian dual program for the soft-margin SVM is thus \
given by"
}], "Text",
 CellChangeTimes->{{3.6005184846577682`*^9, 3.600518599691503*^9}, 
   3.60051872505451*^9, {3.600678799014057*^9, 
   3.600678827809661*^9}},ExpressionUUID->"6b2674c0-4d6c-40e5-abfd-\
0e121667b916"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{"{", 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "}"}]], 
   StyleBox[
    RowBox[{"1", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], 
   StyleBox[
    RowBox[{"\[Alpha]", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["H\[Alpha]",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["s",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox["t",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], "0"}], "\[LessEqual]", 
  StyleBox["\[Alpha]",
   FontWeight->"Bold"], "\[LessEqual]", "C"}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "\[Transpose]"}], 
    StyleBox["y",
     FontWeight->"Bold"]}], "=", 
   StyleBox["0",
    FontWeight->"Bold"]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60017364117669*^9, 3.6001736928282843`*^9}, {
  3.6001737746175947`*^9, 3.60017385821412*^9}, {3.600175162048126*^9, 
  3.600175164631028*^9}, {3.6005186525864143`*^9, 3.600518665420229*^9}, {
  3.602858405929647*^9, 3.602858418096335*^9}},
 CellTags->
  "eq:soft_margin_svm_Dual",ExpressionUUID->"b6d64be6-34cd-4247-a16f-\
53720d7aca68"],

Cell[TextData[{
 "with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"-", 
     FractionBox[
      StyleBox[
       RowBox[{
        RowBox[{
         OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
       FontWeight->"Bold"], 
      RowBox[{
       RowBox[{
        StyleBox["1",
         FontWeight->"Bold"], "\[Transpose]"}], 
       StyleBox["\[Alpha]",
        FontWeight->"Bold"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "062c19f9-c473-4bfd-a9c3-80f929afe7b4"],
 ".\nThis dual optimization problem is identical to the one for hard-margin \
SVM, the only difference being the additional upper-bound constraint on ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Alpha]",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "7caf2abb-d3c3-46b8-acd4-231093c71321"],
 ". As we can see, reducing the value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "5b603f6b-c884-4bd3-aecd-b352a004aecc"],
 " has the effect of maxing-out the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "91f66981-cc78-4fe0-8e37-7a202d4ff7c0"],
 ", reducing the influence of the outliers (i.e. samples that due to noise \
lie in unexpected areas of the input space). Note also that with the choice ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "=", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "8e5d188c-19d2-4cda-9328-c91f6412cc70"],
 " we would obtain the same results as for the hard-margin SVM.\n\nAnother \
important observation is that the primal KKT condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "eb232815-acb5-40ab-84aa-7a1091127929"],
 ", implies that the only non-zero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "97e65547-027d-4240-b92b-bb223458af0d"],
 " can only be those for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "+", 
     SubscriptBox["\[Xi]", "i"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"e252a3f0-8be0-470d-8b30-5a659d7fc270"],
 ", while the points with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "+", 
     SubscriptBox["\[Xi]", "i"]}], ">", "1"}], TraditionalForm]],
  ExpressionUUID->"2cc6c80b-4b31-4742-a711-f2a241f36f57"],
 " will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"c62422d7-2f6a-451c-a363-1697f1a0ed74"],
 ".\nWhen ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "41d219fb-7489-41c6-814f-8fcffb53208f"],
 " is decreased from ",
 Cell[BoxData[
  FormBox["\[Infinity]", TraditionalForm]],ExpressionUUID->
  "ad9d7c52-dd53-4b11-871e-f0fef9300662"],
 " (as in the case of hard-margin SVM) to some other finite value, the \
minimization of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "addf2ba3-5642-46fb-a5d2-ef4c50e0f440"],
 " becomes relatively unimportant compared to the minimization of the squared \
norm of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "9cc417d9-f224-4914-b869-3b9d8da05fd4"],
 ", resulting in many samples being forced to have a large ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "e646e0ec-ce91-43da-9290-3901a9ff056a"],
 ". This means that by lowering the value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "0e107705-eceb-44d5-b92b-1dbcdfd1c5b8"],
 ", more and more samples will satisfy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "+", 
     SubscriptBox["\[Xi]", "i"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"f4825ec2-e753-4860-970c-2d86d514b18d"],
 " (a reduction of the norm of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "9af474ef-241b-49d8-baa6-feb2c2b41b14"],
 " forces the optimization algorithm to compensate for the reduction of the \
functional margin, with an increase of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "b53d74a5-a478-46e3-b4f5-f1c76bdf0dff"],
 "). In other words, lowering the value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "d595239e-6716-4826-9e04-14723a1f8a6c"],
 " will result in an increased number of Support Vectors.\n\nUsing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"], 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}]}]}], TraditionalForm]],ExpressionUUID->
  "ca5f4827-23fd-4a2b-b071-d49556486541"],
 ", the minimal geometric margin can be computed as"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005192988758183`*^9, 3.600519509045693*^9}, {
   3.600586060414323*^9, 3.6005861607995777`*^9}, {3.600587682571579*^9, 
   3.600587698788475*^9}, {3.6005880167961407`*^9, 3.6005881058564863`*^9}, {
   3.600588489445705*^9, 3.6005885150059023`*^9}, {3.600678839023799*^9, 
   3.6006788623943863`*^9}, {3.600679395142046*^9, 3.600679420592441*^9}, 
   3.601386162032139*^9, {3.6013867937536173`*^9, 3.601386810234634*^9}, {
   3.601386876966858*^9, 3.601387032900826*^9}, {3.601387128456703*^9, 
   3.601387390940136*^9}, {3.6013875024963818`*^9, 3.6013875079919662`*^9}, {
   3.601387630568596*^9, 3.6013876332279377`*^9}, {3.601387669120734*^9, 
   3.601387706090234*^9}, {3.601387757428145*^9, 3.601387929840722*^9}, {
   3.6013879633147306`*^9, 3.6013879641631603`*^9}, {3.601389814662716*^9, 
   3.601389816334907*^9}, {3.601390811041134*^9, 3.601390820891824*^9}, {
   3.601390916956274*^9, 3.601390968566141*^9}, 3.6013911649958563`*^9, {
   3.6015585186932077`*^9, 3.601558527174878*^9}, {3.601558558725401*^9, 
   3.601558605531126*^9}, {3.601623777993039*^9, 3.601623789258648*^9}, 
   3.6016238422875032`*^9, {3.6016240697312403`*^9, 3.601624070807952*^9}, {
   3.601624238015191*^9, 3.6016242450535603`*^9}, {3.602774151954455*^9, 
   3.602774156776572*^9}, {3.607434181731427*^9, 3.6074342053556147`*^9}, {
   3.6074343648118343`*^9, 3.607434365431916*^9}, {3.6074344644258537`*^9, 
   3.6074344679195747`*^9}, {3.6074345179825163`*^9, 
   3.607434602141087*^9}},ExpressionUUID->"c347b66d-bb4c-45b5-9255-\
1852b12a6d2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["g", "S"], 
   RowBox[{"(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   SubscriptBox["min", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ",", 
       SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
   SubscriptBox["y", "i"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}], "+", "b"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "i"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"]}]}]}]}], ")"}], 
    RowBox[{"-", 
     FractionBox["1", "2"]}]], 
   SubscriptBox["min", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ",", 
       SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
   SubscriptBox["y", "i"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"]}]}]}], "+", "b"}], ")"}], 
    "."}]}]}]}], "DisplayFormula",
 CellChangeTimes->{
  3.601623787274074*^9, {3.601624044969468*^9, 3.6016241505183573`*^9}, {
   3.601624253957592*^9, 
   3.601624306644099*^9}},ExpressionUUID->"64841ae1-01c9-428a-915a-\
3d900a5cedda"],

Cell["", "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005192988758183`*^9, 3.600519509045693*^9}, {
   3.600586060414323*^9, 3.6005861607995777`*^9}, {3.600587682571579*^9, 
   3.600587698788475*^9}, {3.6005880167961407`*^9, 3.6005881058564863`*^9}, {
   3.600588489445705*^9, 3.6005885150059023`*^9}, {3.600678839023799*^9, 
   3.6006788623943863`*^9}, {3.600679395142046*^9, 3.600679420592441*^9}, 
   3.601386162032139*^9, {3.6013867937536173`*^9, 3.601386810234634*^9}, {
   3.601386876966858*^9, 3.601387032900826*^9}, {3.601387128456703*^9, 
   3.601387390940136*^9}, {3.6013875024963818`*^9, 3.6013875079919662`*^9}, {
   3.601387630568596*^9, 3.6013876332279377`*^9}, {3.601387669120734*^9, 
   3.601387706090234*^9}, {3.601387757428145*^9, 3.601387929840722*^9}, {
   3.6013879633147306`*^9, 3.6013879641631603`*^9}, {3.601389814662716*^9, 
   3.601389816334907*^9}, {3.601390811041134*^9, 3.601390820891824*^9}, {
   3.601390916956274*^9, 3.601390968566141*^9}, 3.6013911649958563`*^9, {
   3.6015585186932077`*^9, 3.601558527174878*^9}, {3.601558558725401*^9, 
   3.601558605531126*^9}, {3.601623777993039*^9, 3.601623791360347*^9}, 
   3.607434623491053*^9},ExpressionUUID->"0e39787d-7ca5-42d1-8eb1-\
ef92416c69dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.6074346285535393`*^9, 
  3.6074346334192963`*^9}},ExpressionUUID->"0d092b1e-a812-48cb-8381-\
f6c61c98a9e7"],

Cell[TextData[{
 "We hereby give a code snap implementing this algorithm, using the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " QP solver where, as before, ",
 StyleBox["KTr", "Code"],
 " is expected to be the matrix of inner products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Ktr", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "j"]}]}], TraditionalForm]],ExpressionUUID->
  "19a56175-2493-48ed-bdc8-3b85737293be"],
 " computed using the training samples\n"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005192988758183`*^9, 3.600519509045693*^9}, {
   3.600586060414323*^9, 3.6005861607995777`*^9}, {3.600587682571579*^9, 
   3.600587698788475*^9}, {3.6005880167961407`*^9, 3.6005881058564863`*^9}, {
   3.600588489445705*^9, 3.6005885150059023`*^9}, {3.600678839023799*^9, 
   3.6006788623943863`*^9}, {3.600679395142046*^9, 3.600679420592441*^9}, 
   3.601386162032139*^9, {3.6013867937536173`*^9, 3.601386810234634*^9}, {
   3.601386876966858*^9, 3.601387032900826*^9}, {3.601387128456703*^9, 
   3.601387390940136*^9}, {3.6013875024963818`*^9, 3.6013875079919662`*^9}, {
   3.601387630568596*^9, 3.6013876332279377`*^9}, {3.601387669120734*^9, 
   3.601387706090234*^9}, {3.601387757428145*^9, 3.601387929840722*^9}, {
   3.6013879633147306`*^9, 3.6013879641631603`*^9}, {3.601389814662716*^9, 
   3.601389816334907*^9}, {3.601390811041134*^9, 3.601390820891824*^9}, {
   3.601390916956274*^9, 3.601390968566141*^9}, 3.6013911649958563`*^9, {
   3.6015585186932077`*^9, 3.601558527174878*^9}, {3.601558558725401*^9, 
   3.601558605531126*^9}, {3.601623777993039*^9, 3.601623791360347*^9}, 
   3.607434623491053*^9},ExpressionUUID->"45796a1c-6030-4bfd-8697-\
8fdcd1cedfea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"train1NormSoftMarginSVM", "[", 
    RowBox[{"KTr_", ",", "yTr_", ",", "regC_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nTr", ",", "d", ",", "H", ",", "f", ",", "a", ",", "alpha", ",", "b", 
       ",", "nrm", ",", "margin", ",", "sol", ",", "obj", ",", 
       "constraints"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "KTr", "]"}]}], ";", "\n", 
      RowBox[{"f", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"a", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"H", "=", 
       RowBox[{
        RowBox[{"yTr", ".", 
         RowBox[{"Transpose", "[", "yTr", "]"}]}], " ", "KTr"}]}], ";", "\n", 
      RowBox[{"constraints", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"alpha", ".", "yTr"}], "]"}], "==", "0"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", ">=", "0"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"And", "@@", "alpha"}], ")"}]}], ")"}], " ", "&&", " ", 
        "\n", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<=", "regC"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"And", "@@", "alpha"}], ")"}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"alpha", ".", "H", ".", "alpha"}]}], " ", "-", " ", 
        RowBox[{"f", ".", "alpha"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obj", ",", "constraints"}], "}"}], ",", "alpha", ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\n", 
         RowBox[{"AccuracyGoal", "->", "1"}], ",", " ", 
         RowBox[{"PrecisionGoal", "->", "1"}], ",", " ", 
         RowBox[{"MaxIterations", "->", "100"}], ",", " ", "\n", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}], 
         ",", " ", 
         RowBox[{"Gradient", ":>", " ", 
          RowBox[{
           RowBox[{"H", ".", "a"}], " ", "-", " ", "f"}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"(", 
        RowBox[{"alpha", "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"alpha", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "<", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "8"}], ")"}]}]}], "&"}], "/@", "alpha"}], ",", 
            "True"}], "]"}]}], "]"}], "]"}], "=", "0"}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Total", "[", "alpha", "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"alpha", " ", 
           RowBox[{"yTr", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}], ".", "H", ".", 
         "alpha"}]}]}], ";", "\n", 
      RowBox[{"nrm", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"Total", "[", "alpha", "]"}]}], ")"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"alpha", " ", 
        RowBox[{"yTr", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Min", "[", 
          RowBox[{"(", 
           RowBox[{"yTr", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"KTr", ".", "alpha"}], "+", "b"}], ")"}]}], ")"}], 
          "]"}], ")"}], "/", "nrm"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alpha", ",", "b"}], "}"}], ",", "margin"}], "}"}]}]}], "\n",
     "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{
  3.600587725325886*^9, {3.6005882122929983`*^9, 3.6005882133539057`*^9}, {
   3.600588457252429*^9, 3.600588465845796*^9}, {3.600604239380355*^9, 
   3.600604258229485*^9}, {3.6013862221202097`*^9, 3.60138626867194*^9}, {
   3.601573374294911*^9, 3.601573374464306*^9}, {3.601624324634869*^9, 
   3.6016243470122128`*^9}},ExpressionUUID->"9ca332be-b894-4089-97d4-\
fd7e2ce65792"],

Cell[TextData[{
 "\nAn example of usage is also provided where, as before, the Support \
Vectors are marked with thiker markers (squares and circles), whille ",
 StyleBox["linearKernel", "Code"],
 " is the function used to compute the inner products between the samples.\n"
}], "Text",
 CellChangeTimes->{{3.600588112937687*^9, 3.60058811849831*^9}, {
  3.600679475821672*^9, 3.600679492899036*^9}, {3.6013861641550417`*^9, 
  3.6013861804462967`*^9}},ExpressionUUID->"640fbb4f-5286-472f-89e0-\
14ea6f33b6a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"1381895e-634b-4d62-8f0c-39ddf8f627fe"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$771 = MousePosition["Graphics"]; 
     Private`p$771 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$771], 2], 
          Union[
           Partition[Private`pt$771, 2]]}, 1]]; 
     If[Private`s$771 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$771}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$771}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$771 = {}; 
     Private`s$771 = Private`s$771 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6005481748004313`*^9, {3.600548527014482*^9, 3.600548535300232*^9}, 
   3.60054881372934*^9, {3.600548863497181*^9, 3.6005488860857277`*^9}, 
   3.6005493036961613`*^9, {3.6005493502402*^9, 3.6005493713830833`*^9}, 
   3.600549479168809*^9, {3.6005495192934027`*^9, 3.6005495251830683`*^9}, 
   3.600550178410387*^9, 3.600587966493536*^9, 3.600588622107139*^9, 
   3.600599060660305*^9, 3.600599756925404*^9, 3.600599943665254*^9, 
   3.600600031844635*^9, 3.6006027823018436`*^9, 3.600603523507772*^9, 
   3.600603945706077*^9, 3.6006129989424667`*^9, 3.600613812248528*^9, 
   3.6006326443401413`*^9, 3.60067111736756*^9, 3.60067164227064*^9, 
   3.6006718037671747`*^9, 3.600672265537353*^9, 3.600672526081514*^9, 
   3.601206370436466*^9, 3.601209437237091*^9, 3.60121146727116*^9, {
   3.601212264723936*^9, 3.6012122908273897`*^9}, 3.601212668288314*^9, 
   3.601213356569628*^9, 3.601214040524703*^9, 3.601214608420601*^9, 
   3.601218004687706*^9, 3.6012862730919037`*^9, 3.601295890068576*^9, 
   3.601296909848271*^9, 3.6012971705533447`*^9, 3.601297662161875*^9, 
   3.6012988951245203`*^9, 3.601298947244832*^9, 3.601304693600175*^9, 
   3.601372885198304*^9, 3.601375277312167*^9, 3.601559771933028*^9, {
   3.60156216665177*^9, 3.601562166764254*^9}, 3.60156311216003*^9, 
   3.601571645190751*^9, 3.601572489481422*^9, 3.601626156335967*^9, 
   3.6028568557890673`*^9, 3.602859724672284*^9, 3.6074305179771147`*^9, 
   3.6074324484532547`*^9, 3.6375647251875*^9, 3.6375655259220457`*^9, 
   3.6375656547789993`*^9, 3.6375660422446527`*^9, 3.637573361150527*^9, 
   3.637581899618166*^9, 3.637582140942945*^9, 3.6375822015744867`*^9, 
   3.637583464295784*^9, 3.637585525938525*^9, 3.637588558709491*^9, 
   3.6376591853404627`*^9, 3.637659328478517*^9, 3.637659648438018*^9, 
   3.637671396317474*^9},
 TextAlignment->Center,ExpressionUUID->"bc955b61-7d49-4ccb-b726-1bcf182e5e27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train1NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", "linearKernel"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", "0.2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, 
   3.600544981696217*^9, {3.6005450379414673`*^9, 3.60054508839544*^9}, {
   3.600545360991832*^9, 3.600545434011033*^9}, {3.600545472664554*^9, 
   3.600545559374083*^9}, {3.600545609202199*^9, 3.600545627332015*^9}, {
   3.600546178439096*^9, 3.6005461830908833`*^9}, {3.600546303917809*^9, 
   3.600546306938239*^9}, {3.600546466692848*^9, 3.600546480429881*^9}, {
   3.600546575005353*^9, 3.600546829060685*^9}, {3.600546921254654*^9, 
   3.600546922412047*^9}, {3.600547983007058*^9, 3.600547984587983*^9}, 
   3.600548231401762*^9, {3.600548779230706*^9, 3.600548782614275*^9}, {
   3.600548824203184*^9, 3.600548851107295*^9}, {3.600548917877345*^9, 
   3.600548952429632*^9}, {3.6005489875330772`*^9, 3.600549078996273*^9}, {
   3.600549319947598*^9, 3.600549338716949*^9}, {3.600549397645832*^9, 
   3.6005494246282473`*^9}, {3.600549555078596*^9, 3.600549632309577*^9}, {
   3.600549854018811*^9, 3.6005498691945553`*^9}, {3.600549923290716*^9, 
   3.600549974175603*^9}, {3.600550191104844*^9, 3.600550274904955*^9}, {
   3.6005503261330643`*^9, 3.6005503339339247`*^9}, {3.600588222815317*^9, 
   3.600588256649695*^9}, {3.600588290721298*^9, 3.6005882920536127`*^9}, {
   3.600588658316814*^9, 3.600588734521865*^9}, {3.600588793185359*^9, 
   3.6005888716015673`*^9}, {3.600631456422151*^9, 3.600631462528254*^9}, 
   3.6006732675642233`*^9, {3.601217196322742*^9, 3.601217210173666*^9}, 
   3.6015634594631166`*^9},ExpressionUUID->"77154b63-0038-4a6d-8c1a-\
562ff66a21bd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.2}}, Typeset`size$$ = {
    288., {147., 147.590157177521}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True, $CellContext`c$98130$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$98130$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train1NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`linearKernel], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{339., {194., 203.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6006318422191973`*^9, 3.600673261291685*^9, 3.600673343449181*^9, 
   3.601214254651011*^9, 3.60121741903084*^9, {3.60156217734977*^9, 
   3.6015622005096703`*^9}, 3.601562274480063*^9, 3.601562323282482*^9, 
   3.601563399612978*^9, 3.601563460363524*^9, {3.601563612036623*^9, 
   3.601563625488894*^9}, 3.6028584609814587`*^9, 3.6028585071417828`*^9, 
   3.602860201154567*^9, 3.6074346521568537`*^9, 3.63756616309482*^9, 
   3.6375836272185097`*^9, 3.637589048050949*^9},
 TextAlignment->Center,ExpressionUUID->"ea021757-22b9-4048-a8fb-d85c22520ed1"]
}, Open  ]],

Cell[TextData[{
 "\nAs we can see, the behavoir of the algorithm is pretty much the same as \
the soft-margin classifier introduced in the previous section. Moreover, \
according to what have seen before, as we reduce the regularization parameter \
",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "614c0d58-7353-4bc2-b99d-37e5a3df9ed5"],
 ", the number of Support Vectors increases.\n"
}], "Text",
 CellChangeTimes->{
  3.601386276317622*^9, {3.6013912082698927`*^9, 3.6013913663932123`*^9}, 
   3.601558644935019*^9},ExpressionUUID->"bc05efe1-f78a-4d26-9f46-\
e9da9f4d1a13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2-Norm Soft-margin SVM", "Subsubsection",
 CellChangeTimes->{{3.600433955353394*^9, 3.600433963410952*^9}, {
  3.600510883688518*^9, 
  3.600510886226582*^9}},ExpressionUUID->"f2ffed6f-c9bf-4527-9079-\
194ef7078ea3"],

Cell[TextData[{
 "Another formulation for the Soft-margin SVM can be obtained considering the \
following modification of eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:1norm_svm"],
 ") in Section ",
 
 CounterBox["Section", "sec:max_margin"]
}], "Text",
 CellChangeTimes->{{3.600154875125265*^9, 3.6001549181816397`*^9}, 
   3.600155031827753*^9, {3.6001553088687277`*^9, 3.600155366668939*^9}, {
   3.600155430120121*^9, 3.600155445536603*^9}, {3.6001554825240726`*^9, 
   3.600155496361331*^9}, {3.600155582648361*^9, 3.6001555947194567`*^9}, {
   3.600414871766923*^9, 3.600414873146832*^9}, {3.600429222572053*^9, 
   3.600429391214848*^9}, {3.6004296738987913`*^9, 3.600429711036256*^9}, {
   3.600429775116506*^9, 3.6004297773881207`*^9}, {3.600429838787216*^9, 
   3.600429851892276*^9}, {3.600518748509136*^9, 
   3.600518796228572*^9}},ExpressionUUID->"808f3bf3-252a-46c2-9bcd-\
52808999a6c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["min", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b", ",", 
     StyleBox["\[Xi]",
      FontWeight->"Bold"]}]], " ", 
   FractionBox["1", "2"], 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], "\[CenterDot]", 
    StyleBox["w",
     FontWeight->"Bold"]}]}], " ", "+", 
  RowBox[{
   FractionBox["C", "2"], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SuperscriptBox[
     SubscriptBox["\[Xi]", "i"], "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", "1"}], "-", 
    SubscriptBox["\[Xi]", "i"], "-", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], "\[LessEqual]", 
   "0"}], ",", "   ", 
  RowBox[{"\[ForAll]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], 
       RowBox[{"i", ","}]], 
      SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]}], 
  ","}]}], "DisplayFormula",
 CellChangeTimes->{{3.60000667883209*^9, 3.6000067752439413`*^9}, {
   3.6000070814275303`*^9, 3.600007111840486*^9}, {3.600007427356236*^9, 
   3.600007427719923*^9}, {3.600069619878358*^9, 3.6000696976499662`*^9}, {
   3.6000698340070744`*^9, 3.600069843688924*^9}, {3.6000703147873783`*^9, 
   3.600070318851357*^9}, 3.600070748774111*^9, {3.600155604909068*^9, 
   3.6001556221657333`*^9}, {3.600157793512041*^9, 
   3.6001577978772*^9}},ExpressionUUID->"75ce06db-b506-404a-bbcd-\
0d24b9e170ca"],

Cell[TextData[{
 "where, for simplicity we have divided the objective function by two, and \
squared the slack variables, thus removing the necessity for the positivity \
constraints on the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "3f124bb3-d36d-4c0c-afe7-f742039dbdcb"],
 ". Due to the squaring of the slack variables, this is called the ",
 StyleBox["2-Norm",
  FontSlant->"Italic"],
 " SVM. \nThe generalized Lagrangian of this optimization problem is given by"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.6001562618603697`*^9}, {3.600157440600864*^9, 3.6001574459197187`*^9}, {
   3.6001578050061626`*^9, 3.60015784252039*^9}, {3.600414886880303*^9, 
   3.6004149465339603`*^9}, {3.600415011024856*^9, 3.6004150335388803`*^9}, {
   3.600429698647847*^9, 3.6004296999379463`*^9}, {3.600430410845685*^9, 
   3.600430426304928*^9}, {3.600433937591069*^9, 3.6004339786213217`*^9}, {
   3.60043403077953*^9, 3.600434038823875*^9}, {3.600519030390934*^9, 
   3.600519034895832*^9}},ExpressionUUID->"e44cd86f-45a2-488c-b0a7-\
db8e288b6e68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["L",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["(",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["b",
      FontWeight->"Plain"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["\[Xi]",
      FontWeight->"Bold"], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"]}], 
    StyleBox[")",
     FontWeight->"Plain"]}]}], 
  StyleBox["=",
   FontWeight->"Plain"], 
  RowBox[{
   RowBox[{
    FractionBox[
     StyleBox["1",
      FontWeight->"Plain"], "2"], 
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"]}], " ", "+", 
   RowBox[{
    FractionBox["C", "2"], " ", 
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"]}], "+", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["\[Xi]", "i"], "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
      ")"}]}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.600156300029234*^9, 3.600156368405653*^9}, {
  3.600156621150298*^9, 3.600156661862521*^9}, {3.600157874303254*^9, 
  3.600157878691687*^9}, {3.600157924287451*^9, 
  3.600158010418242*^9}},ExpressionUUID->"80e8d441-8317-4417-8401-\
69886be8f597"],

Cell["and the KKT optimality conditions are given by", "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.600158028451982*^9, 3.600158032400323*^9}, {
   3.6001719912549667`*^9, 3.60017199222255*^9}, {3.600414981688201*^9, 
   3.6004149850697002`*^9}, {3.60042990556689*^9, 
   3.6004299270897017`*^9}},ExpressionUUID->"c47c28fb-9e01-4466-a698-\
7d4f91bd8602"],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["w",
     FontWeight->"Bold"]}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", "b"}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Xi]",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["\[Xi]",
     FontWeight->"Bold"]}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          StyleBox["w",
           FontWeight->"Bold"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"0", "          ", "i"}], "=", "1"}]}], ",", "\[Ellipsis]", ",", 
  "n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "i"], "\[GreaterEqual]", "0"}], ",", 
  "                                                    ", 
  RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]}], "DisplayFormula",
 CellChangeTimes->{{3.600156554617927*^9, 3.6001565591323*^9}, {
   3.600156717264855*^9, 3.600156812411139*^9}, 3.600156864861678*^9, {
   3.600156910962696*^9, 3.6001569205414753`*^9}, {3.600157072728825*^9, 
   3.6001571011797667`*^9}, {3.600158546688363*^9, 3.600158553918486*^9}, {
   3.600518978995328*^9, 
   3.600518991933605*^9}},ExpressionUUID->"5050cc50-21aa-4630-9b19-\
8f19eb751143"],

Cell["where the first three conditions expand to", "Text",
 CellChangeTimes->{{3.600157083887292*^9, 3.6001571066608353`*^9}, {
  3.600158558436887*^9, 3.6001585591646*^9}, {3.600172004709982*^9, 
  3.600172009771409*^9}},ExpressionUUID->"275e262f-7a85-4553-b62f-\
b391ce8359b9"],

Cell[BoxData[{
 RowBox[{
  StyleBox["w",
   FontWeight->"Bold"], "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["y", "i"], 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    SubscriptBox["y", "i"]}]}], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["\[Xi]",
   FontWeight->"Bold"], "=", 
  FractionBox[
   StyleBox["\[Alpha]",
    FontWeight->"Bold"], "C"]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.600157117284062*^9, 3.600157123893322*^9}, {
  3.600157245162938*^9, 3.60015732138794*^9}, {3.600157886285673*^9, 
  3.60015788974968*^9}, {3.60015856782475*^9, 3.600158618089786*^9}, {
  3.600158661435207*^9, 3.60015866767249*^9}},
 CellTags->"eq:svm_w",ExpressionUUID->"a9b18c05-dc77-443d-9de6-688c1639565c"],

Cell[TextData[{
 "As before, since the optimization problem is convex and the constraints are \
affine functions, the KKT optimality conditions are also sufficient.\nThe \
Lagrangian dual problem is obtained by substituting the values of ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5f5f632f-7cde-4766-8858-34d1209d0493"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Xi]",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "60712c69-b612-4362-b594-71546e772c7d"],
 " back into ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]],ExpressionUUID->
  "66bf4dcd-e609-4aa3-aa29-f1dc4db0b13b"]
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, 3.6001735723352222`*^9, {3.600430737886001*^9, 
   3.6004307396736*^9}, {3.6004308706986723`*^9, 3.600430873384021*^9}, {
   3.6005190465958643`*^9, 3.600519057388266*^9}, {3.600678954252145*^9, 
   3.600678958763721*^9}, 
   3.6074347480171423`*^9},ExpressionUUID->"ef89c1ce-1fd1-441f-8b7a-\
754583a8fa10"],

Cell[BoxData[{
 RowBox[{"L", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"]}]}]}]}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "C"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["\[Delta]", 
        RowBox[{"i", ",", "j"}]]}]}]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "C"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["\[Delta]", 
        RowBox[{"i", ",", "j"}]]}]}]}]}], " ", "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "i"], 
      SubscriptBox["y", "j"], 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}]}]}]}], " ", "-", 
   RowBox[{"b", 
    UnderscriptBox[
     UnderscriptBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["y", "i"]}]}], "\[UnderBrace]"], 
     "0"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "j"]}], "+", 
         RowBox[{
          FractionBox["1", "C"], 
          SubscriptBox["\[Delta]", 
           RowBox[{"i", ",", "j"}]]}]}], 
        ")"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[Alpha]", "i"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["H", 
         RowBox[{"i", ",", "j"}]]}]}]}]}]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{
  3.6001735831201057`*^9, {3.6001754518709583`*^9, 
   3.600175487788825*^9}},ExpressionUUID->"059a1460-6e72-4352-9be8-\
a2ec2243474f"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["y", "j"], "(", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"]}], "+", 
       RowBox[{
        FractionBox["1", "C"], 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"e3e4efde-5483-4995-bdfe-0d73b55cbc33"],
 ". As before, both ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "7067ccdd-e874-4250-9b4b-8d502b2ebe61"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "f6c945a5-4c45-4fa5-96e2-df262c52cb7b"],
 " have disappeared from the Lagrangian, but ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["w",
     FontWeight->"Bold"], "*"], TraditionalForm]],ExpressionUUID->
  "d8660ece-1940-4b9a-b5d9-1dff406c8b1c"],
 " can then be obtained using eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq:svm_w"],
 "),  while ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "68327b1d-0da3-4519-9cb1-a33988a0d7a1"],
 " can again be obtained by enforcing the KKT complementarity condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "f524941f-d1b5-4368-a351-c5d8246a59a7"],
 ".  Indeed, we note that by substituting ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "9fb342cb-0508-4c45-8456-31c7e96ea4fd"],
 " with",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     FractionBox["1", "c"], 
     SubscriptBox["\[Alpha]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "52f95819-571e-4a87-929f-4324872d556c"],
 ", multiplying the constraints ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "(", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"], "-", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], ")"}], "=", 
    "0"}], TraditionalForm]],ExpressionUUID->
  "38e29932-8068-43a8-8275-20311697e45e"],
 " by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]],ExpressionUUID->
  "a62a540d-a3a1-4569-9788-7d4eb93fc61c"],
 " and summing over all ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "3772c17d-6bf1-4ac2-8637-ccd20148e15c"],
 ", we can enforce the constraint by commputing"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600174027303218*^9, 3.6001741208317432`*^9}, {3.600174352033383*^9, 
   3.600174383955019*^9}, {3.600174491817814*^9, 3.600174537941121*^9}, {
   3.600175445275632*^9, 3.600175448682406*^9}, {3.600175506253343*^9, 
   3.600175508667962*^9}, {3.600175871676817*^9, 3.600175927236977*^9}, {
   3.600430909988146*^9, 3.6004309310256977`*^9}, {3.600519074233149*^9, 
   3.600519087924474*^9}, {3.600519135912731*^9, 3.600519219813518*^9}, 
   3.6028587952562847`*^9, {3.6074347855666656`*^9, 3.607434786508792*^9}, 
   3.643087119628641*^9},ExpressionUUID->"fec53507-49e5-4879-91b4-\
1a8af82c2e5f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubscriptBox["\[Alpha]", "i"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "i"], "-", 
      RowBox[{
       FractionBox["1", "c"], 
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"]}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"]}]}]}], "-", "b"}], ")"}]}]}], "=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["\[Alpha]", "i"]}]}], "=", 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"]}]}], "\[UnderBrace]"], "0"], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "i"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "c"], 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}], ")"}]}]}]}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "j"], 
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["\[Alpha]", "i"]}]], 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "n"], 
         RowBox[{
          SubscriptBox["\[Alpha]", "i"], 
          SubscriptBox["\[Alpha]", "j"], 
          SubscriptBox["y", "j"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              StyleBox["x",
               FontWeight->"Bold"], "j"], "\[CenterDot]", 
             SubscriptBox[
              StyleBox["x",
               FontWeight->"Bold"], "i"]}], "+", 
            RowBox[{
             FractionBox["1", "c"], 
             SubscriptBox["\[Delta]", 
              RowBox[{"i", ",", "j"}]]}]}], ")"}]}]}]}]}], ")"}]}], " ", "=", 
    " ", "\[IndentingNewLine]", 
    RowBox[{"=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold"], "\[Transpose]"}], 
         StyleBox["\[Alpha]",
          FontWeight->"Bold"]}]], 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "n"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "n"], 
           RowBox[{
            SubscriptBox["\[Alpha]", "i"], 
            SubscriptBox["y", "i"], 
            SubscriptBox["\[Alpha]", "j"], 
            SubscriptBox[
             StyleBox["H",
              FontWeight->"Bold"], 
             RowBox[{"i", ",", "j"}]]}]}]}]}], ")"}]}], "=", 
      RowBox[{"-", 
       FractionBox[
        StyleBox[
         RowBox[{
          RowBox[{
           OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
         FontWeight->"Bold"], 
        RowBox[{
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold"], "\[Transpose]"}], 
         StyleBox["\[Alpha]",
          FontWeight->"Bold"]}]]}]}]}]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{{3.600174127286213*^9, 3.600174151893757*^9}, {
  3.600174192850265*^9, 3.600174297068885*^9}, {3.6001743312244453`*^9, 
  3.6001743320502377`*^9}, {3.600174395426324*^9, 3.60017448222078*^9}, {
  3.600174609257825*^9, 3.600174620294325*^9}, {3.600174700488557*^9, 
  3.60017476750701*^9}, {3.6001748058235807`*^9, 3.600174817131991*^9}, {
  3.600174862424131*^9, 3.600175009763543*^9}, {3.600175081076378*^9, 
  3.6001750843648157`*^9}, {3.6001751300761957`*^9, 3.600175142796803*^9}, {
  3.600175178151023*^9, 3.600175202209634*^9}, {3.60017552263131*^9, 
  3.6001755621461077`*^9}, {3.600175619176784*^9, 3.6001757437281857`*^9}, {
  3.600435176945134*^9, 
  3.600435180026492*^9}},ExpressionUUID->"23314f87-4c40-4d6a-b873-\
6a382647602d"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Alpha]", "~"], "i"], "=", 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["y", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "a3b62137-7f9d-4e71-8e96-8a954be67671"],
 ".\nThe Lagrangian dual problem can thus be defined as"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600174027303218*^9, 3.6001741208317432`*^9}, {3.60017522567037*^9, 
   3.600175228536392*^9}, {3.600175718035424*^9, 3.6001757187181892`*^9}, {
   3.600175750944895*^9, 3.600175831350972*^9}, {3.6005143339971437`*^9, 
   3.600514339262733*^9}},ExpressionUUID->"527f5574-bf19-42e7-8b50-\
75338383d00f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{"{", 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "}"}]], 
   StyleBox[
    RowBox[{"1", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], 
   StyleBox[
    RowBox[{"\[Alpha]", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["H\[Alpha]",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["s",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox["t",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "\[GreaterEqual]", 
  StyleBox["0",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"\[Alpha]", "\[Transpose]"}], "y"}],
    FontWeight->"Bold"], 
   StyleBox["=",
    FontWeight->"Plain"], 
   StyleBox["0",
    FontWeight->"Bold"]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60017364117669*^9, 3.6001736928282843`*^9}, {
  3.6001737746175947`*^9, 3.60017385821412*^9}, {3.600175162048126*^9, 
  3.600175164631028*^9}, {3.602858809278606*^9, 3.602858817579302*^9}},
 CellTags->
  "eq:2norm_svm_Dual",ExpressionUUID->"f89fc744-0244-459f-8fdb-0154db8ebe6c"],

Cell[TextData[{
 "with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"-", 
     FractionBox[
      StyleBox[
       RowBox[{
        RowBox[{
         OverscriptBox["\[Alpha]", "~"], "\[Transpose]"}], "H\[Alpha]"}],
       FontWeight->"Bold"], 
      RowBox[{
       RowBox[{
        StyleBox["1",
         FontWeight->"Bold"], "\[Transpose]"}], 
       StyleBox["\[Alpha]",
        FontWeight->"Bold"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "46444929-0465-497e-896e-dd985bb58efa"],
 ". This optimization problem is once again very similar to the one for \
hard-margin SVM, the only difference being in the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["y", "j"], "(", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"]}], "+", 
       RowBox[{
        FractionBox["1", "C"], 
        SubscriptBox["\[Delta]", 
         RowBox[{"i", ",", "j"}]]}]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"43386d4a-3e67-4a6b-b1b4-37811d6d22b6"],
 ", which is in this case augmented with an identity matrix multiplied by ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "C"], TraditionalForm]],ExpressionUUID->
  "5a679fe0-74a3-465a-961d-aac65fae5a0a"],
 ".  This has the effect of adding  ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "C"], TraditionalForm]],ExpressionUUID->
  "26f86b1f-5d1a-48d1-9421-23b0a8e25359"],
 " to the eigenvalues of the matrix, rendering the problem better \
conditioned. Note that, similarly to the 1-norm soft margin SVM, setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "\[RightArrow]", "\[Infinity]"}], TraditionalForm]],
  ExpressionUUID->"15871c5d-0c7d-4714-9cce-5e73fbd00c10"],
 " would produce the same results as the hard margin SVM.\n\nAs stated before \
the minimal geometric margin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "S"], "(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}], TraditionalForm]],
  ExpressionUUID->"9f198ea7-9642-45e3-b97e-78a7e5ce8125"],
 " of the soft-margin classifiers cannot be computed simply as ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   TraditionalForm]],ExpressionUUID->"0645281e-66e0-4864-aa44-d3f2c5af7703"],
 ", since there is no guarantee anymore that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "\[GreaterEqual]", 
    " ", "1"}], TraditionalForm]],ExpressionUUID->
  "2921954f-a2ab-422b-8dc7-8e007a1d62ea"],
 ". Nonetheless, as before, for all the points for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "<", "1"}], 
   TraditionalForm]],ExpressionUUID->"5620c7cd-3cfb-4624-b8be-9db3b9940b98"],
 " we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Xi]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "1aa70ca9-8448-4ac8-9aea-cb8deff2507c"],
 ", while for the others we will have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "81a3c7d6-1c0a-431c-b853-86a8ef3a10f6"],
 ". Moreover, for the 2-norm soft margin SVM, by construction we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "=", 
    FractionBox[
     SubscriptBox["\[Alpha]", "i"], "C"]}], TraditionalForm]],ExpressionUUID->
  "8a721c12-5f63-4b96-ab75-72c3d0eae97b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"]}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"c57ec90d-817f-4640-8e5d-dac150f9bb9c"],
 ", so that the minimal geometric margin can be computed exactly using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["g", "S"], "(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[LeftDoubleBracketingBar]", 
       StyleBox["w",
        FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SubscriptBox["max", "i"], 
         SubscriptBox["\[Alpha]", "i"]}], "C"]}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"22517128-6229-4470-90e6-c1e2fa6f82ae"],
 ", where"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600519255984356*^9, 3.6005192706234426`*^9}, 
   3.600519336358122*^9, {3.600519522016282*^9, 3.600519563791518*^9}, {
   3.6005196079897547`*^9, 3.600519667647807*^9}, {3.600519698032007*^9, 
   3.600519739778841*^9}, {3.6005883622906*^9, 3.600588449297827*^9}, {
   3.6005889371326113`*^9, 3.600588965750765*^9}, {3.6005894612988358`*^9, 
   3.600589512926139*^9}, 3.600679002024119*^9, {3.600679541782709*^9, 
   3.600679542123994*^9}, {3.601217574370901*^9, 3.601217579243367*^9}, 
   3.601558780719802*^9, {3.60155881580094*^9, 3.601558835980789*^9}, {
   3.6016243808297043`*^9, 3.6016243821243896`*^9}, {3.601624474364224*^9, 
   3.601624502257472*^9}, {3.601624536150387*^9, 3.601624624211894*^9}, {
   3.601624658127282*^9, 3.6016246994802303`*^9}, {3.6016248856206512`*^9, 
   3.6016249224859123`*^9}, {3.601624977831212*^9, 3.6016249798796988`*^9}, {
   3.6016250182959948`*^9, 3.601625075849979*^9}, {3.601625342579255*^9, 
   3.601625346803771*^9}, 3.6016254649026546`*^9, {3.601625513196022*^9, 
   3.6016255147196074`*^9}, {3.601625738411982*^9, 3.601625740020549*^9}, {
   3.6016257793836813`*^9, 3.601625834335587*^9}, {3.6074348083739433`*^9, 
   3.6074348457036133`*^9}, 
   3.6375806050677643`*^9},ExpressionUUID->"f4dc373e-53cd-46c9-9982-\
00774803635e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[LeftDoubleBracketingBar]", 
   StyleBox["w",
    FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "i"], 
        SubscriptBox["y", "j"], 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "j"]}]}]}]}], ")"}], 
    FractionBox["1", "2"]], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "n"], 
        RowBox[{
         SubscriptBox["\[Alpha]", "j"], 
         SubscriptBox["y", "j"], 
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"], "\[CenterDot]", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "j"]}]}]}]}]}], ")"}], 
    FractionBox["1", "2"]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "i"], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["\[Xi]", "i"], "-", 
          RowBox[{
           SubscriptBox["y", "i"], "b"}]}], ")"}]}]}], ")"}], 
     FractionBox["1", "2"]], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        SubscriptBox["\[Alpha]", "i"]}], "-", 
       RowBox[{
        FractionBox["1", "c"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         SuperscriptBox[
          SubscriptBox["\[Alpha]", "i"], "2"]}]}]}], ")"}], 
     FractionBox["1", "2"]]}]}], ","}]}], "DisplayFormula",
 CellChangeTimes->{{3.601625083220161*^9, 3.6016250859167137`*^9}, {
   3.6016251764652*^9, 3.601625232068491*^9}, {3.601625540218547*^9, 
   3.601625569539563*^9}, 3.601625620222836*^9, {3.601625856881468*^9, 
   3.6016258594445*^9}},ExpressionUUID->"782d7529-3674-4e04-abba-\
f0716a3ed8a4"],

Cell[TextData[{
 "where again we have used the fact that for all the support vectors, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], "\[NotEqual]", "0"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Xi]", "i"], "\[NotEqual]", "0"}]}], TraditionalForm]],
  ExpressionUUID->"769e5cc7-37e6-4929-a451-2aa717e8e6ea"],
 "\[Rule]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Xi]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "528232c9-a74d-4185-b4a7-c8274e1364fe"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600519255984356*^9, 3.6005192706234426`*^9}, 
   3.600519336358122*^9, {3.600519522016282*^9, 3.600519563791518*^9}, {
   3.6005196079897547`*^9, 3.600519667647807*^9}, {3.600519698032007*^9, 
   3.600519739778841*^9}, {3.6005883622906*^9, 3.600588449297827*^9}, {
   3.6005889371326113`*^9, 3.600588965750765*^9}, {3.6005894612988358`*^9, 
   3.600589512926139*^9}, 3.600679002024119*^9, {3.600679541782709*^9, 
   3.600679542123994*^9}, {3.601217574370901*^9, 3.601217579243367*^9}, 
   3.601558780719802*^9, {3.60155881580094*^9, 3.601558835980789*^9}, {
   3.6016243808297043`*^9, 3.6016243821243896`*^9}, {3.601624474364224*^9, 
   3.601624502257472*^9}, {3.601624536150387*^9, 3.601624624211894*^9}, {
   3.601624658127282*^9, 3.6016246994802303`*^9}, {3.6016248856206512`*^9, 
   3.6016249224859123`*^9}, {3.601624977831212*^9, 3.6016249798796988`*^9}, {
   3.6016250182959948`*^9, 3.601625075849979*^9}, {3.601625579044509*^9, 
   3.601625582859509*^9}, {3.6016258611374617`*^9, 3.601625976382901*^9}, 
   3.607434872065981*^9},ExpressionUUID->"32d75d72-33d4-4a7d-9cc5-\
26b1b2025b01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.6074348777288303`*^9, 
  3.6074348844254503`*^9}},ExpressionUUID->"52e4329c-dcd5-4cbe-b571-\
7c73ee2e8d3b"],

Cell[TextData[{
 "Since the only difference w.r.t. the hard margin is in the addition of the \
diagonal component to the ",
 Cell[BoxData[
  FormBox[
   StyleBox["H",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "6e23b0ec-a602-4b66-8863-006fc0a63131"],
 " data matrix, we can reuse the code for the hard-margin SVM, with very \
little modifications, as shown by the following code snippet.\n"
}], "Text",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600519255984356*^9, 3.6005192706234426`*^9}, 
   3.600519336358122*^9, {3.600519522016282*^9, 3.600519563791518*^9}, {
   3.6005196079897547`*^9, 3.600519667647807*^9}, {3.600519698032007*^9, 
   3.600519739778841*^9}, {3.6005883622906*^9, 3.600588449297827*^9}, {
   3.6005889371326113`*^9, 3.600588965750765*^9}, {3.6005894612988358`*^9, 
   3.600589512926139*^9}, 3.600679002024119*^9, {3.600679541782709*^9, 
   3.600679542123994*^9}, {3.601217574370901*^9, 3.601217579243367*^9}, 
   3.601558780719802*^9, {3.60155881580094*^9, 3.601558835980789*^9}, {
   3.6016243808297043`*^9, 3.6016243821243896`*^9}, {3.601624474364224*^9, 
   3.601624502257472*^9}, {3.601624536150387*^9, 3.601624624211894*^9}, {
   3.601624658127282*^9, 3.6016246994802303`*^9}, {3.6016248856206512`*^9, 
   3.6016249224859123`*^9}, {3.601624977831212*^9, 3.6016249798796988`*^9}, {
   3.6016250182959948`*^9, 3.601625075849979*^9}, {3.601625579044509*^9, 
   3.601625582859509*^9}, {3.6016258611374617`*^9, 3.601625976382901*^9}, 
   3.607434872065981*^9},ExpressionUUID->"bffad7b4-7235-45f2-90f2-\
12abc5fa449a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"train2NormSoftMarginSVM", "[", 
    RowBox[{"KTr_", ",", "yTr_", ",", "regC_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"model", ",", "nrm", ",", "margin", ",", "nTr"}], "}"}], ",", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "nTr"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "KTr", "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}], "=", 
       RowBox[{"trainHardMarginSVM", "[", 
        RowBox[{
         RowBox[{"KTr", " ", "+", " ", 
          RowBox[{
           RowBox[{"1", "/", "regC"}], " ", 
           RowBox[{"IdentityMatrix", "[", "nTr", "]"}]}]}], ",", "yTr"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"nrm", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"margin", "^", 
           RowBox[{"(", 
            RowBox[{"-", "2"}], ")"}]}], " ", "-", " ", 
          RowBox[{
           RowBox[{"1", "/", "regC"}], " ", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"model", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}]}]}], ")"}], 
        "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}]}], ";", "\n", 
      RowBox[{"margin", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"yTr", " ", 
             RowBox[{"model", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/", "regC"}]}], ")"}],
         "/", "nrm"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{"model", ",", "margin"}], "}"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601217585543953*^9, 3.6012175967916117`*^9}, {
   3.6015733486260433`*^9, 3.601573349901339*^9}, 3.60157396561836*^9, {
   3.601574336286237*^9, 3.60157433996602*^9}, {3.601625599750942*^9, 
   3.601625601329462*^9}},ExpressionUUID->"90f18adb-b43d-4f1a-9dcc-\
4edbaad9ae5d"],

Cell["\<\

As usual, we report here an example of usage of the considered classifier.
\
\>", "Text",
 CellChangeTimes->{{3.601558789996739*^9, 3.601558793790901*^9}, {
  3.601558840426955*^9, 
  3.601558870594482*^9}},ExpressionUUID->"f97021b7-81a7-4af0-a5c7-\
4a0850cc3127"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601217265460456*^9, 3.601217274884696*^9}, {
  3.601217649958868*^9, 
  3.601217650244253*^9}},ExpressionUUID->"577a32ba-178b-475c-8220-\
ff28093b0a9d"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$797 = MousePosition["Graphics"]; 
     Private`p$797 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$797], 2], 
          Union[
           Partition[Private`pt$797, 2]]}, 1]]; 
     If[Private`s$797 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$797}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$797}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$797 = {}; 
     Private`s$797 = Private`s$797 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6005481748004313`*^9, {3.600548527014482*^9, 3.600548535300232*^9}, 
   3.60054881372934*^9, {3.600548863497181*^9, 3.6005488860857277`*^9}, 
   3.6005493036961613`*^9, {3.6005493502402*^9, 3.6005493713830833`*^9}, 
   3.600549479168809*^9, {3.6005495192934027`*^9, 3.6005495251830683`*^9}, 
   3.600550178410387*^9, 3.600589617150096*^9, 3.6006001989100113`*^9, 
   3.600600228965989*^9, 3.600600266088953*^9, 3.600600681760092*^9, 
   3.6006007941213007`*^9, {3.600600841457061*^9, 3.600600885139126*^9}, 
   3.6006013500386972`*^9, {3.600601383558695*^9, 3.6006013947936373`*^9}, 
   3.600601889657846*^9, 3.600602173557412*^9, 3.600602279086609*^9, {
   3.600602365064981*^9, 3.600602370242464*^9}, 3.60060278234803*^9, 
   3.600603523559029*^9, 3.600603945739794*^9, 3.6006091865576677`*^9, 
   3.600612999167354*^9, 3.6006138123158197`*^9, 3.600632644445119*^9, 
   3.600671117471401*^9, 3.600671642319047*^9, 3.6006718038665333`*^9, 
   3.6006722657928867`*^9, 3.600672526213133*^9, 3.601206370484069*^9, 
   3.601209437288204*^9, 3.601211467313223*^9, {3.601212264776905*^9, 
   3.601212290857061*^9}, 3.601212668321002*^9, 3.6012133566076183`*^9, 
   3.601214040568482*^9, 3.601214608470071*^9, 3.601217275255761*^9, {
   3.601217646676229*^9, 3.6012176510202503`*^9}, 3.6012180047532578`*^9, 
   3.60128627313862*^9, 3.601295890104985*^9, 3.601296909871706*^9, 
   3.6012971705877943`*^9, 3.601297662203429*^9, 3.60129889539428*^9, 
   3.601298947274419*^9, 3.6013046936347027`*^9, 3.601372885389017*^9, 
   3.6013752773626127`*^9, 3.6015597720353622`*^9, 3.601562166699974*^9, 
   3.601563112196547*^9, 3.601571645231084*^9, 3.6015724895165863`*^9, 
   3.601626156373807*^9, 3.6028568558258657`*^9, 3.602859724714912*^9, 
   3.607430518023924*^9, 3.6074324484962263`*^9, 3.6375647252164087`*^9, 
   3.6375655259622993`*^9, 3.637565654809787*^9, 3.637566042287871*^9, 
   3.637573361187119*^9, 3.637581899663452*^9, 3.637582140975326*^9, 
   3.63758220160777*^9, 3.6375834643307753`*^9, 3.637585526228755*^9, 
   3.637588558780424*^9, 3.637659185387072*^9, 3.637659328523855*^9, 
   3.6376596484876204`*^9, 3.637671396374318*^9},
 TextAlignment->Center,ExpressionUUID->"7ee68a4a-3177-4e5a-a9dd-074a0e21e8f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train2NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", "linearKernel"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, 
   3.600544981696217*^9, {3.6005450379414673`*^9, 3.60054508839544*^9}, {
   3.600545360991832*^9, 3.600545434011033*^9}, {3.600545472664554*^9, 
   3.600545559374083*^9}, {3.600545609202199*^9, 3.600545627332015*^9}, {
   3.600546178439096*^9, 3.6005461830908833`*^9}, {3.600546303917809*^9, 
   3.600546306938239*^9}, {3.600546466692848*^9, 3.600546480429881*^9}, {
   3.600546575005353*^9, 3.600546829060685*^9}, {3.600546921254654*^9, 
   3.600546922412047*^9}, {3.600547983007058*^9, 3.600547984587983*^9}, 
   3.600548231401762*^9, {3.600548779230706*^9, 3.600548782614275*^9}, {
   3.600548824203184*^9, 3.600548851107295*^9}, {3.600548917877345*^9, 
   3.600548952429632*^9}, {3.6005489875330772`*^9, 3.600549078996273*^9}, {
   3.600549319947598*^9, 3.600549338716949*^9}, {3.600549397645832*^9, 
   3.6005494246282473`*^9}, {3.600549555078596*^9, 3.600549632309577*^9}, {
   3.600549854018811*^9, 3.6005498691945553`*^9}, {3.600549923290716*^9, 
   3.600549974175603*^9}, {3.600550191104844*^9, 3.600550274904955*^9}, {
   3.6005503498927317`*^9, 3.6005503500576143`*^9}, {3.600588307237846*^9, 
   3.600588313868602*^9}, {3.6005889274131536`*^9, 3.600588931635717*^9}, {
   3.6005891095272827`*^9, 3.600589127253347*^9}, {3.600589674705143*^9, 
   3.600589752385747*^9}, {3.600589859798711*^9, 3.600589861823804*^9}, {
   3.600589919957633*^9, 3.600589961803607*^9}, {3.600600581791831*^9, 
   3.6006005872282553`*^9}, 3.6006006982191267`*^9, {3.600600957488339*^9, 
   3.6006009936816893`*^9}, {3.600601442677775*^9, 3.600601458020113*^9}, {
   3.600601917129445*^9, 3.600601917290449*^9}, {3.600602290255299*^9, 
   3.6006023161080647`*^9}, {3.600609493626485*^9, 3.600609592687899*^9}, {
   3.600609630505509*^9, 3.600609633516151*^9}, 3.60060971841512*^9, {
   3.600631593542777*^9, 3.600631605389091*^9}, {3.60121723787749*^9, 
   3.601217245142144*^9}, {3.6012172980760736`*^9, 3.60121730959201*^9}, {
   3.6012174024063387`*^9, 3.601217409105876*^9}, {3.60121753241619*^9, 
   3.6012175326047707`*^9}},ExpressionUUID->"b60b1ca5-1bbd-43cb-bad6-\
532ca8e784cb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.5}}, Typeset`size$$ = {
    400., {199., 204.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$160790$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$160790$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train2NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`linearKernel], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {248., 257.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.60121740986421*^9, 3.60121753326377*^9, 
  3.601298599640164*^9, 3.601558902793015*^9, 3.6015638865181103`*^9, 
  3.602858920663074*^9, 3.602860276956197*^9, 3.607434900961101*^9},
 TextAlignment->Center,ExpressionUUID->"aa74dcf3-4777-476e-bc7e-7d6cb3183739"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tKernel Support Vector Machines"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.5998959933365173`*^9, 3.5998959950405684`*^9}, {
  3.599899231509494*^9, 3.599899234925165*^9}, {3.60015516447847*^9, 
  3.6001551698116207`*^9}},
 CellTags->
  "sec:kernel_svm",ExpressionUUID->"33810f8a-a097-46ac-a305-18fd965ff113"],

Cell[CellGroupData[{

Cell["Kernel Methods", "Subsection",
 CellChangeTimes->{{3.600520519924685*^9, 
  3.6005205222261477`*^9}},ExpressionUUID->"5586615d-30e2-4835-b9e9-\
e12a4d37f9f3"],

Cell[TextData[{
 "Linear-threshold algorithms, like max-margin classifiers and the SVM \
algorithms introduced in the previous section can only learn linear \
separation functions. However it is often the case that data is not separable \
by a simple linear hyperplane. In such cases, a separating hyperplane could \
still be found by non-linearly pre-mapping the original vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], " ", "\[Element]", " ", "X"}], 
   TraditionalForm]],ExpressionUUID->"30ffd44e-b835-439a-aacf-c36f09c2d522"],
 " into a new space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CurlyPhi]", "(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], " ", ")"}], " ", "\[Element]", " ", "F"}], 
   TraditionalForm]],ExpressionUUID->"ffc4d999-2ec1-4e25-9f5f-26467cc19a6e"],
 " called the Feature Space, where the samples become linearly separable. A \
linear classifier can subsequently be trained in this space.\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, 
   3.6015589426723757`*^9, {3.60743491618672*^9, 
   3.6074349195937653`*^9}},ExpressionUUID->"0225ca4f-6b4b-410c-97a1-\
43865aa96c28"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Tp06YnIncuXKRdshQ4bofkUtBaQ7AOYClLwlwXXv9OnTe/bsKetuZHemAAAA
ZC7GMfRnz55FR0fPmTNHDO+k4Um608fIyMj/JSFyHS0FACYLPNstm4MHD9at
WzcoKEhL8lfEjQYAACtBdLgqyE+ePPnFF1+wwwxb3bds2cLfwtIOgCkj01HV
91SWXQPmDtXAT548qVKlyv79++kW484CAICVoMYTo62EdteSmobg4OCePXuS
aM+TJw9taV8SsDslLDwAmAUJCQmRkZHZnQuQYfTt23fixInqEdhSAADAGlBn
m2qGCGPU3K9evbpw4cKk299///2bN2+ydMc0KAAEXQdWDN0PHjyIiIjILkHF
LykbY0nj2dnZTZo0iQ/yljKGF9ks4AdMbhZVy5s2bQoJCVG/hRUFAKAld+F1
FQI1BHxc1lBGT18HldiYMWNq1Khx6NAhOZjqaKZptpvi9863+NixY1WrViXp
vnLlSk3JM3/7krsvKdX4My9JL5Z/TQl0k772SHXdV1s9XRtnmuUPzAt+nNTh
KiIuLq5169b8ymhKbZkF6OrtW7duvfXWW/T+fvTRR5cvX041MTBNXjSf6OnT
pxp8nwAABlJdtuPGjRtbt27lfdViAwkkkNC1sbHJmTNnqVKlDh48aEyglqcJ
tpuUPbqbnEmJM9O1a9eWLVtye5H2aVCUMu3zWOV5kyM6LfRKqL1LnYaXj4g/
DzIKft74iaUHjF4ZksotWrSQBFlsEZWu682bN3mKSt68ef/66y9NGRHI+lyB
V4KVOdVRUhPS/RK5jtFPAIAR1UrJAn7mzJkVKlQIDw9XJRlQuXLlSu7cuamt
pIbynXfeuXXrFhWjzjZiys2lahuUJj4+Pt7Pz09LUvJqFPeXtBpGe3tapLuW
sp2Ki4tLR1iM/0tGS80qhcVoQMaiPuq84+XlZWtrW6ZMmejoaH6hslhf8VtD
f+rv71+gQAGqjqhS8vDwkAFTXc6BqaE+NlyFbtq0KTIyknbEcqLOUQIAAM1Q
ISQkJNSsWTNXrlz37t2TgxDwRkaOHClxFKtUqaIWF2P6cQBIOUsO1ay+kgdL
cHBwTEyMnOHlz4msAyhbT0/PsWPH6pRGGrlx48b06dMfP36spSbUESIPZCCq
Xxk/xhMmTKDXv2DBgnv37s3ikIzq20r7jx49Yt1O7N69W3USwytg4nC9x9Kd
+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
5oUUiy7Mjm6QAqIdAJCpcE27Zs2akSNHosLJXtQ4e1rSrZk0aRJ7udva2n71
1Vd3797VTHURVZDh8ExkNdDf+vXr0/5zek4SEhJIsX/44Ycs2lN1Uzeim1sn
j6WXl1fBggV79OiRlpNYHlQgERER7dq1I92upRz5Ul9JsT+rXhNZULXSzf3l
l1+4m1+0aNELFy5oSk2ivWAsBqQRud30TgUHB2soTwBA1iJ1Dm/XrVs3evTo
F42Kqla1f516ozO8SMBbTTHfSYKXjNdLDjmNOplON3/KsnVsr169OKI7CXh7
e/uwsDD17qhFgW6XOaK+HVpKPaze6EWLFuXKlYveUzUuqOpbK2JbvqJffffd
d3Z2dp6enlpqSptTkt5LNQiG7oniNMOHD7exsZk+fbpmTc7MDJVGZGRkhw4d
du3aZVx3jCsoKkwfH581a9YMHDiwW7duEyZM2Lx587Vr1zilTAfI2FdV6uer
V6+WLl2apfvPP/+sqxkgMl8TLsnJkye7urqiMAEA2cvatWtV/3ZdpSRx4XQa
40UYp+eoC4Oy/TAtLZfRTKQb5beGYfqoqKgWLVqIw0yfPn3E51k3eK3Br9I8
Ufu2jPqC8Iszd+5cuvubNm3SDAFh1PCtqgKfMmVK7ty5HRwcxPOKnxmJWac+
LWqUSHUJHp3p+ObNm4UKFaLT7tixQ7MCKajrRtHLSOW5c+dONY3cjidPnlAv
u2jRonSnmjVrRqK9fPnytE/bX3/9NfO6Oc+TI//Ex8fXqlWLK4oGDRrwekBG
awlIN48ePaKOG8dst2x7EQDABGE9TFU6tfuLFi0yxpNRxUBYWJiWZgsbN2QS
VTIkJIROfvXqVWpWJI2q5F+UPdrevXuX5Ac1iHLcqHDSkiXzhe7Ow4cPq1ev
LkHdOWgwgxbZAlD9owQ+wi8pycVBgwblzJmTbr06LU7cj42DXCSwy5QpQ08L
KUbN8JyQkpf3iB4w6QmqaV5khKd3mU5bpUqV4OBgi3fA0On26Ojo9u3bS5+F
i4i39JJ+8803efLkocLp0aMHzwK4cePGxx9/TEfy588/fvz458qadxmFLqSP
i4tL7iRKly79999/Gx+MDPxrK4QaI7qPGupbAEAWkqozzNKlS52dndWGW9pi
at9XrFhRtWpVX19f/vblVm51HJ9aDZLrn3zySe/evUm9cwKREHTml0t3+jYi
ImL48OFfffWVMYTdv3raWBLXr1///PPPRbrT/dKSb4R6s6ykNCyJl3hB090k
Nfjjjz8WL16c73vevHkrVqw4duzYO3fuaCn716q7Ne0MGTKE0hcuXPjo0aPy
VMiba6wEeJVMVpUEfaReNslUNYfsI7d27Vqec/Hzzz9LVi1VxuiuKzY2tlev
XrLukpQMldX333/Pg2IFChQ4fPiw/ISqL3Zys7Oz++WXX7SMfkl14zKXL18u
UaIEPyoSP1YzmGJAOggICKhfv/6pU6fQ/QEAZAtqHb58+fIxY8aorbmqIhYt
WkQNwfnz59Nut+FG5Ny5c5UqVaKWS9YBUYfg0wJpexIbP/30U9myZffv368p
QQ+01OSH5SHXe/LkybfffpuXRMyfP/+qVau0JMEgybIzlyC9GKd/igfU8ePH
2Vrbtm3b7777Lk+ePA0bNuRlMel1kDmqOq9pOs+VK1eKFi1Kzwkl8/f31xTj
OXUASXm2a9eua9eu7du379SpE+3TyTt27Hj37t3AwMCBAwe2atWK/rFGjRq1
a9fevHmzltIpy8PDg6Spra0t5S0yMjLLCipb0L1W9Lr16NGDdLtOBu/cuVMm
oZQqVerJkycSdYe62NLdLlOmDA8dZuzbKjF/uK6g28dRZeieakq3LgP/0Qqh
Arx//z51WuXIv9qdAAAgY/m/5PXKid9++003/Ce6PTExccmSJdQQXLx4UUtD
/S9hxn18fKidcnBwYCufLoAhO+W+pN5T/WFiY2NHjhyZL18+ajE5b2JqlrOl
owTMAhm/ILZv3164cGFej6l48eJHjx5VU1r2IjiWjUz6EGf1GzduvP/++6S+
Jk2apCX5t9NNZ//2xo0bsw5cs2aNlnKaNu/MmDFDYhBxl1letKioKBcXF+r3
UQJ6qVltfvDBB66urvSWaUlrfpFcp4PFihWjl450Pv+QTfGUPV9f33fffZcz
oPP0tjyHGV11l5CQ0LlzZ/aT0ZLrHyrSRo0acYeatlWrVpXeNBWXp6en6PZc
uXL9+uuvXM4ZhVSGWrJVZM6cOZwT6kHIgp7g9ZGmLY3zswAAIPNYt27d5MmT
tdR0O7Fs2TLSijw+mMb44f7+/p988gm17+wEK9JdJ7DTUvtxmidPnrz33nsk
Vs+cOaMp9kMrqT+53OiqFy5cKDKgcuXKd+7coYOpzjQEZoH6Nsnz/PTpU9KH
dItJELKD2fz58+njli1bqHd2/vz5N998k15J2np7e2spZ7ZSgoYNG7Iri729
vdqbE/U+a9YsUZKUsnz58uIFR7Ro0YL6yO7u7lpqXu6PHj2iNzFv3rz08wED
BvB011QvxwLQ+fwnJib26NGDus/ipk4JAgMDqbioJLk8a9WqxW8r35Fr166R
iubbQVCfSMsEO4Na7CdPnixQoADnZ/HixRpmwWQo6qAzyhMAkGWoc06p/lm1
atXUqVO1F6xzvXz5cmoCzp07Jz/51zP/+OOP9JOxY8c+TxmFLO2eLTqnHdqZ
Nm0aN3xRUVFayvrTgvWqXJpE9aFyICXAltLq1asHBARo8F81W4yTQElpe3h4
sMGcF77kMS86smLFCv7V0KFD2cBL8l5OxS/CrVu32J+KtGK3bt00Q9BXIiYm
pnnz5vRzkt88lXLUqFGcDeog2NnZ0d9pKSdQyAxH6iTWqVOHVWi1atXoo8UH
1hCFRuXWqVMnNzc3TZnhu2vXLhLJIs6pcMRxRUtyOOfjnODDDz98/PhxBuZN
5saqsxuqVq3K4ymNGzemm2jxNygd6JoMowhXzSC6JgbzfAEAWUmq9r3t27eP
GDFCHebmqj4uLu7q1at9+vShVoAadF69RUvZTKjzTHln//79RYoUIdVx8OBB
3b+LMtEdV/sCxn6BRGwoVaoUNZEkXNVk1uBkqDYQ0dHRAwcOFKs7CTCeVKjO
CE51LT9gmujWYaR3sF69enRn6SXy8fHhx3v16tV0ZO7cufySHjp0iFQZScGC
BQuSUNeU9/rIkSN0kJ+N7t27v+hPz549y/KeDbMkKXfs2HHjxo1ChQpRp1u3
0r30Gfm333zzDXcrSpcuffPmTTmniB8L6D+q073lJaJXr2vXriTU1a7Q7Nmz
cyg0a9ZMU5aWuH79OpUw97IJKjFS8hmbT3WHt5MmTeK/K1y48Pnz53V9f8BI
hSnt0fPkAGu6gE7yFR9UlwwGAICsQde8UpPt7OzMRyQcManu77//vmTJktTu
5M2bl3TCBx98MHjwYNYJKmq9RxrSwcGBW6jHjx+L1UL0pLh80PbSpUtLlixx
cXHZsGGDn5+fJJPsiTWSjsfHx7Pn7WeffSYRdC1AIaQRFkVcbkFBQW3atGFH
dyqQ3r17qzE2jaEyraeULIDQ0FCO+/3WW2+J+8rKlSvpNVy+fDl/fPLkSeXK
lenu586de8uWLfJbekjoXWbrLn01bNiwF/0LPUijR4/m54eF5fvvv0/9YtLk
4eHhnOZF66va29uzDfmNN944c+aMRa5xr16O7EdFRbVt25YnyGvJLxqPAzJU
SbZs2VJT3kHqCnEfh8u5bNmygYGBGWtqMA5NXrt2jTp9nCVeJAs68yXIc65G
6eTCVE3ukl5aNPSDAABZhq4a37p1q5OTkxyn6mvx4sXFixcnuT5q1KhOnTqx
OORQhO+++66MFKvj+7y/b98+bqQaNWr0PHmVdi1lT4GqOx8fn549e1K7X6JE
ierVq9Mfkc7v1avXw4cP1ezpPDO7du3KjdGCBQvUBBamGVJFZkXxx4CAgCpV
qlBR5MuXj9TXjBkzNEOgv+dYKtFMkAEs2p49e5ajwZBup84s37s1a9aI2wzT
tGlTfhdmzZqlKW8KvcsyR/Ilup0ICwvjCZVsb6efFCpUiF5MLTlOkfSadSKW
pClb6Ummenl5qR1znYHaMpCLioiIoBKjS+bj/EpyR0nmC1AC/pYLgcpTvqUS
rlq1qpbRQ4S6s/Gz1LlzZ3pg6AZRLcFzk1EJqPC9U4e61EZHfeZVJxk2akGx
AwCyHtWqQHXUpk2bpk6dKrNHV69enTt37gIFCnDkhGnTplF7RA3Qo0ePPv30
Ux5+PXToEJ9BlDNXbiytSQaMGDHC2DzxoOScOXN4jP7rr78+d+4cNSsbNmx4
8803qZUpX768mLM0Q9THyZMns2Bo06aNVKGaxekEFVmFR20p+HoPHz78zjvv
5EiODs03S11MEy216aPzc+CXkd4+uqfUQeapHHS7eY4J9aYlWfv27VkN8swU
eQE3b94sun3cuHEv+l9OTO9a/vz5xYuDXq7du3fLI/Q8ZawS2aEuA8+woO72
gQMH1AQseCzpfVS9ZXjxYtLt6sRS6ltRf4fdluiu1a5dWy6fkrm5ucmgBm3H
jBmTGTlUO01cUWzbtk36Cxs3buSU1uBSmEaorO7du+eXxP379wMDA2nr6+t7
/fr10NBQLWlM88qVK3fu3Ll58yalvHv3rqaMLFtwBDMAgKmhM50xVMlPnDiR
vwoICPjoo4+otnd0dNSSWoH58+dTo3Px4kWq9v/44w9uCygNO2qK2uffkvBm
GTBv3jxdNAau9BYsWMBNGOHp6SmZGTx4MB8sVaoUR8kQY760m9u3b2crX4kS
JXjpGUtSCP+K0c5DqqlYsWIs3akz5eHhoSXdMlnaXkMTYybIk0zKmbQ0iT3q
lLHLCr0IHAacdDvH+qM3olevXvy+zJgxQ9VjbG//f+ydd1gUSfPHUSSJCCjm
iAHzyekpnuE1nDkHzAk5UQwYMeeMer4mDJhFRcw5HeYc7kwIZlAEBEVBQND3
fsf86tl6tp5mZkGUuLv1+WOfYWZ2dpjprv52dXU1+s9T0e2SqosHJWTQoEFw
JlZJqLmlSpXCaSxKQ0G/0qxZM/wJCwsLWhBNx0Z2yCEg/keJiYnwuMBqyWYm
9uvXz0A987RWrVqiUYJXRlNW8+XLhwmgMvw+qTdH29DFKFOmDHQA4Z126dIF
TYHOvJ30ExcX16dPH+hwmZub29jYwKsB+2lmZmZlZQXdHHhc69atg44z9Exh
P9SOjh07graXkvd9+HkyDJPFUPty+PDh+fPnSyqjhAv8QYv84MEDPAGaHtiD
+dsTEhI6d+6MgmHhwoVSco93QEAAmEE8imP6sgbuzp07pUuXxjYOlD+GymMa
Q4wEwENNmjRRupfhUufPnydfIkhWfRisxP9ducYH5d/buHEjJuUD4Nlev35d
Sp4vSNKz3o2WQs5tXDXJQDUv9erVq5Lgb4c+LxUDEJBYXzCpO73io0ePokqE
z6FDh6b0c3T+8OHDsUJRLIebm5ssmleUhcB//vMfPLlYsWLYfRb/iwx6HtmM
LEaI/hw5ciRNt/9XvYocVLrixYtTHUSBh2/T3d2dhjNk6X0y8D6V23ir9Joe
PnyYUb+oM7x9+3bUqFEG6tkHWGumTZuGR6GlgyYGTCt0oqEtw/XL/hVSGfO8
IYZhsh4yOwcOHMDpS1FRUbVr1zYyMrKzs4uLi8NWydvbGywb+cZ37NiBhq5S
pUq4/B8CNu3PP/+kAfe1a9cqR8yhFUOHORhJe3t7zE2NHD9+HA4ZGxsbqGK2
MX207Otnz55FxyCoi8WLF+uD2RSjLpVBQdh2zJ49G1fSAeCpYsZOfDjsbM/h
KL2vUAdxIgnUgqVLl+JO6J1BlQH9QK+1VatWUAsKFSr08uVLSR0sAVe7efOm
jY0N1sG+ffum8tPwFZCg0H3u3r079hQM1BNa4SKUVUNWB79+/VqnTh08uX79
+uIqQrKpfDqAbKIN/HfQzQFLKP6PqO3hTWEdhAcItosy8GBqINhZrVo1eFOZ
JPbEGGzaCAoKypcvHyrSJUuW6IO1TDtJ6oT8+IKw3YEH5erqSlVy5syZsBOq
HvXdxNqqS+WcYZicj6zd2blzJyZXvHDhAiaRa9GiBbXIGzZsgHbn2rVr2Chf
uXLF0tIS3RSY74K8UtB4USQnLQlN0vHZs2e4BCT6h5s3b06rQ8LnyZMn0e+H
fo9u3bpJQs8C20H0txsIuan1IWJT9j8qpwGinKBHV69ePexPYbSMPjwibQed
7VQrx4wZg3WhU6dOuBNqKM0+hhcKegN61nBC48aNpeRFIjY2FgoAVpPWrVun
8ovPnz8H0T5gwACoXFOmTKGRLMDBwQGuQ+NZonyNiYkBCYrVH/NMkttZx0Jl
CKplUKHgX7506RJ2omW+brCTpUqVMlAtmQrSHWzj1KlT0cVRt27dO3fuyC6Y
qWBMXdu2bfGFVq5cGZ0kYgy8xmQp+gY0eZSoEz5NTEzOnj0LT+nUqVMGqpnd
WlqeeTiAYXQJCpElc71t2zZcTn379u3oeQDBQEJi69atsOfcuXPYVH348KFm
zZoYtAkaXhKCMVA9ogHcuHEjHcJm7urVqwZCvugOHTqIhgV0Oy1QYqBaDDQo
KEhKHmlz+fJlnLJnoMpbrvOTUlNHnIIaHR3dpk0bsdeD3SVKcUYeOXEjm26c
SYYsaRK8OJB82MM1NzfHKnb69Gn4c+bMmXgOhq4ZGRlt2rRJSq7b4WpDhw7F
Wly9enX4U0wOIwlLMzRt2hR0O3bx4BO24YJYhKD+Qh8hScgHRd+9f/9+4cKF
sZrThEfdhp4A1Cbo5oAVwscim1MMPHz4cM6cOTVq1ChdujRYsKJFi0LXCd4R
Rll8VZFltw0Faf/+/fAq0aLSpGZCzy0AhSCiXx0XIMNRJGiqihQpAi2UaGMZ
hmGyHTJcoLGnT58uqQQ8eh569+5N3jYQ8yC2L126RJObKH0ciHnxgi4uLthG
wOeWLVvEbDAARtHQ2oKdO3eWhLYD9AkONOMNWFtbP3r0SDbyDuYUBQlcgVyR
+omYZAa3oZuD+e1RfY0cOTKlRkcm4ZjsRTYZQVIprrVr12IVq1evXmxsLI40
eXh4wNHAwEBM8A7CW6YDsUbcvHkTy4CdnR0mxxAnj2OFGjFiBNREX19f+t0z
Z85QtxqwsbG5ceMGXZbu7cCBAziHBXQ+9BYz/enkAOgFwWPs378/9qQkwQ8v
m8UTFhZ24cKFU6dO3b59W1yugs7JgiEwvKX4+PhatWqhwaxTpw4eks3311uv
LHkwwsPDy5Yta6CaOIxtE2h4qHfoOJLlQWUYhslGaLIVaOw5c+bAnzt37sQ4
liZNmlD7AkdhJ+h2ktBdu3ZFv+7169fR/uP+BQsWGKiBS4nT2SgXDcjy3CpA
eNNtgIAETQ7WEvajcrCysgLdjlNWEbgCdBNoQNPV1ZWHAqXkXvdbt27Z2trS
K1i+fDlOpKKEPDIPoT53fHIOouoTUwiCSgf5DR3V9u3bYy7WCRMmgCavW7cu
vNxGjRoFBwdTBRFziVDcVIECBSg8AxU+XP/169dwFCoaqJTLly/jF6EUQbfa
zMyMhmzgpxs2bBgQECDeKnx95cqVKO+XLVum2/0+pTtdo25HaBCT9ohzycXq
ljUPDYOx4RfRJqNRRTeLuJyWLGZbf6DBKVy8b//+/WKUJs6fkli0MwyTAxBl
NgEaG7NA+/r6okO7ePHitFoHHAVrBk08nY8rooJxe/r0Ke3EYVlKeoZpLiSh
dQPlT2EwqNtFJXn+/HlDFag5f/755/fv38ukJnod8fpr1qyR9Dt4m5oeSVit
++zZs6DH8CVC3wfeCJ5MzbQoDplsRxaLIpN/R48ebdeuXcGCBbFewGuFl2tj
Y+Ps7ExLqYLkpg4sdoEBf3//IkWKwFe8vb1F4fH333+D4IeCUaZMGajj0AWA
/jKcAD9kb28POh8uDord2toai9DYsWPFnKLQTZg8eTLsr1atGqaL1GGUuh0e
Qkq6XQSrmMwbD9+lmT5Z2d+JjY2Fd41W9/fff5cdZdcHApWoZ8+eWMtw+hXU
jlevXsnixLQFsvPaePMMw2hEHCGFz927dy9atAhak4cPH4K9MlJx8eJFrPvo
hL9w4YKkapLevn2LK3VWqlQpKipKHOV/8OCBmZkZRlR6eXklCQuCQOt///59
UAXobIevt2nTBo6Su/jEiRMGwoLgjo6Ool8I1SlG+WIbhImj9We9VBniGyQd
jnrg0KFDmEcCKFy4ML04+i6eRpkkmWxHo9uT1N1ff/01depUqDX169ffs2cP
CWZZHJQs/cvy5ctJquGZOKH13r17oOqhqgYGBkId//TpE3wlNDQUBDzsvHPn
DhyFTvrNmzfhKOyh6yckJMBPY7Kaffv26Xzh0ajbBw4ciMk5peRmh2qTGLmk
XDEtKy0VDbTNmDED47ehO4YDKMpJtVl2VzkH8b3A9vXr1ymJMea9Hz9+vJaO
S2L3n1KQMQyjAySpwT/37t27bNkydAd1794dtfHEiRPx6K5du2DPkSNH8Hw/
Pz8MRMeFmST1ItFgJcLCwnA+HQhvTCwpi6UcMGAAOTQaNGhAY/dwFPNA5lKB
fkLxhvE6IFrwKPzKq1evxH8nc59XjoT6ROihTRIWt1q3bh09yapVq+K0ODhN
FBX6+dByGqI4lL0R0l2SamUE0F04KCZ+kZbTldQ6hKaEfPjwoXXr1qD2r127
JiVX9eJIDUIhHHhZMT5NzD2yYsUKuODw4cP1ofDIotYl1RODfhAukSAlr0Fi
LI3G78quk4n3LdwGAn0xTC8PBmHMmDHiAI3s5vUHMfcRlnBo5rBhojFfUO/Q
dc3mG/0h2N/OMLqExlwi+/fvX7BgAW6fP38+X758YLuqVKny4sULqPiHDx8G
Hb57925JZeImTJgAbbeVlRUpeQKO4tKBlKeRfhTPBNuIMbRGRkZwfdD5ktps
7tixA6esGqiSkKPCpCTSyPz589Gouri4JCQk6LNRUnpok4RZwKC7MMIZ41qb
NWsmPmqEvTE5AZl4RkFFrwbfKXw+ffoUXiWmc6eXKL5B2Qga7oyIiKitIiYm
hn5FWWdxg2ZQkmgX1bukirGxsLDo3bs3dRZ0uwJq1O1geW7evCnup1FFsTbR
WCF1r0TPbdY8t3+F5ZWhu4G63draGk0BgqVLb+0APZ/bt2+bm5tPmjRp1KhR
OByMxrNhw4Z6MvmaYZgci7LJgD379u1bvHgxNS5z585FI+/s7Ax/wlH408fH
B8z7yZMnMV+Wm5sbfl308kmqRZpwtPHXX3/FBHQEnjlkyBC0ipaWlleuXKFZ
q2PHjsUfhetDT0ESjCplrmvcuLG4RqSkx/OqRIUmU+OSOiKiQ4cO5DtydHSM
ioqS1Ev+yQQek43IFuVExBgzSaXAQTN7eHiIGYTo65Lgfqf9GBsTHBzs4ODQ
s2fPt2/fSsm97uLvispNFhuAvYnAwMDq1atDKSIZo/OFRxknAxVn4MCBN27c
yPn/u+wVh4aGFipUCHvxmDpMXMct5/87GQ7+y1hHIiMj69atC91bqFzwoGAD
ve7QGMETmzlzplit9PBZMQyTvYgRMmSCQJkvWrRIUvvcQG/PmDEDY6RHjBgB
kh4s2Pbt2319fUFsg0Hr3r17Ktb+t99+gy+WLFkyNjZWOR8/JiYGV5dGMYl5
6k6fPl2wYEHYkzdvXkxJTd0B+iJcDZoenLIq+kCUAQYMPhCQas2aNaP0Mq6u
ruIJeutk0wrEIg2V6NOnTwUKFFi4cOEPXArXc2/VqhUupCt9K16Xfprkyp49
e6pUqQI2AW5DUqsdnV+KV2N8+6BBg27evKk8lMOBl4VrVYMQLVKkyLNnzyT9
ntQvqYsxvFNozszMzKh2eHt7Y8AMdnNsbGwePXokNmSyVasYhmEyG426HSVB
kmoCqaQyTUeOHOndu3eZMmUwnQUoanNzc3t7+wULFoCETkktgzU7e/ashYUF
fOXOnTt4Go7GwpXR4kVGRm7YsKFevXqYJrd9+/Z2dnbQTejQocPx48fJHuIw
Pf15+fJlXNjOx8dH0qQuGEnwvuJGSEgIJnDGmVY6n7tPx6BaBroLpAW8vu+9
AvV/oY77+fl98+2TGqdqBZV93bp1oGowwZSInkgXMWBm8ODB8CjE8KQcLt3J
wRIQEABdPwxEHD58OB6VzWXWK7CoT5o0CZ7JuHHjJGF+h4ODA+ZTwqjO1q1b
K+d9MAzDZCUy3b53794VK1bQUTLjnz9/Dg0NnTx5MgjmESNG3LhxAyT3Ny8O
Xx89ejSYuxkzZiQlX3oJTCUlwXj9+vWVK1dWrVq1ePHiTZs2QbNChyjYQxIG
CPr06QPK09nZWQw31c9B3tQRF3aBB37t2jWcLAzNk5WV1dGjR6XkC/Eg4kAM
k+3IpBS8r2LFis2fP/8HLkXrpcrSiafl1/ErtNAnzTdRhuXoMGLI0JAhQ7RC
t5OFJy0KDB06FBPLgIAHe6vPoh0U+LNnz5ycnGiBaWiP8FFAM1eqVClKOIwb
IOzxcUEVYNcHwzBZj1K345Q3SdNKE/v37wfbhTHnqU9mpC+Gh4f/+uuvtra2
GFUr5i6mX5F9F4QBCU4yjCTLHz16BG1N+fLlMW01Rfnqw/y47wW7P9hk4/M5
deoUqD50tRUqVAi6S/C0ZQ+NdXsOhJzt8Dlv3jw/P78fuIiYEx5nN3zzfNHP
r/Gu9ErsibrdxcUFdHvOj5PROIHl77//Lly4MM55GTFihKQ3PS8lnz9/Hjhw
YLVq1erVq9ewYUN7e/tRo0bB/o8fP/bs2bNWrVr169evU6dO3bp1GzduDEeh
OXv+/LmUQhIhhmGYzEap21euXCnKNnFuGhzNkyfPiRMnUglNIdWH7h3gzZs3
VapUadGiBeUehEM0U1X094q57OiQuD54bGxsq1atihYteu/ePUk9WMk2UyNJ
QjZISUgys3r1anIfVahQAZ+kzHHEjzTn8K8aqhrx8fE/cB0qCegzT7velmW3
loTxLzqk2wVGKc7BKA0aNIgCoaWc/QRkuYbw9Tk5OaERgP77w4cP8QQ9VO/w
cD59+vTlyxdokmAjJiYGPvE5REZGwv53796Bhgd5DxvQAMGnJGRjwzZOr3qv
DMNkL0rdvmrVKtnipLRx6NAhsPOnTp2S1OJBqffE9osWeQkMDPztt98GDBgA
SluWx5g0gCx5mngpsKhwFCxnhw4drK2tcXiamhhxXIDtp0iSphw7sHPZsmW0
Im21atWCgoKy5faYH0BMvP+9KH3ssgWbZCfLFLuY7F3WtddtvSczhvAJz61f
v36UBzKHQ/mIkoSsU9evX7e0tDQyMgIjAP+L3sYZin0Z2KYKQgsZ4J/KTDI0
iMkwDJP1kMXes2fP8uXLJZXVoggKOnrx4kVzc3OMi9Z4EWXEhaS2eG/evHF1
de3YsSMu/SNLX0yT5mTCm8TDu3fvunTp0qxZs4cPH6aycAwbUkJM4S4p5gj0
798/d+7cKN3btWuHqkw/G+4cjljOk5JPEvkuqHv7j4o0fgtLi9g1lul2fSgz
ysHHhISEXr16aZduF5Of4EuEfwHzHObJkwfX5NJPlL4jamKoQdG4bJbEi00z
DJNNiLqd4tuVnDx50szMzM/PTwyeES8iNuJi/kbav2vXridPnkjJdbs4+C4G
tNP1YeeNGzeWLFkim8VP52TlIiZahMaltfDPL1++dO7cGWda5cqVa+jQobz6
Us5EjHeSLeKTIVdO/ajsHHGeuIgelpyRI0devnxZ0lqzk6Raw8va2hqj5tq0
aSMeFeW9Hr7cH0ZLCwPDMFqETIGDbsc4GeU5wPHjx42MjC5cuCCxMddm8N2F
h4djZkgcK8e8/frjRGWY9DB+/Hj0t5MJ1a5agx4SXFnP1NTU0NBw3759ksJ/
IrE1SBvorhefleh6YhiGyShkut3X1zcV3R4dHb127dqwsDDOf6W9iN7aa9eu
2dra0sIiO3bsQI+uxtFhhmEIV1fXCxcuaJ1cF4HKHhkZWbJkSZyg+ssvv3z4
8EE2V0jnJy9kLNpbGBiG0RZk/tVUdDslrSXhx6JOGxH9afAe/fz8LC0tseE2
MTE5deoUpubmrhnDpMKwYcMuXryovf5VCudevnw5pSjHxTson4D0rXy/jAgW
ANHxzo+OYZgMR6bbd+/enYpuF/ezPdd2KBngxo0b8+TJg8sC2traPn78GE9g
VxvDpIS7u7sYJ6N1jla64bi4uJYtW2LPvUyZMphdSsxUL2nhf5ctKJ8S20+G
YTKctOt20euuXZ4lRoboS0ff2qxZs9DfjsPlERER2Xd3DKMFjB49+urVq5I2
a1qyA2fPnrW2tkbp3q1bN+jR46CbVkcBZReYJpTHKxmGyVTIOPv4+KQS307b
KaVtZHI+4hukZMXw56hRo6DVzqWic+fOnz9/li2DxTAMMWLECMwng+DglBbZ
Q1rPDsX5oEGDMDFsnjx5Dh06JJ7J0j2NYHhhQkJCdHR0fHw893oYhsk80qLb
MaxdtEVsl7QRZZ8LxfnHjx//85//oM8NpPuQIUO0SIQwTBbj5uZ25coVSZtl
rZiTPzIy0traGio+jbjhUdlCXUxKiMUgMTExPeujMQzDfJM06nb8kxw1WXuP
TIYhSxlBhISE2Nvbo26Hz6lTp7J0ZxiNDB8+/ObNm7Jc+lqk4TGcQ1IbAdCZ
W7ZswW67kZHRtGnTxMBIhmEYJtvR2Nz4+vquWbOGdmpRM8RkCE+ePClTpoyB
Gi8vL0nouImrYmXnXTJMduPk5HTlyhUtnZRKiOsrhYeHN2nSBCu+mZkZrYvN
46oMwzA5AdbtjAxsvs+cOWNlZWVoaJgrVy5TU9Njx45JwhQ2HjdnGGDQoEE4
L1VSm0pttJYyp/rhw4ehyqN0b968Oc5PZ93OMAyTE2DdzoiIgtzb29vCwiJv
3ryYGdLf31+Mh+dUCQyjjJPRLoMpU+NYqeFz9OjRlBXWzc0NY2kYhmGYbEcc
4WXdziCU4RMXQMd1VBs0aBAWFiZbfiubb5RhshVXV9fr169rry9anJQqCZFv
MTExtWvXxmWYgGPHjmlXnhyGYRjdRpm/nXW73gJqHBpoSv84ceJEjHSFz9at
W3/48AFP40acYXQjTkZKXp3xX7h27Vq+fPlMTU1z5cpVuXJlXs2BYRgm5yDz
uu/atYt1u34iRr+gbn///n2bNm2g7TY0NATp7uTkhMnNeNUthvn9999B3+I2
RpFpne9ddrdY67GOz549G/3tefLkcXNz4/E1hmGYHIJouqHd2bFjB+t2fYaC
YXADpHuzZs2w+c6dO7e7uzvGu3LBYPQcV1fXGzduaJ1WF6GbB1kuLseGG61a
tcIOO1T87du3Z+eNMgzDMJoAM+7t7c26XW9BLzqu/CipvYjPnj2rWLEituBG
Rkaenp4Sh8ow+oSytEPVcHFxuX79Ov2Z5TeViWD1v3XrVsGCBTHQvWTJkg8e
PJAUcZVsBxiGYbIMMrmiKd65c+e6det0rBli0snly5cLFSqE4+ZWVlbHjx+X
1I07FhVaHJBLDqN7aNTtzs7OYpyMpEOODvTDJyQkbNu2LZcKqPgdOnSIjY0V
870zDMMwWYnGRVG3b9++fv16nWmAmPSDJeHIkSPm5ubQfBsaGpYoUeLSpUuS
ajBdLEXwJxcbRvdQlmoQrv369RPnpUrq8amsvrmMRlTmsO3i4oKhMsCUKVPw
HIquycb7ZBiG0Tc06vbNmzd7eXmxbmdEsDAsW7aM1mSpU6cOjZtjCho8Uwd0
C8PIEDO04wZ0UXv16nXlypXsu6nMQpYfMjQ0tF69elDlc+XKlTdvXj8/P3Gg
jZsJhmGYLENmcvHPjSqURxm9hcLdv379OmXKlNy5c2NS9+bNm4eFhUmCm5FH
zxndhqwi1IXevXvfuHFDeUgHoHku+OfJkydxGSb4/OmnnwIDA7HKU3QcwzAM
kwUonUjAhg0bNm/eLCmi3xk9B8fEExISevXqhS04ZoakNVl4EVVG5yFjmJiY
2Ldv3zt37tAhmdbVasQOOIrzmTNn4gRVQ0PD1q1bgx3Ao7rx/zIMw2gXYiqz
9evXb926VUqu29k4M5Sz/e3bt40aNaKlVGfMmEGKncsJo8OIlhCEa58+fVC3
406sHToQJybGyZCA//LlS8eOHbHKAyNGjKDUkQzDMEwWI5pfT0/Pbdu2Sazb
GTVQEkiZ4/azZ8+qVq2KWSYMDQ2hzOiMaGGYlCBLiLlWevTocevWLdkaZDpj
KsUgdqz+Dx48KF++PNZ6YOXKldl8iwzDMHoPWGmwxrjEBut2RgTbblx0CbYv
XbpUsGBBaMRz585doEABb29vPI1D3BmdRBZVmJiYSPHt+jND8/z584ULF6Z8
sAcOHJCdwNWfYRgm8xBbItpetmzZ5s2bxfQgrNsZjezevdvc3NzY2BjUO7Tm
mMtaloyC12dhdAOlbu/bt++tW7ckfdLtkqrWm5mZoXQvU6YMrjwFtRvDZniq
C8MwTOYhG97FbH4eHh7e3t7iiLCkN00S811AqVi3bh3mdsbMkA8fPpTUM1ip
EUcXPRchRqtR6vb+/fvfvn1b0icjiVV7zZo1JiYmKN1r1qz55MkTPCoG1TAM
wzCZCk1N/e9//+vj4yPpU2PEpIcxY8agbjcyMqpfv35UVJSk1uqYiYLHaxgd
QKnb+/XrJ/rbJb2xlqDeR40aBbUek0q1bNny+fPneIiS6ujJo2AYhsl60MaS
733p0qW7du2SWLczaeDz58//93//N2DAAAM1PXv2jImJkZJHurILjtF2lLq9
T58+N27cEDWqbltLcXVUqPjDhg2D+o6O99atW2OHHaNldPs5MAzDZBeimqIh
zkmTJmGcjLif7TCTCpGRkc2bN4fmGwNfR44cKanKErXgoOG5CDFajUZ/+82b
N2W6XbfL+devX3EoDYiOju7bty/21nPlyuXk5ERJ3SVuMhiGYTIB0bTSfCJ3
d/ft27fLFl1iI8woQTWOZcPf379OnTqUI27x4sV4DvroUMNn570yTPpQ6nZQ
qmL+dknX7aRsxgpsh4WFNW3aFJO6Q5/d1dWVVD3PQ2cYhslUyMzOnj2b42SY
7wILz6VLlwoVKoTOt7x58+7fv1/0t2f3PTJMulDq9sGDB9+9e1fSG41KtRjn
rUiqRxEREdG4cWPsrRsbG0+YMIGD4hiGYTIJsLrkCE1SM2/evD179kh60xgx
PwyVEGypofAcPHjQ1NQUM8zY2NhcvHhR4oLE6BBUmD99+tS7d+8HDx6Ii03r
fJyMRoKDg+3t7Wkp1SlTpqCwR51Pn7iRsdaAFxlhGEavEA0dRSDPnj3b19cX
d7LiYr4JZZCQVAJ+9erVINqNjIygBa9QoUJgYKDsHHESNDe1jHYh6nZHR8f7
9++LZVg/yzO0HUFBQbVq1SKvu7u7O8W6i40IOeozBHja4sQZ7EBxm8UwjJ5A
5m769Ok+Pj4cJMN8F7jwiqSS7tD1Q5d7rly56tat++LFC9EbpvTSZ9c9M8z3
QqU3Jiama9eu9+7do0N6XpKhh16tWjVMCQsVf8yYMf+qwRPEdDQZiDhenBnX
ZxiGyWmIDor/+7//mzx58s6dO1m3M2kBSwi506lpHj58OM1RbdSoUWJi4j8q
8Cgmi8uue2aYH4bKbXR0dI8ePR48eKA8pJ+AEbh69WqFChWgymPMjKurK1qG
jHWzi6CDnYI8M+lXGIZhchTinEHYnjp16o4dO2RLqWbHfTE5HSgtKMWpCFGs
b2xsbLt27YyNjQ0NDaEFd3FxwXNI2OOfPIWN0S7IGH78+LF///4BAQESW0gV
WPf//vvvihUrossdGDFiRHx8PB7FKp+Bz0rjpThOhmEYHUZ0qpPLYs6cOazb
me8FGmVZi/n27dtGjRphvCvOVhOj3Kkd53aW0Qpk1vLDhw9OTk7i9A29RRYC
B9Ld1tYWZ7jkzp17wIABcXFxeEJmrOMAP8ppZhmG0RNkLRFa3UWLFu3atUt2
KFtvk8mhaBwEx534+fz58/Lly2PADKj31atX4zmJiYkSly5Gq5CZxKioqD59
+vj7+2f3fWU/yhiVBw8elClTBme4GBoatm3bNigoCPaLCzNlFGBMoF8AVwb1
rucdKIZhdB4xOJn+BN2+e/ducY9ym2Gk5FEuosuLgmFgz9WrV0uUKIHRMvnz
54cuofitTJqqxjAZjqjbwWaCbu/Wrdv9+/dlJ+gt2H/H2g3PJzAw0N7e3kBN
7dq1b968KWXCU8KsMhl7TYZhmJwMGT10myxYsADzt0us25lvQT4uZdOJ7TgU
m6NHj5qYmGCiCdDwfn5+sB+HzrlQMVoHFtqIiIjOnTs/fPhQLPlcnkWePHlS
v359ku6VK1fGBR1Q21P/naeUMgzD/ADkR5ozZ46vry8bUiY90HQJTAS3a9cu
0O1mZma5cuWqWrXq1atXZSPayjlrPGWVyZlgKX379m3Xrl0DAgJ4KlAqhIWF
9e/fH0Q7LsdmbW2Ng7k40EaNDse3MAzDpAXRWtL24sWLWbcz6UHpQPvw4YOn
pyc03Obm5nny5Klbt+7r168lISGkLBlpFt8ww6Qd0u2Ojo6PHz9mU5kS+GSi
oqL69euHw20mJibQeV+xYgUOxkGt//LlC57MIXMMwzDfBQknMU6GYX4AUcnQ
rNVPnz65ubnhiDk04h07dqQsE5I6PJ687izdmRwLFu/w8PBu3bo9efJEeYhB
qE15//79vHnzMK8UTlF3cXEBg0CnsWhnGIZJO6KrE+zn1KlTNca3M8x3QYll
qFH++PFj586dc+XKBQ03fDo5OclOFv/kssfkTLBkhoWFQWGW+du50MqgGBjo
mG/evNna2prUe/PmzV+8eCHx+BrDMMz3gGm0qbkB6zpt2rS9e/fin5ypj/lh
NKZlCwkJqVu3LrTahiqmTJmijJORuMgxOQ9ZmQwNDe3UqdOTJ0/E/RynLYIx
MOKKSxcvXrSzs6OVlGvVqnX16lWJh9gYhmHShrLFgT3z5s1j3c6kByowYpcQ
m2b4vHHjRoUKFXKrMDY2XrVqFTbZ/6eClyxnciayMvnmzZsuXbo8e/ZMPMS6
XQk9E+zIv379+tdffzUxMUHpbmlpuXHjxuy9Q4ZhGG0EJRPYVdDt+/btw52s
25kf4JuRA8ePHy9btqyZmRnOVPX19aWkkfQt9r8xOQpZSQ4JCenWrdvLly8l
1u0pQ1mhMFgOw2ZiYmL69esHdT9XrlzQec+TJ4+LiwtOVGcYhmFSQfRt4ieI
pZkzZ7JuZ9IJBcmkFKnu7e1tYmKCwa6FChW6dOkSrdjLMDkTsSS/efOma9eu
z58/13iUSZ3Pnz+PGzcO4+XQ8V61alVcmEnjehDKZ5s1tkJsIrEPgjcmy1Kb
UseN59syDJPhKHPnenh47N69mxQ7N0ZMRiF60aHUrVixArPD5cqVq1y5cgEB
ARTrTquv0qdsVV9GB6DYPNrzzZerUTVJ6jKT0mVlyH4RvyibZ0EbKS2rBLq9
c+fOT58+FQeJ2GCmBXq2Xl5epUqVwgRTYAQsLS2h9UlISKBnTl56WgxCDL3L
bMiXJaUweRbNlLLMoNeCSwLDMJmBzLwkqdZL1ehvZyvEZBQ4YQ1at1mzZqG3
zdDQsFatWm/fvhVPk6kgaDop2zOjS0RHRwcHB+P2N9fbQgX1PxWSyoKBhJ40
aRLOcJRUxSYxMTH1i5AjFM5csmSJr68vHSKTCD+UynRp+FFHR8fnz5/LdDuP
GaURDI3z9/evX78+zVQFOnbs+PLlS2XgnMwUZMFzpreJP02FCv+U+dLxT7Hg
0YBjZt8nwzB6hTJOZvbs2YcOHRLPYfvDZAhiS4fbINQHDx6MXnf47Ny5c2xs
rGygHOer0naW3zWTiaA0Onr0aL169UDCpd05QObIz88PenxDhw4NCQlJ+4/i
BvYRjhw5Ym9vP3r0aFxQICXHu6TQ7f369Xv16pXGo8w3oTwzoaGh7u7uVlZW
aATy5MlTunRpT09Piksh8SzK+Cy7zytXrsyaNWv16tXr1q2DLt7atWs3bNjg
4eEBhRZu4++//164cOGiRYu8vb3nzp27adOmjx8/Ztm9MQyjz1AI3/Tp06Eh
kwTbiA4o1u1MOhFbXmqOY2Jifvvtt1wqoOF2c3NTflHjwr6MtkNBert27YJX
Tw7zVM6nDShIX79+PXjwYPHixZcuXYoDMdAZpICZtEs7KIqg+e3s7Nq2bfv+
/XuZmyIV3d6/f3/Q7Rwb870kqVNLiTu3b99esGBBA4GePXsqR2Go758FXXi8
w0OHDpUpUwb7FOhhMDQ0rFmz5p49e6BsPHr0qEuXLnnz5sUp9mC+wKDRPSvD
UBmGYTIKUbcfPnxYSj5GKbE3ickgxJWYcCMwMLBGjRrQGqJ0X7FiBTZ5oqdd
zAKdXXfOZDio33bu3GlhYeHn5/fNIBmMQ8Dice3aNUtLy0GDBuEhZWRFKj8q
JQ/Ige3bt28bGRm1b98+Li6OZlWnMjsSdDsIyxcvXnAkczqhjk9AQAB0hUAb
42RV2LC1td27dy+tuUw9sm+WkwwBrRP81unTpwsVKkSzaPPkyQOtpKSO9/P3
9y9cuHDRokUvX74cGxsrCWH5WXCTDMPoGxrjZA4cOJBdg5KMDkNyXenDvH79
epEiRdCdZW5uvn37djpKbTQHyegqPj4+8N4vXbr0zTNJwj19+rR48eIlSpSI
jIwUA9qpr5dKaRGLnxiCNW7cOJBkTk5OWFCVkylS1+3s30g7+NjpbQIJCQnY
6GzevLls2bLwIihRJIj5v/76SxJenPjFTAV/CEzQ3Llz0TpB5w4+y5cvj4u9
wg0PHjwY7vP48eMy+5aVU2gZhtEfNM5L1bjuEpsgJv3Iwg9IYsGfJ0+ezJ8/
v6mpKTSLZmZmhw8fxnYwSchCwzEJugTFLe/atcvY2PjWrVtSGualSio11bRp
UxBLy5Yto50g3em73ywnWLRkCh/6AoUKFQJhtmXLFo2yP5X4doyI4MKZRlLK
+YN7Xr9+3b17d3gRlCUSOmiLFy/+9OmTlIXebHGmQ3x8vL29vTh/1tnZWVJN
jiD3O/LNDJYMwzDpQWMeyD179uB2khqJR/2YdCNzspEspxO2bdsGih3jSAsW
LAhCTtRXEjeCusjDhw/79+8PQmjatGmyhEIysBiAIVqzZg2IJQsLixs3bkjJ
TRMWmNT9saIjQswvCvTo0QPupFq1aiAdcVJPSgozODi4V69eGIDNxTJDEBOk
w2PfvHmzra0tBsygVK5Ro8aBAwckRb9M3Mb3JXN9pyfOHC/+5cuXy5cvQz8C
BwLgM2/evBMmTChZsiQUA/o5HqdmGCbLICOzZMkStI2SPlkeaizQu/vNkAxZ
+Csm8hW/Ra68tDxDkhliCLeY9ULnXwSFry9btgwHx6FxtLOzE9e10RhyzGgF
VL/wTyzPR44cadOmDXTQ8ufPj0vely5d2snJ6dSpU0qVRVPjo6Oj7e3tjYyM
qlSp8v79e0koErGxsf7+/vfu3Xv06NH9+/fh8+7du3fu3IE9oKwSEhIePHgA
23AI94vpBHEDrB8Kszlz5kiC81+jbu/Xr9+bN28kocLyPMR0ItPb0HPHPh3O
WwezYG5uDnvgzUrJ86tLmuwDvL70mAsKlKLUo5MmTULRTrHuP//8c3h4OH1F
1oPgwsAwTIYjc1yAoVOul6oPKAfWoZVP5XyaIaWcLEnb30wiLftFckcrEyFK
ejPeAY3j6NGjsVmElrp58+Zis8iiXRvBoksiCj8XLVoEr9jMzMzT0xNsDkj3
2bNnd+jQAbRZvnz5MAAGCgNJa/yE2uHl5YXL7LZr106URqCyHj58CMq/QIEC
RYoUKVGiBHza2trCleETDoFiB6lfrFgxOASfNjY2+/fvl5JXNDB9JiYm5HKn
f0Gjbu/Tpw8mn0wSyNxHqeuQbhenBh8/frxBgwbocsdIlcKFCw8bNuzly5fi
A1eOyskkfXrAa4Itqlq1Kkl3oEWLFpg+VFIsvIX9OC4SDMNkLLK2BprFSZMm
UZwMnZPl95WlyHRyVFSUmJY5pfOpLcDsc+I2SBHMpSmlYciergbbb9++nT9/
PkgC6g7o/MOXhFEG7Ol8/PiRnGzwOXDgQOhDwfORJQxhtAVRNWGH19vbG7S3
qakpVBN4rbt374YXffPmTSgAXbt2RV1Eseui2oey0aZNG5RMffv2VfbjfHx8
QJPjeA2Kq6JFi96+fVtS1cSIiIi6devCzl9++WXnzp20eBN2wOE+L168CN9C
V+rBgwellGf3QCXt3r17UFCQxqPMD6B0htC00Pj4+MWLF4NcJ0c3AP2yFStW
gJbWOK9B1MxiDqu0k6SaFC8rY1BWMesjAtu4aBf+NAt1hmGyBtG+TZs2DUyT
eFRPPL2kn9euXdusWTPMYJDKmWDPxTl06CePiYkZM2ZMgwYNHjx48F2/jpeC
ry9ZsqRcuXKnTp3C/ZSL7Pv/IW0FSmNoaGijRo0wtwx8Ql9STwqhriKKn8jI
yFq1asFrHTVqFB7avHkz5ZN58uRJqVKl0KeK4esElAGcOgpHQfaPHz9eNFzU
QQbBT+oOBDxcB3oEeAPw03DxKlWqwHXou1DFaBvOzJ8/P471jBs3TkoeuiaC
up0SjCOs2dIJCW/ZOAt+Pnv2zNXV1cLCQkzzXrFiRQ8PD5wZIUbII1Aq0j9I
Jw6hxsbGVqtWLY8K7B7WrFkT7FU6f4JhGOZ7IbfSrFmz9E23yxb1WLx4MVjj
TZs2pXS+GNZOMQDw+erVq/bt20Nr/u7dO0kdJ5PK05MFxFIkAHQcypYtu2bN
GkkREqyrwCMl3xruefHiReXKlal1hu4M7terLowuQc7t+fPno6I+efKkpCrY
O3bsgD8vXryIJ8ybNw9EkZGR0eTJkylLDFYEOAcFOXwuXLhQSr6cLhIXFwd1
kMZrgD59+sCvwMVB9eXLl+/atWtYm0jU0RQSf39/qHqY7q9+/frifEPZvwOK
vUePHrKBOT0ZIMskxNlANBApC2KXVDljO3bsSGEzGDT1888/Q7P18eNHGkAh
y4mX/QH1TpNuxBuYM2eOlZVVgQIFMO0VlsZu3brJvkslgcsDwzAZiDIqG6wT
6HZ9i5OR1O4d/E+XL18OKgK0RCon0zbZ55CQkLp160LzERUVlfb8J9imkDKh
tgY0CTQKIN315OHjBvnWcM+tW7fs7OxQfZmYmMiKJaONfP78GaoJvFNra+sn
T57gTl9fX9jj5+cnqST0+fPnQV3DSwd1FB4enqRO/AIbW7ZsAaWEfs4FCxZo
nFcChefu3btFihRB+Y3RMt7e3tAfF0uRGFxB9S4wMBB1O1CqVKkPHz7ILk5g
PhnU7fpQSbMAjY+RulTYr8dARPj8888/27dvjyErKN2hCDVp0sTLywsDzpMy
enkm+N3jx49D8Zs7d+7Vq1dxMjUCZQzz1sqidLgfxzBMhiP6NySVkQTdrofz
Ugmwt6DbwQ6DQkj9TGwUsDWB9n3gwIEgNq5cuYIPDZ3tYsIKjZAmIe2KF4TP
KlWqQBtx5swZSQ9eBM3Jlc0p27VrFzxVzCZRtGjRmzdv6vzoj05Cbm3Q5FZW
ViC8QR5HRERIqrINWhoEGMWGBQUFlS9fHqU7zhOh+IeZM2eirx6qxooVK2S6
ndyqoKBWrlxJ+QMx6gaK0MiRI6l7ThFoskgMuDF0ohYqVOjFixepxLdTPhku
kxmIbIxD7FXJknYC27dvr127tkFyypUrt23bttjYWPLYp+cFkfaGsgFFok2b
NpiyYOLEiTSmA5916tSJj4/XmBCSYRgmA5HZNPhz3rx5+pYHUtY0g24HU5yK
v12W4AsjWwzUK3FI6gRiaRmZhTPpd2X5HqFJMjIyKl269MuXL7/7X9IqZAlz
ZHndN2/ejBLO2NjYzs6OnLSMtkCqG96pr68vrjhZuXLl6OhofOk+Pj6mpqan
T58mL2WHDh1Qn3t4eIjFY9q0aaTG161bJyWPoxCrD4irli1bitMYod8XGBiI
R0W/qCToQOhK2Nvb409bWlr6+/vLBtdo+/Xr1/379wf1LnN9MIT4ZKjjhnso
/El0iYuxJWhj0/JI379/v3Tp0goVKlBYFGaMdHBw8PT0hD6gGG9DBQy/KyYN
SFLPTcY/aZscKZ06dTI3N8cRFjgEV65WrZqBkBZy+vTp9Ct6Et/IMEx2Iar3
hQsX6uq6S7LwFdG00srmkZGRv//+O9jhcePGUSrIlMZbcf+zZ89wJp2Xl5fM
wyMa7ZSWXxf3i0urh4SElChRApqDvn37Snpp/+mxT5gwAdUatMiNGjWi6AVE
uX4Tk9OgYr9x40YU0lWqVImPj5fU/nYTE5Pjx4/T+b1790YNBuZIFFpjxowh
HY4TQOioWI/w88yZM7j8LgJFCKS+bMKjTPDHxsY2bNgQz7e2tgbdLv4XMt3e
r18/0u1JnEtEEzicQY/l7du3O3fu7NWrF3SOmjdv7ubmdurUqbi4OFEwy1xJ
qbQ7oi399OnTqlWroF9PrxvLCZSrHj16XLlyRcwMgwZfaZxF/hXWb4qJiRk8
eDBczdXVVTwZ/hH8LQzUgd/CKRuppP1nGIbJKKj1mTt3rq7qdkLpFZFUq5z3
6dMHszejzbeysnJxcQFZLiV3ASWpIidxAwz7kCFDQE9aWlr+/fffdDUy3eJk
KxCc58+f37Rp09mzZ8PDw6lfIDp2xJvEdgH0A4Xf6CHYl4EXgX7aPHnytG3b
FiSfqLh0qXDqHlQXoMB7e3uj1IE+aWhoKB46fPgw1KBDhw5h/YJP6KtiT231
6tWSuvbBG1+wYAG6VeEoSHqlwBOnqcKe0aNHUzw8fLFkyZLKiHS6PTgfdHil
SpUoTkY57ZS2Qbd37979xYsXdCiliBq9RczuAnZyw4YN1atXN1Ctp7ZixYqJ
Eyfi7M7ffvvt6tWr+BXlQnWpV20xRYCkeikrV66sVauW6HtHXd24ceO1a9cG
BgaKr1tStAKy0WcALDYOwUCpgCIxYcIE6CPAaTt27ChatChcmUoXfNra2l68
eJG+LqVt1JVhGOaHwXmpe/fuxT/FlkgH2iMKRBFX5UPjfOzYMRASYHj79+8P
6t1AlYOiefPmYJOhcdm5c2dKDpkHDx7Y2NiA0a5cubLoOJIZ7Tt37ri7u1et
WrVw4cINGzYsU6YMSAhHR8dr167hCTTrSvzTw8MDB2HHjx+fyc8mJ0Kxx5Jq
PiMlkUDHF2V7hnM4yUxORjQdJ06cAKmD6WJu3bolqd6yj48PvFNQ7/ROe/fu
jckYSQUhBw4cIN0+f/58Kbl7ViwGsA3dhE6dOon+dvgcMGCAlHwmhQjoOqiY
eDIIeCh1Kf0jIBE7d+6MnfqUztFzqC+TmJi4bt067A2BOX3+/DlO/6HVaeGZ
00QGspxpfJKUFIiKAehqKFE///wzvXTs70ORA/MLva1Tp04pl9XAHp/4o3hB
Pz+/2bNnL1u2bM2aNVDkoOcYGxsLhvro0aNTpkyZp8JDxaJFi8aNG0fem5Qy
iDIMw6QHcQxaUvvbcRlBcaekK/ZH9r+gab169So21p6ennBo7dq1YOHhE4xz
ixYtDFT5vnCaqji2jhp72rRp2C788ssv/6ig36Ih+927d9esWRPbrIMHD0ZH
Rx8/frxcuXKgQKAdgYZAUgt1Wazsxo0byTkZGRmZZU8p5yCGxQYFBdWvX59G
pWfOnEm9JNbtORmx1sB29erVcegEije+QagU8CeZHdgDehtqR+nSpT98+EBq
CvbfvHmT8mbPmjVL0hTzJqnHaKBuQo2bMGFCsWLFKJ07XBZEnezeSC7evXu3
aNGieGbbtm1lRk+m27t166bzc0/SD9hJ6Kxh4hd4qm5ubnQoODi4YsWK+Dbt
7OxoKETWKqWEzJciU+/Qa4O+QK9evdC2k/sdewo1atQAmf3XX3+ByCcNTz8q
i7qnf0S2R0relIhJI/Ff4HFAhmEyHNkooaSKb6d5qYgu6XYxxBHNdVxcXJMm
TXC4NjY2Fvb88ccfBqp5qXDyo0ePcJ0Xc3Pz27dvyxbdA/PeoEEDnAbl6OhI
j0h0uR87dszGxgabDJToGGk5f/588hyiYiHfFP2Kr68vhk3CJ2bJ0zdkOfAD
AwPRjYbCD4MoyEmbjffJpI7oewQhjdWhT58+eAgnq65ZswbHv6CilS9fHueY
0BWw1oSEhFSuXBnf/rBhw2TptakfBxunT5+GmrV8+XLYBoVmIKxNX7Vq1bCw
MEldcijUGb576dIlU1NTFPnz5s2TOWBlur1v374USMPB7UrIoGGdxe429c7w
lYH9pMVtp0+frpyk8M04Gdm8IdqDfTd4uc+ePdu6dWvt2rWx2KC5xh81MzMD
4w9m+c6dO8r5RyS8qRiQIJdUhYcEvxgVKS43IHGcDMMwGY0yLNPDw0Nc4FvS
Id2eJKygTXYV9DmOyEPjjirR09PTQJ2tAoz/yJEjsdEZNGgQCXK8zuPHjzG6
Bhg8eDD9Cn2+fPkSGiZcOR1+QlT+O3fupEB6aFMoJ554tzixDrPeiRpGryD/
Gz78kydP4nLnGIEM8kxSpOJhchSidIHy/+bNmxo1asDrs7CwuHDhAuzct28f
/Ll27Vo8B4U9vFxQUziGJfaIsT4aqBe7UbpD4Zxbt25BZ5lO+PjxI842pTmt
7u7uGicPQnFCDQm1FYOuZQHPtI35ZEi3J/G81BTAQUOcIAwP9ujRo5T0FT47
duxI/anSpUuL2aLEMDmNUDIuZayU7IvopTlw4MCAAQMwh4BYGIC8efM2atQI
enn379+PiooSo2iU5UQWD08FD5sPzDCv8WSGYZj0IxPnkirm8NChQ8pDOtAk
iU08boN9BnONdvvmzZuSSmNgQ7NixQq0w5cvX7a2toY9xYsXDw8PF69G47+A
i4uLpPCuoOse/erFihULCAjA/dAWgLQoWLAgNRyLFy9OEkDHzvnz583MzNC9
3KRJkyx5SDkIbD2Vmdl8fX3z58+PHjOQZ7T8JZMzQRkjxh5s3boVV6sHOQ0C
GNUy7AQlBn1Vc3NzExOTKVOm0Pmiu97Pzw9qIpz/66+/SsntEhYY0NIODg5Q
PDDZC34XLi6qNfh1WqVCEsrYtm3b8LT27dvj6Fsq/vbevXu/ePEiJWHP4FRi
V1dXilGBT5ywQIWha9euNHwGJ+ByFZIwaTT1n5DFrtC3xEgb8SJwP6GhoSDg
f//9dxTwpN4pnWPt2rUnT54MBebp06d02X/VS2xQw0HXlP00/WiSOk0ZwzBM
RqExAA+k5uHDhyUd1e3if4Ez10BOo3Pv48ePaJm9vb3BhsNzkNSCgVbtxCdD
Bnzv3r1o80EkoD9cTKEAJ7Rp0wZPMDY2Llu2bGRkJN0DNB/403jlWrVqRUdH
S8kjl/78808QqDi+/NNPP2Xpw8oZKOd24cNZs2YNNrjwcCpWrBgUFMTj0Tkf
cbbCrl27sFo1bdp0+PDhINQHDhz43//+FzqzUJtGjhwpmy0iVt6+fftCDS1R
ogRKa0k94BIfH3/kyBHsiVtZWXl6ekKlhgITEREB1ZP8utjjK1++PHbVyb6B
ypo6daoYuiYrVKJJxPh2yiejPIeRVE8DekCohwGorbdv35aEKQ/w0kVVj1ZX
TNKYsfVafIMvX75cunRpvXr1yPciAvcDJaRDhw7u7u6g4R8/fgyNBepwUZwr
ry+mJlC6xWS9CYrAEffL/PmyEkW+HfEc8ZD4Q8omnv3/DKPVaPQULVu2jBIp
63AbhBb47NmzqIpBQkMTj/u3b98Oe+A50AA9zk41UIW8irZR1O2TJ0+WBD8M
PNuAgICqVauSTqhRo8a7d+8kYepctWrVyNEEn8+fP8ejtCIJ6Ar0ycNplSpV
iomJSaMbSrfBBzh9+nRUYvAJjS8Nhcgaej1/VjmZp0+fjh8/vnr16vny5cNg
MCjtDg4OBw4coOBkSZM/09/fH86EWnP+/Hm8FO6/f/++vb195cqV7VWA7jpx
4gTs9/Lygl5zhQoVoIsHnQWoSmXKlIEe8cSJEyXB9/vp06cGDRpQBI70Ld3e
s2dP6DDK/ikdtpk/QHR09E8//URK2NzcXEyWC7i6ulJ8u4Fqsjkp1bSnlPle
/hXWpwY1fu3aNegvdO7cuXTp0uIau+gWwHnQRYoUASPj7OwMUv/kyZO3bt0K
DQ0lfU4FVXnDGlV3SkdT2amcifZdYOA9G0OG0Q1kLui5c+fqsG4XZ4zCJwaZ
A2CWyaxBK49xMvgVOA1MOrYsY8eOpeuARN+1axfKctDVOKwvPjEQFRjVicHt
ICTev38v3gymBSZn1Llz52Q64cqVKxYWFqjqq1Sp8vnzZ9Iwuvdq0g41YU5O
TtRv6tChAzTBovMK+1Dsh8/JwJtKTEzcsmULKLru3btDRxX2oGhXZncUI40x
Ag2D0yR1kRBD3OHti4HxeE1a+xI+cdUnAsrJmzdvDFTLJdy7d0/jZOdUdLvS
ocpIqp5Xs2bN0DuBMpiSf+IThjeIih2niy5ZsoRcxOlUqkpEua4EfjcwMNDT
0xPKIfTy8JYoDzzpebT2BQoUqF279uDBg1evXn369OkXL15AoUrpbtNugsRS
hI9I7LzI4n/E62vs43BRZBjdg8L2RHOxcOHCY8eO0Z/Zd3eZgiyR48GDB8EI
Q8NRqFCht2/f4jkYJwMGmexw//79MSpj9OjRaCTx0KFDh9BPiIfoV9C5cerU
Kbw4nACfNWvWpIU+8Qbq1q0rDsuCbqcr4JOHPVZWVnh9BwcHcUEZ3Xs1aYee
Q1RUFKgCA3V8rJubGxZpjQFgTI4FtByU85UrV9IeUbMlqdN3yL4FtRJ0IK2A
8K8qjb+sasAesRcgppOSko+OwScu3ODj40O9v6TkYfky3e7o6MhxMt8EI2HQ
dwFcv35dEiaSwzMnbQxgFneZWM3Y+6GXSyuoKrMGvXz5EhrBOXPmwO1Vq1bN
wsICM4jirYo3jIMIpUuXBvPerl07JyenmTNnbtq0CYz/3bt3oXiEhIRERkZG
R0d/+vTp8+fPYkYaWQlP5Z+V3d43Pfayi+t5e8EwugpZg6VLlx49ejS7bydT
IGtJ0u7x48eWlpZge01MTK5cuYJHcUnHZcuW0Vd69OiB4hmzuJMNhAdF05p+
//13KbnhffbsWZkyZQzUWaPt7OwiIiJEi127dm2xCcBZq2JCs5MnT+K8VPiV
Fi1ayP4Rjb4X/QGaXeh5BQcHY258fBHTpk2ThJwS6HfN7jtlNEPd57/++sva
2nrDhg3YKSa3uZgTGyG3ObzZmJiYbt26NW3aNDw8XKwItBSCMitIknqaKiJ+
C3oNUBlXrFgh01QiMt3evXt3Zf52fa6SMvBRL1y40ECVzBZN2eXLl0VJCVoX
+90AyGNaxyozpKbsgvQTtJ+yOErqGC0458OHDzdu3Pjvf//bs2fP6tWrY44C
GiCgbXQdgBWCDfhn4X8pWrSora1txYoVa9SoUbdu3SZNmnTq1Gno0KFTp05d
vHjxmjVrvLy8oK3x9fU9fPjwuXPnoAd6584df3//+/fvwyc8ijdv3oDmh3Iu
W91DSm78xRVgxSKqHC1iAc8wuoSo29HpoauIc4vi4+OrVauG5tfDwwMP7d69
G2zv8uXLJbUl/O2333DhVDGcFQ6BmQUzjlEuXbt2RcNIrRJojGbNmmGuYFxE
JiQkRDSbuOo3fh1uAwPsRXcx9AvIVTVp0iRJ77U6gnl+qLUC1VeuXDnsHwGU
1J1d7toCCBUQOZ6enjKnOmlsMdBd3B8XF+fk5NSoUaPAwEApBbGtMacHrZcK
R+FH161bZ25uDtqMhA12EPCTkOn23r17Q7dRSq6IuHoS+CgePHiAiVtRt9OU
BEn1vqDbRZ3uwYMHi+O/GV5/KUhS6YsW7bbGsJYkVRD7+/fvnzx5snPnznnz
5g0YMABuvkKFClByDDRBWeLhv5OFzROk8/Ply2dpaQmtiY2NTaFChfCzWLFi
0GrY2dnVqVMHmpJevXq5uLhMnjz5jz/+2LZt25kzZwICAiIiIqDhkBVU2X/N
lpBhdIaU4mSg+59SYKe2Q80rmTKwwAaq2HUwwqSWwczCflQRYBgx3LFNmzZS
8tbk06dPGOsC5he+Lh5FteDu7m6gXqSvVKlSlO1ZUq0VWKJECcpxMXv2bCn5
4Cbg4+NDC/wps0nrMzIH1KlTpzCvoLGxsZWVFSZ1l7ibk+NBvYEjU7hGEkZQ
yBLyU2SaJAS34AnQ9R41alTz5s2hclEAM3nXMXiGzsc/ZRYAql6VKlWgty4p
5kSkZAZJt9MSn6zbU2HixIk0AR8zxuDDf/PmTdWqVVHTgkC9e/eupM5/Lqkr
bwZaPDEcRel8Fkd5ZOeLiN1AKC1BQUFgbTZt2rRs2bKBAwe2bdv2p59+Ar0N
5sjU1JTW9pVpdTF1vBhyo4zDIcRFo+g6IPXht6pXrw6tj7Oz89y5c7du3Xrx
4kWcpK/x/rl8MowOIFZknJd66NAhndTtGjONgOHFdNBgaS9dugR7Lly4YKBK
HYNfwcUWwWx6e3vjF5PUwOOCJgmtKAh4KbnwllQB6mBXUXsXKFDg4cOH9NN7
9+6Fa6IRhsbr3r17UvIgXmggQMmgDbezs4uOjhZVqD4LeFEgUe6djRs3UicI
+ln4qEW9x+RYAgMDCxUqhAMlMqAWyKotSmuZFx20CnWKsS+g9NnKdBoe+vz5
85EjR168eJEkTIcUTxB/SKbbe/Towflk0kJsbKyjoyOaMrB1VH8xWz7O9Fy3
bp1MpWdSzf1XsSiS2LMjGyuWOuWdiCUBN7A/GBMTExwc7O/vf+3atYMHD3p6
ekI7MnbsWBDV8ARatmxZr169WrVq1axZs7KKcuXKgbGCPkuRIkVsbGwKFiwI
zRB85suXz0SFsbExthEyMY8in1z6onsfrlCnTp3+/ftPmzZtx44djx8/poUw
2BgyjLYj1mKyP8uWLQODo5O6HaEICtwANmzYgJawVatWsP/mzZvQjoBch+2A
gIDChQuDPWzevLly1huenDdvXkNDwxo1asgGK7E5WLp0KZnWP//8kxK8e3h4
oCkGtYm/JWbDwA3oQ6FBhpNFsap0SOobGkfSoQ8FjxR9WdByxcXFZdPdMWmC
5ERoaChUH19fXxz7kwlm5bumEBcpeScuSZ2RT+YylQ1jKdW7uEyA+EOp5IGE
bgIoMYqTkZ3ASMmfZ3h4uJubGybdHTRo0KVLl7Zu3YrhbUWLFsXFqXWbJNXc
ChxRgt5idHR0REREWFgYdP2glblz587ly5fPnj17+vTp8+fPnzhxwsfHZ8uW
LRs3blyxYsX06dPHjBkDz61fv36dOnVycHAoWbIkJiszEHLdyNaQwkPQI4YO
Qt++fTdt2gQ/Af1NLNWyXqoklHZZHJEkVBwxO30WP0CGYTQClREkojK+Xbcr
KdgiUMj58+cH1derV68dO3aAbh89evStW7cqVaoE1q9Zs2aUOEJsynEbF16H
1uf58+cydw1uz5s3DxosExMTOzu7kJAQ2HPv3r3q1aujbp80aZK4NjdpEvgT
TDScACYavfFM6sBDGzZsGLVfnTt3jomJoaNKNxqTvZBVgZcCukU2vTQHIvO3
d+3aFeel5vDbzi6oxqF9S0xMBFE6atQoMKr29vYVKlSoX78+KPanT59K+jeA
KJsfnaSOsSevuDLGj5Q2aP7AwEB4mCDsQdW7uLi0bdsWxLm1tTW2KZR4U7YN
bZCtrS3o/6VLl/r5+ZF5lHWKZQl2xOm6kv69KYbJ4einbpdUtgjsGCg9S0tL
VH0426h48eKzZs3ClkVKPk+Nnsndu3dtbGzg5M2bN+MedIaLD+3w4cMg/osV
KwbSvVWrVmXKlAFz2rhx423btiUkJEianIcPHz7Ee5gwYYLEgjNtfPr0Cdeo
xSDSIUOGKL1DuCeVmVxMVoIFG2tBDkcsRZhPRhknw4go4/rANoJcjIyM/PDh
w+fPnyVhMkJ23WR2oVTmtF/cTinYD6U+Vp+vX7/CU4We740bNzZu3Aido5Yt
W5YvX97KyspAPcFKjLFBDV+9evXevXt7eXkFBATg0sOUGFOcIUIbGqcDMAyT
vaBuB5Gp3J8t95M1kAnCNmXTpk3GxsYg/6BRfvfunTiqSCO/srZmyZIlYAnH
jBkjWjMa7seTQVKCUV27du0ff/zh6el56dIlCuQQHY/kpMI08vXr14+Pj2cX
RxqB5waSwMHBAceOaT0sMbumxC6jnIEY7oIok7TnKEQzGBIS0qtXL1G3K4Nw
9BxxzBGh94uZPDWmT9dhKFRGGWouuty/95qS6hnCI8Urk/MnKioKBPnWrVtd
XV3r1KljbW0t+t7FcJqCBQs2aNAABPy5c+ewM5VKT+HH/3+GYTIB0u06HN+e
CtiOgE62tLScPXu2xtg/pYwHg5mQkDBgwAAzMzNcDVA5dU7j6i2SOlJdTHOB
hh3uoVy5cgUKFMAcC+xsTws0c+HJkyd2dnbUKmH0LIkEPFlPirS2IFaBHIt4
e2/evOnZsydOaM3GW8rJiO4IjTnG9cSspVRCUu/oiYcodkUWTqP8bpJ6hQKZ
xgY17u/vv2vXLnd391atWpUtW1ac6IpeDvjMmzfvf/7zn5kzZ169ehXbL0qb
LEa/05JVDMNkO6jbdTWfTCpQcjkwR2FhYSVKlJgzZ46U3LTK0g7Ickq/ffu2
ZcuWTZs2xeziysAMMb5alseATqNvTZo0yUC1dGNKJzMpga/y9OnTpqammKrC
xsbGz89PSt6WcbuTE1C+hRzo0BPlE32Ghob26dOHdXvqiG9TXFKBnqRoVLP+
9rKGNP5rScn5ga+Lf1JrQkGb4hTs6Ojo48ePOzs7V61aFewkhoaiksfVRmCn
g4PDH3/8ERQURA4oGjtmGCbngLr94MGDylG87LqlLIDsJMY8gwIvUKDAokWL
NP7XZLgoM4yk8mbAJzTi3bp169ev37t37/AcWVSGKBqVy4ug4ITPefPmFSxY
cMOGDZKmrMJMKtASnPC5Zs0aSqEGHbEHDx7Qadi3YrIX0QdLO7VFt0Pvvn//
/uJ6qeJRRhLer3KNWmVASA5875nEv8nXTFEi87Qrj2r0t8uGq5RdJI2XAgF/
9uzZWbNm/fbbb1ZWVijgwWziYCV8FipUaMCAAd7e3tAs4rdk01QZhsle9FO3
I2TfPn36ZGNjs2TJEpB/9I/LLJXoJqKZQfAZExOzcOHCBg0aUKp2mVte/DnR
JYIXjIqKmjx5ctOmTc+cOYNHcb+4YjuTEsqmf+rUqdQG1a5d+9WrV/SouR+U
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
RJACoVU80rczbxe7TYHA/cHeVDDoZjOSzp07k30IXXUH3g6sXr2aSshbJuHq
rFmzEHPp0iWi3+vXr/fw8AB5BnsPDg7mkqMzRQdKWvT06dODY3PmVhLu5eVF
9JuGALly5cJx1apVtMpV7ZcJJO4uXryYL18+uqtw4cLWd+G7kBK8PSAgwOrS
WSAQJHUw+YFQmjRpEkktDPz37dsnxu0Ct0J0dHTbtm3/+OMPOpVuSCBwW6hb
eVL4zp07TZo0AeckC+3PP/8cZN5wj/6FGDX1gChex44dWbyQF5fLly8To755
8+brr79O2vKjR48aiiAqXbo0sfHMmTOfOnXKUIi6Su9xxCggf/78vDoVgXfe
eScsLMxuqRh3796tVKkS3VKsWDFH+y4ZJm+vW7cuiiq8XSBITlBX0FPg/v37
kEjkENLX11fdhVmavCDRAd7epk2bbdu2JXZBBAKBS1CV6obJV0uUKMFkddas
WYlauv8PYsiffvopSoWRhbe3NzPe6dOno7TgwIbNm2LlypWp/L/99puhsOsK
FSrQkCRLliyqm3frvCGO8+bNY1MZHLNnz45b6ENpdJ1vDw4OrlKlihPezrhw
4UKdOnVQZrGTEQiSGajh09wcsfeePXumMlG2bFmM7mMVR7sCQUIi1rLTH/q7
9u3bU18pEAjcGcQSmbGjf6G1qIcOHSpcuDC6GOKroK9Ws5BEAcowceJEYsVN
mzbl+JkzZyLm+vXrXMi6deui/KD3R44cUcVUw4YN6fb06dOz2xwV7Oiesqpe
vTrxfPK3U79+fTZu53txC3XNZH6PT0d2MkWLFtUKr4b9/Pxq1apl11ekQCBI
0lA5OYkUXp0KSfLrr79qVwWCBINd3t6hQwfm7e7Q1wsEAkdg6q5uP2SY/gzB
bMkiJUuWLLRjSKID0mb9+vW0wqtkyZLh4eEUP3v2bJTz4sWL3F3WrFkTaXLn
zk2uIFlSkU82Go9geGLl7YbSk965c6dy5crImT4FYcyYMZp7THVN66VLlwoW
LEj5owyqm1yrH0gkYN4uolIgSB5gZTskA+sBzp8/nydPHpIMH3/8sbbvg0CQ
kNBqXUxMTPv27TG05KsynBQI3BmqP0PucXD8/vvviSGDuBYpUuTgwYOJW0gS
NdevX3/ttdfQ/WXLls3f358kzJw5c1BIPz8/w5Q54NtFixZFmho1apCvSBZT
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
MM2bN1eJQUhICO2zADmQO3du5vmGbUnd5MmTKfP06dOjGTLxpuXkrVu35hkx
ZE4es1XPcsiKeDsNDZxMugkEzwn2SKbu7bVo0aIsWbJQFX3jjTdOnDiR8Lyd
vbu4vi5VNTmzbpDkfJEId4U88W1NE6u4drfbm58/f75SpUr+/v5Jd9m+QJCc
gGY4bNgw6otJoM2YMYOv0r7JxNupt/X29tY8RzmXGzzThyO5qkCfXrp06eDg
YEfs+qmyQ7ShMIcPPviAeTtp/FQnfoZivPc8H0SQjKHp21u0aJHUebs2+H33
3XepaYwaNYqaAwa2GC97enoGBQVRt7thwwZqQeXKlbtz5w73xSDqiKFmXrx4
cXVkTc/q0KEDD+Exat65c6c6uCav79xCaSKMbuQNanv27MlpfvzxR9G3C14e
0L+oGiGqbBMmTKBFUmRLdvPmzYTpL1R/Do7mmjVo25zZ9QgRr9KMk1FumjGM
ps1QXc2rt587d454u5atcHiBIFGANturVy/m7WnTpp03b57qzXXZsmXUy5Oi
rEmTJpq0cYW3k56BhgAQm9myZbt48SIXwLAY3akeZlhFgFF/kSJFiBXgiMIM
GTLEUCQh3yXUXeAEsTafh+DtGPol9drC5cdIpGbNmtRUv/zyS2o4eM2yZcu+
8cYb7Lx63759RL8LFix4+fJlzufWrVvFihWj20uWLEkzWazfA42vXbt2Khsy
Zcp04sQJtRiffPIJLTynHPr06aMVz7Dt2E5YunRpUv/ygqQIX19fHl22a9cu
PDzciLtfmLZ3WAqElbdXqFBBeLtA4CZA19m3b190tWDspGpbsGCBofBtck/B
gu69996jG1304aaqCA4dOkQWhujc165da01mxN3hRdNL4BTMn03cgVy5cvGG
0eoMYEoWuYJ4ofH2JN37MPWl9lirVi0aX5OdjGGug8Not0aNGmRwjmZy9OhR
Dw+PV0w/6tevX2dtW0hISNWqVaml58+fn1Txhm2qHYOCSpUqsRzImjXr8ePH
Vev6kSNHsgxBwNvb24ir0ENK8ipPNvDLly9P+M8lSOFAVURDoLmhDBkyoLr2
7t2b+g5W+7g4lZyMYeXt5cqVu3LlSmKVRyAQaBg+fDgrwdClzpgxQ51hnDdv
Hi9ZTZcuHSQexavmdk6gJnv06BEZ0ALDhg2Ljbvtizopz+yd2TgCSDBw4EC6
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
qfD2/wce01vI
    "], {{0, 461}, {1000, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  AspectRatio->Full,
  BaseStyle->"ImageGraphics",
  ImageSize->{716., 325.},
  ImageSizeRaw->{1000, 461},
  PlotRange->{{0, 1000}, {0, 461}},
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycnQe4bUdZ93d2OeXW3FRKAqEGpAkBQw9KRxCRYgkhREqoAgFFkRKI9K6g
QIRgIkVQICJiI1dEEAUUIQGC5aIUkWav3LPXN7933v/MO7PXvpFvP885u6y1
pry9zcz9znnaYx71xHOe9thHnHPKPc8758mPeewjnnrKPZ50XvppdtRkMv34
ZHLU3U+Z8HmYTPTPXsfxb7IYdnZ2Br2WyyXfJxt8mszitfzUz/Fv268ePny4
XD3J/k9qy1O7KTdPs9/4xjeGP//zPx/+5V/+ZTINzXONb/bkC+qTG8N///d/
D+973/uGP/qjPxr+9V//1bpLT8y5vNLdZI+1pEnw+sxnPjP8xE/8xPCIRzxi
uPjii4e//du/LT1qYtbhZFeZCu+/8zu/M/zMz/zM8MhHPnL4+Z//+eGjH/3o
8B//8R88d63crcav3viWf5vHOXF5PnLrwiEfB+yf8zR22cdZuYFvY33aHVN+
sU9bFXrzpuH0t3vdYGb1oZEJhauLvsk6rN0j47Und5cBTuYN3NPn+brRHmk8
8zLZRdcnt2yOPpZee/l4QjcOv2NaOpyNNLkocLP7tlqIh5H7y7DqBPWlL31p
+MM//MPhDW94w/DMZz5z+KVf+qXh93//94dDhw4N//7v/84g+onCfNby42ws
m2M0UmA/bzF0dBnW/pGJzMZmyLfdpYHpyNV5AFp4zdZRkl04vjS5fx2S09/e
daPcWwC5VaDfQbrB2yafNo5ApIty/0Y37sFIeHXax/tvkgsZL9YhHxc9EXlD
Gff/+7//O3z1q18d/viP/3h41ateNTzvec8zAfSBD3xg+PznPz/80z/9E89W
jNiDx1gbGdRJ+sXGXfLlWejJNXPtoeW/R4kuhG1Ukqhc8e1vfzv/PEKdueU1
DY3Kw3aMzv1Bbk3XdTMu7oYjiIbAleOQcbGROrxKATytjFgGvTkO2NzjVoMv
tavfRM7TdRMYB+Dggqu7sF3psGWeeZ5bA4tM3BsrU43klB4UhfGe/natQ/wY
rwTZmeXet771LZNx73nPe4z2H/vYx5rs+4d/+Ad1IiD8z//8j7WVqG5yrmNF
OoKmdC1qLh/6Cokwk2mZlK6qlUGcXvXIIpCyJhMlpDAvg0SdB7S23Y1BZy3R
LsaeOCLpV34dU3T16nZLArMA10iZdWotN1f1WkG1VRrqOSxC34Zg0rjHV8HN
GJFXQj2SEB+TYOMGzbJVdE4Bk8W6/teaVumRyBgivFlgmjDC3MzuSKN2C7Yr
psDBgwdNHTzucY8bXvnKVw5f/vKXJ72gKfh3bTCGmqlxxIbxDqqGd6S2v08x
nNMwuIQJzbs+65Fwu8+FJjOz8BvftvmWutG9+vPveRS7rNn/+q//sj8+/+d/
/mfpit/4nt7zqGblMt+mXEj96DGMbB7h3R8b/u3f/s3uys/Py++8p78ZX+Z0
lkSwZqYZazYMxWROhpvQFnGUrhg+UyuCET9rvoKfTcQmn0ejSfuI7AefJJNI
f/nbND+Zvudb6jwc2tMK0pn15gNzptlqaC0Y0fp9GnjcZbhINjVRJj8rBAPE
ZmEWjAeb1MaZPqSLgJ6f+Db336BlfmNmU76loTFT7uVPn8N9Cz5s0EHoylE8
dWhEIjKsZsjRgrfmvS3KqOgh+ZJ+Da8yj+6f//mf+fPfNu07Bhf34oP+7u/+
7vCXf/mXds+cK+k5FNY3v/lN+zbl/5Sf7FPqUS1wB63ku2h92675KOxd92qE
dSRb9ttf//VfDy972cuGs88+e3j6058+vP3tbx8+8YlPIAuMt7MO3G5o03Wg
AYc2ab/MOoNlFjsPU0ijj6Pij1/nzMXnaJ++/vWvT4evfe1r6QqG6z/+4z/y
jfe5/6yf/Gd7JM2Ju/WzPutWazSBfDJvfk5/+emZ/QROuGnm/9MV+y2Nq/wG
5MERY7dhz+tle4DmbAIzH5c65A+z4ytf+Ur5nMY55Ut6niFzKf3lb+m/32Lf
bN6TvdYPTfpgy4D6z7wD5ExcAT2i2vSeBpr+i5xFPKCo3gDBVMKjVT4X1M0z
bA0PoGejmWfA4NRmsd3An/cRVGX4ZYTtMaBykwDcTzC+i5bSNAOMJiIoHheJ
GIZa0KdRT6YB9PyWNSNIWfBZKNL1dI07FvG34Ytf/KI/R4sLtWOa16GSKW6j
YjaShj2XB7LLfuNBrodB2TthpOc///nDL//yL0+5KbUaxph79t9oIo3Lx7s1
/MVf/MXw8pe/fHjYwx42POpRj7LAwMc+9jFDfOd1yHzcv2IHVK2w1zr9xV/8
xeH1r3/9cOGFF9rn17zmNdbw6173OsZov7361a+2UFZ6T8/+wi/8whQLJDWK
PcLF9J4uvPa1r02jfMUrXjG89KUvtYbSL/Yg73xPn6fWysy+0key7NOjqZcp
VyfHWZsXXHCBmf4vfvGLhxe+8IXDS17yEpN7tAvwuP6iF73IrnMNqPD5BS94
gd3PvfyWrk35Mrma3cbj/MxtNK9ufu7nfs6a5TPX+EzzRF0Qs4Tz+PysZz1r
+Nmf/dnhp3/6p4fzzz9/eM5znjM8+9nP5n3KD8ls8q/WNO88ott4RE2nUaZp
pzEnNPAb3TIDzUy/MRueFRS82/QsLWzY0DUV7ufZ9D4FDQnKzJZZ01F+ZGEI
woDkPeHS0Dblzsl1yu/8CYFg6Vd+5VcsBvGmN71peOMb3zhcdNFFRh1QCr+/
+c1vHt761reaQuKz7oOq4mee03W+49dBYbw7FaaxpJYn++w6v9E/YxEVMiZR
JcTCsyAc8KR5To0a99tlphfpkOHSLJ95lKZFm7zzG4DIbRwwcAA+oA+kRW+i
L9Ek74AsfudZKNqIO6GCPvk9tZN+SzhK1ALWoBCITBQiYuQzRPfc5z6Xe9Iz
4H1hxAgR8nu9lj4luXvmmWcO+/fvH77ru75rOO+88wrhimh/6qd+yt6f8Yxn
0OdieOpTn5qI6GlPe5rd/uQnP9ke4Xt6n3JP4mjupgVGySVa4TYe+cmf/Mkp
P6bJ0PBTnvIUa+VJT3rScJe73GXYvXv3cI1rXGN44AMfaBJcTko2VI5bCXtg
3Dkei3BxQBbBAjIgeQDG5GAvAGFkD7Nv2OPO/0VOpCsz44rdhVqcEY1xQAUg
p2XA72hwVG2W3xgVz6sLOGtmqDlgowFYAAiAifn5nd8AWIK4QQdIkV54/OMf
b+9ALb2n/tLV1KJ+S/el39KnpHMcL2p7CgjSbIVd8MNfwgmP6SlHk/6m/DA5
yRpjIHTELU984hMLZkUzfKZF/a7W9c5kdA10SHK5FDKA8Z7QMzXCXxim+Fny
GIRN+ZakD/AE4/xJ8rjeMRYF7nyGEpAAXEf6IJ2QRmJncATVcI9YnXfaQCTQ
jySds3wYS/o1i8M9dhM3SPyoIQ1IPA0xpAbyYxuFgiUKeE9zzvJ+owgyCT6X
UiZ0pB6DlHESPMGgKogKwpBv1HyMWCNleppaHBL30Kffl5X5qYXf+FP34j/N
QgJQ3fAu5cvQ4CAIQdTPdxGO1KHIVQQI8XFdJAxhYeIgxObz+bBv374EAqNc
6H0WdWq6gPybW6OwsP9latssxsFDH/rQ4YQTThi2traG29zmNsPHP/7xEjyJ
ecij3V4yu6lEABSSIbVH+OVTn/rU8OlPf9oSkjiDpAovv/zy4XOf+xyfU5vp
WxrUZz/7WYvY47Ylu286/N3f/V3CP7amTEICnVw26xG7f6vEMzD63WE0E69E
EHC7D5jZzy2Y9l/4whesVYzNv//7v7fPsuP5znV64/e/+Zu/sV7TewJB6jt1
iVHKKK644gqbDO9M0Cc6xclM82G+uJv8ffKTn5zaNLfNLuUJXQIkaolW0vXU
01/91V8lhNCLRsAfI/Pv6R4DEibv/mI/y85m+PgGmhZ+AVPjPk2Z9wTv3FCS
NXQG/FPXNkWmPLOBzMs1Ok+/TIcrr7wyD3KP4c3vt3sYZEJdGTjfeafd1H+2
z/cX10j2fHSR5AGBTLCG28cU3P1zp21u2AyRk7l5dMcpGFLiPop48LvCE1xX
DEs+IU3Jg1KYIg3D/PY0Yvlhij+InvhdpMd3Nad7czQnR6vo1oNe6Rthor1l
GGKgGDRUUDEGxnI4iRZqjMfvyVx6rRJ5UpKJpvktBgzlDfM7kPn+7//+YTqd
DqeccoqRcnA5i6+p73Io5bY6aMzbTqREswouelgv4azMWcObWCQuQVaz5F1Q
YEiQKWrqR3/0R4cf+ZEfsc+IjhhpPreGgxdFDoGaBzzgAe7AVsnlIbuc8gsR
5xDtW19wEHKS/dWS52oz7yE1EiPLW55D6Ask/PO8+Kc26O5hzxMoMzkduSWm
/Nq5ZH823dsnnfLErfM2mF8uhMA5rcxDIoarmzG8G5925C+bgg1/LUaAU2ff
Zz+Hkhis6aEuKxLn26ZdFg20a/i/pFLsGY/Ra/xjKY/NkVFt18msZN4VLY4g
qd3Xa10OejKWdMyJkl1lerDwOeecMxx11FGmrDEXFcVMnJWzOHuaeDZ/sBkc
i4bCrELfYyJQP2E6czmeXvP4iFJ0ccSkHzEmLfq9Js0ylpMLgGxTimOp7y3/
Lcwn37GnjrgyoP9tdehvhzU0CcilUnvT+mRNWcaJxCGMUcTaTORYMcf/RUZE
ElHmeW1m3q7WrGKfZ43QXyFte2xzBGh1amOzGmK9zmJdr0FgbJULCGoo+Lu/
+7uNNB3edTpjcNwqY53VNrdNaVEKcumll5q5jUlNHANSRykMXR7WzdnJo2s/
G4VNUeL44p5LH0sErxe1ZbrbI5xUs7txCsNq1Vi5eYwfxgRkKERYKSTqpXCp
Sxhi2VWtI7O2ahXYWp2oMppwNY6py3FPK4HNYzlASziVUmqGvRJYV4QyLqyW
beHaVcqiWn62rvJkd8MQWDlI3F27dpnhRJ4JC7aqzdGmlGWEHLGXf/M3f3O4
5JJLSgwZvykZxTbZAzZ+R3RmR27Hm25U2JiimrbktUbmRELrqvOOVIq40SJg
cwQ9Gy16giQaJ8xay7CWn2oZ43zdLXtbatkujdZCt7GyhEUZgY3YKgLqHDuy
XF/XsDH80A/9EC7xcNpppxVhpqa7cqGJFdNGMVRsJ5EZ9AGJ3fve9zZR9sEP
ftBEnLLWAXvr+OBBkQKirt1TL1jGeXjIQx5iBr1My8qy9VNXbdj11fFmZ72M
ybZoNYfXkUseT1yHic2xC0Mjb7fXNV+LayvNbha8b3S87K9KuB0kOnG3UShw
Xlgj1MTFoa4p4FRtGRgk6rqxsWF0ds973jMnBavR5UTkitpKS8xpw0Y799xz
Le79jne8w5w697j68tamPjJL6fe+972SO9bwN3zWIt/CCWleP/iDP2iDu/Wt
b209cO2Yipv95SGG9du//duW4WBWBNp+67d+y2IGsXQkfJ48NIBWJv9+JyNE
8oMe9CAj4zX88B91HLsaTSitT1bmuOOOM5F+t7vdjThJhu4+u7UvDsG/fde7
3mWRXOKUv/7rv27WRqiiPzlDU8KHCWJ2R2czqvCv+ahjGZSo4n73u59B9na3
ux1CYFqUhLSKJAMRG/JBhJcIsYCGRBhG0QbBRSHJMRmwBnj/Hn6rSF8W1chv
KKirX/3qZtLd5CY3sSBXB+dJqBrctCH/yZ/8iQWMGIMgXG48uaVGXqxViNT4
9cqkGxbJAEjf933fFyXqAafOzt0OSd5Zub1yYg0qSEjz68MKzHNldbVmRRvM
5Id/+IevEpqqadWsgcYf/MEfWDJosVgM1772tQFhb7RWyLfOSLCwq1T1iw7H
yfbKYAVSotoSH9+0u3c3jQTfeDjjjDMMypjvItNjnA+7Z6LhyasYnoB+MdZD
BrDX/YmmJaAd2vEFtz34wQ/+v9JuQ4eJYohN3va2tx1ms5lFvhGVQ7WAeies
SMwx4HdGuq+eGaEQAZ3UQCjTXREFseoZ5X+LW9zCmIs1M6HNIGDb+Ij6WuM2
CtKKpHuTEdKxJWJ6xOKOAOmb1ZG0avgD9cKxcQz2WeXJYBuJdec739noCyZA
L0QZHaZUKW6cE4aipTQKx0gEldrD9oYHZFIH+G8X6kW0XvOa17TBYZwFppi8
ytpuS8Ax9F0SjK0Juak/EmVkQJ/BLOmezmnrb7NYKc4qoyKrTRIq9awQYuzx
JhEAmysAgB7Fht/0Aa9S+dyCxPv27bMerSRldW4vt/+bzYBFRD/2Yz/mhULr
YDIuRzJAqgyLdkKM3z32sY9NQ53P54mBSbu6IWJ/JSZ5s/W0QPHiiooJ5YKR
BiksIgCHzZBkR27v1QGxeoWJH4kWfIy9DRT4Z/dKVA+FAzmSBUSO3fe+9zV3
NM9V0Lv5kSeMBdNMeNYJFFQTwgf1lMwcuzxG9IyGsP2aid7cEdw5PBm3RxcY
IwvUIrfiI+/du9fgjHaH6EUDasrSIEdG7SibO0kFcrN3inCgcAozKLKblhn3
/jF87pLxCES9URQoPUCUhJnS58tKm1kvbtoaphNPPNEwevrppw+HDh3STBtV
0wJ1Zcb8/d7v/Z70jM348tJZ40lHxZUVwK4CjCh4iBYDFOw7X1036wa0bKJj
QYQU5fmc2nMVQgARI5TskgR2INw2IIrbAItaPXcW0nHSEeWBW6ONNLb45KoX
R41FRiQxL7SW9jVgO3jw4HCDG9zAGOc617mORShH1BjfvzvjcMWxziKXFY2w
qJuidtOnnZU6I0WPRJWpn/c4vcd8BOqXOknQeoc73MFMgWJF+vzHDE/N24T8
sztG6rGKXh/BavWsYHhKGyhrCOGTFWHowiHmnviZ9llCrCRjdLGCbpiIWmRz
4G+S/ZDMCV3ke9/gE+OCzFES3zAAwgij8bLLLqvK9rQj4hEp6uzY4rGPTOyU
9FsrK2WgzR32ABjfEAojBOXLMGqnMegeOLEBaDFCV0LE6/Aql3EFr7cIwizh
MvFKxKZuzYt7tgttcZ0m3/a2t9lK8g996ENFZITFmKt+u1aBUmJFhQyupETd
G6qYydUkd7/73Q1nWElIdymMTpreyjG4OmteyOboLX3WJ9SuXVoWhzWMWNwX
uZ/PFE3c9KY3tbERp8mLSDJ+e2UfAyLRS4n3rVMTz1yDTGwT7NRxZLrioqEn
POEJVntEir9Imj2FPvUnPuERKq7wzyg6cUNtWpmlg9h2I7S0rIsyO0ibYTLt
N9qotqxbMjTESAEdLEDBl9/X6yUeumVGrRbrCRAwsOM0i70sWves+H+8w2Gq
+JDp2SC4Oqm8U/aD04Aux0pLt2dnbCsuDiuFGyF5HkyCWVksxZPPGelG3lnA
YaM91S4AxQ6Fzr7xjW9ERoy6Xrz1q7/6q8PVrnY1qH7Sr8oW2eXVMBRt5QKQ
yKOVFBdWg3SnO93Juvb7oozdsNQ03A8yMTOpVisgmDfkXwXtGC5JAK7gMnId
MgnLiB4QG49+9KOtMI+gmeMz43KzBH94DPV97LHH2uDe/OY3h5KFdCNtvvOd
77RCPurrKEtFJeVlGs973vPSDFW3Dkljv7iuHUMol9Yj9BgTl9SIY2sTtVT9
MM0SXRXZR1nPC+cN5UWsLAE8LrMEKeRMUzOW1EpQPeuss4Z3v/vdxvFVrexY
7ITvVDsCDcSps/2FLmUocMRkx67AvgC7kY8K+m/t8nYkuZJ+Ez6zKhAUPl0+
JaUAN4JB6AYZT3UE8RXAgqwHJIqZdi5tDsjvXRGzGJhE2o8++mgz4nqtWUOH
+4Y//dM/tXgxHI75Qnid+4ANbSCXAAIuMzFvB8Bzret54V640srkhhUH4kb8
n/ts0RZ0t7m5aWXRhK/IQCJc6A6CKLPdaGZGHSlAetnLXpYv7y1GD9KMJ2VH
qNiLSD6DZ3k5tkaxndPIMZy4RkDQUhHp59cEbotKGtlGoJ/75aSCJ7/vdldJ
A9SnjtBAENIUvJKShegoA+AF3QJYuoVzE/x7uz5z79C4+MgAXB2AddJJJ5Xa
s0yz3Hug0Q1KaZBhgRI96G4Fv5AF3TM02oz9RhqA4Xl+DQ2cav+v1tttBliQ
A+qZKVV597rXvUwMAXiGAIdScR+9ZdqgepOIPdMkMVSk2W67DaMKKmP0v/Zr
v1b0FL/zCIBO8sKtuWyM46rCd3v27CnPAO9MF20enc8IjmOOOcaCfT/wAz9g
7p8Y7PZHJAoMMWJd3Pk5+22/PY0gJCSDZQ5rSghyLzOBwlHIFHyKOQZZPDV9
F/zohz/84fYkSzWS2B2LY0azh3ekLJ1QuI4FADhE+rAUfodU+jpCSCZrjhyc
2MtNS60cf/zxhnTEE/KDQAFIhyBALIXhdEt9sYgFrFLvDgzAYHIrXZxb+pyC
b8O4Qkkf/vCHS59MZXt7266deuqpVoYtSYD0uNnNbmZtJiwGSbDd9E24DPwA
Cvxh5pHrQZfFVRPBn/5/xv5nQ0/k1xi5IjfS6LwuueSS9Dybc2WhjLaOHLxU
gnZXIwhg5u/5nu+xJrFdAiIWrgIibrArbn7zmw+3utWtCr2hhYg9ydrz3iLW
kVTU4yVDOYTR99oj2Nw0RaEUyo4RgQJ4WuYoio97EkM5OE+2blSXAOqgykhK
kIIsZ0gJx1azJrUp5uc633syVKQeQGPdFUaXTUR2DwEDRk4++WSDjUjeaOf/
X+5nr+Qxj3lMmQEdpBkosIQK8M3Y7DJut8uCSVen4jFtlD0jffvb375wm7VP
+ubR5ckhdembDoAehp2HK5pAiQj6OQHbYNCxfdM6jBs0UEUGiDKozWbhCu2j
Nsm9cQ9GpuLbCAGMAX4/cOBAsRxVRg7tChhoBHxlYRNgoaAkoxDx7XwXw33u
cx97lutYwlWsb9q9tMfYEeUoTWydpVywkDvmidtmvIc44SJaeq1Qzgjfa53I
P2Ag17rWtWwFhUiHSgVNkPdkgDVRPJcDoUYjjZwfEW08gEJjFo15OtkbVXax
oyXtEWkoPJ5nYEh3lg30oTLae06gXLUpSkhmXZb2127YjG6Q7MwJYleACxMe
L4LP2GWUgyCZyQ1CMDyLxX3d617XnoVFYyQGsYE7L3ihMfNalwwWsb+sF0RN
C5Za7cEfyOPXV1bY7mk0JM4FD0jWUKOg4J4PygjNsplrK4bGSjG3xp5YlqDC
Slh8x7MZTmt2+YqAGVZDSUG6CskssMtKRIRobmExr5p02dJZEQubpCCFXsi7
VVSW8GGtlKvzBwvf/va3d601M9bChc5bCRTmktCePDuKNF6gHB+uUFe1JaSH
iPwwF3wI/YbtIFsCO4mqE9ge+1XsiRhiPjyLaZ3X51R9iNclWEFFrHFS35Q7
MhdRH+KnBJSyz6JaDv7AVrryCpvBnsai0OxJeMl/gY1Bou8neWLAbQyV+aOL
qrBWYgwrm1xJls+D3IsAXSkjycKv7PAnA4Fok2jvMz4tahGQ28wY4+7P/uzP
ClFFmsSPtNqkoc3ftGPL0QR8UTJJIA8nXARn0xpK2WW2+alkguel1OB5ZA5u
YwzMQWnnd6KMF3KHJYlSak5sUYcSsWAehKwlkiEiLByIDemLrqN7zDNsYR9v
sXDQUyzIU00ZL5xieTLM1SnGrqH4NS2MVAi3Ml0WLTjU8tGx14so850G9WIc
+Pj0AVGzztHburoDvzMZYpHgTkk3VeCpwEgYLEZozTnEzrtCCJckK+tZeCet
6yZykHHVX4YeYEJoDtWp7nB3mB/OQzKnNzqJNh8+8pGPGBIQ47ZXxVIFvvsb
JlNH6Gj0kLj9rne9q9HKlVdeachHEOftp3KsM3oBzywdT53lEGkMkYiypip0
3qgOc18ZBmEM7HdsEvwuxILsKWgODxn64J6kuZX4RrsyWmZKXV9UUsn7w2bA
rOcWstNcZlJYTkAPSiJ6GldFLd27SyLdgIGLwCLBVwbBJqBxHyNkZGAJ4YY6
ECEsm3LYOStNrT9f/devSvMhSPGEXFdRRhHss9i0CMOF3FhF2lGZDLMuLuSv
seL6AGXbAKwz6LgPrEAUEJSKm/BFIBr8Fqxcn1db3ROkjweCKwtIxyD+Ev5i
eW1goDz5/TZ5PGWKC6JRTwEStxJuRRYSVYCpQI8m/+xRGv3xH//x9TTaVSbJ
vmCJPkSF5KUHAIADBCvz+/Wudz2WT2dj51gLLzNFaJAMcdRGGjSSFUnFxGA4
4HrLW97SyJpwNMZj9Viy+YHhSNraPYw8vEyku4tViqetsAbinIeiHcSMTnTx
qgERVkVDsPPYRiD6iJQ4eCSNJ5t0bRHQLBscif4bv/EbPGKOW6XGqJ70Gd0A
UBtq1DoiKU2iqTgzWEf3uMc9LMaJ8mKHtbpcyssSQDeaAIKh/t9CeIDz+JWZ
SQwwK9gbxYOpQ+yLd1wBoo1EdXAAgSzXMBq8DXcj2m2LaS9QXOaNG1curswG
I1FKcP3rX99axtQg+4g3hWAisuKjdgv6aHtG7h+GOy8BX6l0RoAdh2uKquZ+
ApIWci2ip5phECM0jdo2EztdEI3BjVRLw21wIzYvwq+nkUpjVZkyPmxZ3+9p
4WTWR/jpguAQyUl2x5CAc3ndmPBaQc3mH2wEkngo88RR3HVU+dSWKrNmI5Z4
Zjuv3cRW+unQoUNmwyQm2q4mwMLMWnZigMkgjbyj47JZf5U3vdOqbm2K53wN
erTTXyiEyzKrq/LkJclFvnxwXyKQ0fGNfAcuWEuQE3Ia1COHtAdt5LqIOiw7
gi1EJPLehEWx5hQiuObPcZh1UCj3wFxByTJSL0OavLiOcvdKj7xgIWKyEBTE
jude3dnWdYwl41GG1PuzWmTmEFsCcFQwwf6LdXRQBKYLrpDrM2UTYichAFIm
IDMCLiNHd8c73rGJ7AYl3KxXUgitpEO/7jPDKCNuAUv7At7Ja12wBG+iKH/k
G3tOnJZbz5bajW50I5VK5ikqfIAyIC+PwoKUxHEl89/EYCJHwGfAiGhewlC+
+0UuFzreLyYLEpOxQBMQVlKMGU0nFCIOSyTkrPEZaYGctV1Dl+ZPhKrzMm7E
KkISoyJac9prwWNszv/b0Vxq7oVWCOcASQ9PqDSbbFqTuBamCDLI30DjA+zX
VvbPfI0xH9CTLxAjJsabGatleOGWombEK9nKNGoj67iCL6sByIjo87vf/e7C
L5oj7b7IpWyEDddQpcqNIuwxcAJv5tMCbrIi1xUYwqgF5OglbCFy9LCxZyJX
CpokTjF2MHIQq4oSQPC43WAc450pATlsK22epW2R+Cyy5VnGga3DTl8zcVmw
Q8mTYCkWQ+qbjjspTSDsirJwWRw4LwSZ531yDVIUNAgslEnPOpIX3INpR44K
EbyUYV/TWl0RmHQwTyCQTVGkCy8OvBbhyvCwRhQRBBdumwVeU+hPmIRIgAw5
PhwsAIHswpYGogTRy2MnNdlJvCq8H4yIWAaITkQLE8PGnyeJxHUY6IY3vGFJ
XiHniX2RmOWl8hr0KV2XuF4rMTkJBUgXPsxFwhtGTAgX2kWkugB6nV2uSRz2
ZUgoPM0pQOSMOwn3ZotiGPoK2+g0I85YzQZpLtuKVX+5t1NdRrpgYyVKRijY
ENV3IdbMp3ubx8geAU/FVqiZD7xd/ETHL2M5rgg0kITqZ20Kw8YrcHlaEvIA
SzFpjYXrpKnpNHFd77NjzRCAhOllTSiMIPeMLp3BVcXCZlmeg2QKR2UJu+Js
VYGLICjVRV9zTCIyFYRLRplNucey20i3ctqIAiy4htELD+HDaHH4lslXwawY
Rb7wpglETAtStZc6JU1yy1AKOdxcJbYsnCx69xeE8E6oF+0ECIk4Qh0gD5Jm
VkTnULOY5cmlbnxGuJCYB9LuQx/60CSoj10mrwlgUGtFQwxMaEQy4JLJHUvg
ok8ukZRIQBYaV61V3pHjoFHQ+EqF8K5GSSAHvvd7v9c6Jl3idYJce215RqE5
cOw6NTLBX5UbY9EDNyMykDrMH3XFprV53V0tK0EwwxBIEV9wbXGRvGIl7xMO
YeHTE4wNdbmqXuDvU5/61JjlJDsEIZ0wNrEUxWRWykrZoilgZW4uM0KUNpNv
e5RxwlgMh/fALWPRly+51uitMzQMTKvsQSzGfm0HHr2CPaPuJ38d+nSk5pB8
whUGkkxZEqAsnl/qHKnj7REiHdpqRCFV3G88OrrjRfk595BilF3Hs8q1MgVk
0I72gXKnWvRFKYu2hKAdHGym3xkqpayb/KjWtDzjGc9wKu/rGSmFRsjmSspV
wFc3LRju5KkIRsBbRBKKjn69twATMk+o9JCjIZai8sI/IrHD3IkGpblPrl2Z
6zirPgMoSFv1jFVAvkCNEbqjATJgMJykIBkmKRwSHy3/bZdB4J4ri4Sewd2s
jsTQRPywwpDZ3P/Upz51DUDR7558HAXolypAt4yzMSZp0uPDUQj1csN2e7MK
MPa6mxWJ4fEHXor3M1goBEohGs33wBwn1VHMSuFcklouc7eMekEAHVJ+Q0Ed
QCK8VpbFLMwFoAsMKSfGUrUjAodwE2yzvJhbwBSDdyeGe+tCHQkyhBgtszlu
ldBjogMKxGct7u6Y6Kj2MP2CJBmaeb/RZZPs5InXVFqsK3JgXGzLvD94gf9W
4UJgTKQFI1TqJ7kU/fZuPHRN+39CE8pgLjgyhO41WNCDZoNmkVkIGfiC2vew
OK0IEiZWClWObyqMgbuyCmATnxONTrEUUfJoSERDnuo91W+wy261fAK1FigS
4mOD5yIWHkB7pn1f7eQaFQtjR1jQOEkUDLIuiVoZISTaEayOC75/rt6zr6ET
tYOzCBmrFEMV0oEwskw/sQwPiwVwI6ekUbEbCaDzmYgLIoEgo+f1ytAxVYUO
JaeHYh/uNbsY/0FpK6wqyoqxxUAlmlqOaJXtmbWAruj3ve99r6tWCSw9AR4I
KkeLrmOO+7WYEbkzB+YjtcdmxYsOEZUpACKygk37r7RmDxQo9DvPgCx8DwjY
E3w2y3iP6Omk3NlO2SODxvDXIUXSpPiM2tcdQxeLn0YJA5QAWOYCCrC0+wZl
iLE/CAmjXPYlUMWS0zaTCDYqNWBCvMN2BdjcGFEVwGl+RTFkchV7Y0j6siB+
+6EigX++wjSfvYUvxzihKkpMR8zSUYYAHOABShVam+xD5Cr+EO5MCkMYckqu
2SSSgO71DnyFe1vjAYAIxyFGGDBmDiEZTGCyGvyG1hb+orkC4Wh1Gdt71OUc
e80gxJsnS4LBi0DF+oL0CSpBRFxHUhK6zstElqUmBsuAdmEjZu880tPu0k38
t73tbWEp2JddqjNQKp5Vpk6qJiSixsojfuFImEEENZiZu7zSnqyY6yrSwKNB
Fkb0x1T+jnYw2d/cIh8RN51IJ/IJrwqGwdqTX6KwbiaOPUbVJNAgBrR8DM4A
UGRhOEYnb5S8t1zSmiXeYziFmQE+1D5iMOOimk5iIoSVKmZbNGTbCtGomh4q
beOKxsbi72HPfClFY5AN7MO6DCWZeEct0BESiuAVgqWF1+GV9WUnF2ZWqABo
srs87KC9L/PGvLVkmRfUBWmjZZSCypI+B4g6D0wLFUUHoSDIfiNGAicTGynu
3SjRA++LL744EP2XXH0sPSAA98JBBMES8Pq9vjqAt+oAx4cqMsPd5c5NkUph
d212AXsnllaIYcTpnGTFPItSySOl+XAzJAxzDmGuuOZv6V60ol/E6DgNQ3q1
+q1js1RFLh2hq4iyI96CxaTkSEzQEXWgZOKwLxg9VIG1vWJlYWGJ6hBxcXfb
zpgZBTpUjsgj1mNA//MAMeeRidb4MDl4kfQJCMDWxiTuqn/s9mvzaRHtB52J
UVts7a0o4TGQsLkI30TjyEcVNwIL0JALCyBYdOYenGc0ehgDOmn6vyvqTtSE
PFKROiG9ErB6Q6BKvSSrUYpRXnyibTYuD8ekxtFSRO/9739/JalON9zQ/td4
HXZKknnWXKzKEhQhOGrc4UStdilmYLOWRJqYNAupNF8Pa7LKpK2rP63r5oWX
xa5ina09+UKZbCgC4CIiWItpsteUHn1TkNEQIaBzNTepsOtCKyJEOAj/F6ON
qB8AieTj4i1kiGdl5/UdJQX7xb1KqFHgqECLOCAHP9s4EiyNNER7jejaxNow
Y9ksU2QHNBw6eXaBv7caVkJeMEPsQ6SPiPXCIHAjHzv1jTmzn6h91APPFU1H
U1HnpNCnC8S+NIlXmlEsFPKfSsAiEu28kIP28A7YyS55V2q8/vzVdaveIUWS
7tKxucikja/ymRQEdIJaQtr5zEehyQvUEi4ye2UVmllG7m2InM8Y+dqzgsgG
RXcddazUWNPSqZkcxXhjOZWo5KJnHpsMiJqE8uF2sWWwyz1l2HWnUDO0ilDS
g/6QcXknb9DcRNuYN8uy3frMA/tle2CzgS9mArkdhCw3fsruaTcp4bN2lgRv
CHSAqeR6GMBYKXSUmUG7h1RGH4QYhr50uqt4aHYHDQWUsUo7jL7UwA41ZEaW
mAoivn2xoii7TZixkA1/+YixsuVCwWvdPUI1wnAvhAYsNdCX+QSDSBolvNO9
jTjplqpyNhAEE+rXLp/Yt0SrAo89xJqKs83bw1BkuQxG6KE8AUaUzyaUI4dD
Bp9GUcoILiwzDtE+CIgSQgjCicEnPVJbutSCrn0Nx0YMS+xScoWg0J6WrFhM
12zkqzNc2Aw9HVqE+rRMM9jsmCRADxlLWj8qilk1K8a3qiFstDrTkXMYOh44
vVBYv2SIFyqF/D2mI4F0hTe60uDJunl3wiHOO0tT1t4RUFeF+1e/+tWNOtVW
IjAVLCiiZCzZeEVljpXlD7er12rtjf6we1iFxKyYHRznCcbJtNDD6pwyb2px
WF3FcMgHq2JKVeDCxdWuqgJY0BibpPAJ5ebFWMOKbnmxU7Fw6yZLoOJdBR4C
HN/JLlHkyfig4CS+p4V0J+1Oog/Os19Z3pi5FjjISBHXfp4btfoQzYCYx2FE
3VHGV7dlf2OYOJMlb0/sQ13tKAJ2QaBiv1hsdAQBDrXXBjYbKY9RvSBR6LCb
W7T9g10X9wLTEHLh5t7YjX1GVqHkoGZiHWRWo5mYj5NJd/+wQ3ezwY9Gg7RI
TuwKzdD1lYEeGuGQgH7/+9/fDGhC7oRYufYWZzakIWGaCGYB7IKuzQq1GvBl
e1ES7B5Q3QxkplsU6QD3YVfOwlDBd8q2AWOiTrrTv20QNCwVyJqXGZBbkymK
AcBSBLvnoQ3Z9oobssUWDCKp3JMBu3ul/o3vkJlqc3wbZHvmVwMdM5mejgup
ZQjXE1V4CXtytwmqAWGUtDrYCIPSsxAZHWEcgQ2BXbStBKAmpz/Mf0QnCYCy
QfTKTk8O7qzXeQTFgjCDsHyLp96tO9OB3ubQBGD0ACEZ8dK0CIvOl6HGCB9Q
0VA7BjldjFBG/hP3UmXUKpRFYEGW2DvLQhF+PCkC23Dm0CiImJE3IWttG5Hu
WH4g2sbSfkEilS4gAfKzRCUsS3a4LApyJEwCNS+sXk8RWUxXNiKqqthJOfqG
uJIOyopqgVLdMAmK9+APJIHr7LG1MlbR6IpE5JEet6ocVWiLvPgjHAIM6cJ/
z/ZutfVVPguVeX2zKFehMKTg/p6GmhJX3lGkBPvFDpFXVTjPXAheKM9FpPMr
X/lKrD4M1sqZqwAlPL8GoHW3VvI3pIXoAdoLsi3T3SUdGGEZgXF0ucymRScI
kBA+ImFIUBMK5fBrVdADYfxsQmi+I7kz9+4SiCBlBdYYF2kSxLQ2p2mj8JuW
pydlQkK02+3KIbplQojtu5krkUxXI2pvtkKYedbAEddkx3cn1cLQmKITArH2
lQ6j0hWP2K9b87/iyI0cBiWhvRJUQ7H8saU9agUwIwEneV7CHGQFWJdCXjtu
kKh2+R3rj2nmAqalhT4ANXIYtFCqQHqPfAnJbUKzBO/K/ntZ5DEFpkIUhjxI
kGoHnAhWt3LcMIHHaIEE8T0kZXp0Iyqy1joUDA8ePEgNVCaHK5z8ogmxrJFE
BgOpMCflwam3PRw2e4gk+uYootRekA5eMb2v2TwPIQMSgAAM9Za3vMVCokgK
/BpomHSZVTwuLa0BTlS8SVIoMj/v+FWyVmFsFbDgU2h1DfUqkHL0R2BPNnhE
WYdFrgaNA4G1eUbPgWNkJX2Ryk1GQgMbCcyz12KF72AlMXXESi1zlT0hFPIi
i4NdAalRwK0d9jILrDoGEQvZCcg2KFOG1NHR2lqBeCekDdgwkWENSuY46TMu
aMLFkxLy0LuqpGgWdQik+WOBo1J2YAesKDmNzcorcjwcC22TC7BDKQs/tAtG
SU6hMwEFQ0GoRXsw3XOOZE6R0hb/p6h/VgXO0U04RpYKxYJUQDAFirkgmEAU
8fPFnezhFWRPpvzjSy/sJSL8kU1XEYF2u+EeRAh4waGLk2JUquHgAHGRm4Cb
2NQ3TzjGzD2NFrFFPZe2CkJzRAeC9ilbl0707S1oN8O+JstQFJSoMwSGiAJJ
OB9LLzjhKypGRgc2L9LsMy4T+jIAIEQujtGSalBEKMJfsuoqgP9i74LLOFZM
8MY3vnGRC5R4AnidYkKchro7BHOymWXvkgZXtetFF10k34mIPsanijTyKe5c
y3tzUQ+gKlaSqnEHB3q7yPfcDouSViQOmkM7cjEy6ksgk+oJ1GDeEQCPFVYi
6jbGT4dOJF/4TLUG1SYgF1VXt0lpRX60sNfJm0z71yjPQddMhMIJ3wzS0AIK
tGGi1kFgUWh3GmQTxe6ifWYTZSIOYRICmfSPtkCYXuCBhK5CjCqJjaKVY8nk
GdqR0kXmZBsV9PM8JEC1v59s27mKo8SvnTCYBXjAfpPBE5Inbai0MRQTcUPQ
lAwwdf4oGE/i2ajzbQENUTApkpmL7asE1PguyJ3v2PIGHBAmT2GEqp/wX4mu
qb4ElxkAUKOnvZYABHJG9cJo8BK43m6KnLTDhpgd6yKJJBdX22b/a+4aJ9wo
/kgiK8Mj79fe6kh9RmeRR8fs4kGyT9BQovxzIz6yFsPqcgNUXVoPOQ1zoNEL
6kEkQ09QuXbaYGEPaOrqyyZvG5FPUL6b+2OUc0Eli70miZk+G0cIM+y8RVRb
Xg42EvcQM/u2TkFIWOU+VVaC4WDfmwDULm/cg5fO78wLP0MVRpCbHyGg6LuI
hb/nP//5FSnRi6YfuFRls4g/UQ1jdHSshAozOMAMRd3M4y8rOOq+VtUizvEd
zEX8A4wVtJNv4Bo847eWZpSIAg24QJ5YF9qeb5ervqYpTEMMFixWGJ8CP2YE
BtCthLnR55gXkR6JG0k5JKZ1TyxXR7P5N89wXdV9PIcrgVkJ1pCTCRsh1L5h
2BBmCKe6IoibMWvogJGhcSsE9JnPfMZGcNXAZ41BAX6zaw53E6NGNejABmLE
8QiLhvjHas9CUt7afYHDPEZ1WEYBZQMX4I0lgGegfVww09WpnqMyUjBVSUhc
awXKWRvBPThPWBqQE/E5lCu/4VEHRa3DmyTmGJZbD3nLr7j2hnFT2wZgcDfA
TxejKHKo+kqMgsIcBRSqEJIUiBEvxobHLlsOBBPWjoZFnXcbu3lLIBLhQ5U6
XqVZ0JGf313imZhKWMRICraJQAJhmPAb36m27c8pQJoQOQAfrKoqasjLI8AH
8hqgYvDjMpMBoHA2EWuBEm3Bhyz3o63kwuV2sjKo+8ZjBGsnSpBcDqmZtAej
Oxa0GJkoB0ZAiZbYPqpdzm9oj6iSosIBx6SEX0kQWYJkZ0dbh+slnR54oi1R
w68Dhtbp86M8BYNYOFQOgG2CFLhVUIHrgEYYamSs3sFxx6Mjl5LvOaHIZ00O
cqZsCOmF7AfSkasC4IxKYHlcLiUo/b5QANQnTgYzpXiWTAeUS2zMd2uKpkse
Y4cd5u514wE7cd83zbiIyYWJAsSo2ITciOnZXx9DAFPGwORMG0PAS1xJQPmY
3Jjy2ot0R9VR81LZi0D62Mc+1jcrx7f82p9zQFUxQgePWWdU9tVUbSQfQJGz
xQ6VasE29ADj5Akt7JBILlvyxD5q1/fHfG4jt9UHm4VoJ0ZEGQhotvschSNz
QFJ2cMyswBo/tCamadEJUg+HDh0yO52yZL+hGB2qRYswkMWEGiCjzvNLOSmh
5V3lTnCM2YVwxmzT/pJOvg64NWtIgCPmaKkWy3Cs+/lEGOody4J6cXrEEEqW
UyzE8c4no5DEtMY6KSIhQpLyUm0rViAZnHT+MLAJPYYatrHo1DzMIwoPDGPE
cDgjIAoO7RzcR+TREtoGn/AM7pd67kiTjLoPLoA0mkjCN2NAtKo21NerF1hp
//cAyI140Sx1X5Yz5gu9yEHLJKBzFlBIU4SSvo0iASn25ybn7y0HhgAB7jDT
CByBBv3ucDT1oMq/eI3nUIfQC+oEug77MkzGoIjqoky+JcyovCMUKbCBo/HK
SFGE9UbaaqwRkTphndHBO0cAogoM8FJo1oWFs+JOiR2KmJgYGyile8fqHGJN
FFIFJaANryoAhRjcaoWMMJpRfcu4aNyhJvmrnmBrh579VjR0Vx5l4zjBP+pm
J8ENb5OgKA6z1m/ipatC5H1hNmAZgkzu0FhJwW86YURnXnDmHQ2N8U0XMENi
o8l5kSZyXEoLrTQr6+otlTbaQ7KnZX5zp5wox0SfmMaYaVAQSSFWOeYtmopq
LuRwaRBXAhaJKZbgWm+/5YKntzLUKeRKGE77F5FlStfOEyLb5vGaGvncTFWw
K1MNKdX9K2E53nEotcMm9ha+rHaWjoB7bzcOnsdeYJq/XTupW6zrCCfSlDpR
i3Sks0szvc1mehiokU57jNa9OH26J3YQ1p++Y89ApIoRYC4lM6nPhPrfpbWn
qqWEVTZxGRMKl/oQes1IUAljXxv9EFxSQLAiOdKzI7flUl/Gstrv8VU41COH
kTh0iseiXGUSAM06i3Di/KQ5G1czpjHc0STXjzDjXeU3GsTAJuukbVqwPDyG
O21ouhVOZAf6aV9cx1TLFXjhVmMD8RDSD1eZpLnBcE/l7DUGc04ssp+Mlk8T
k0julACD1PL5ZMq7tJv8cln3l2U7QW0GqWu/YdfajGOYi2xPKAoXnSEAL6I5
Kq+fBWDFQB4J5wio9FvOC9SdXyRdMDowtkkS4k0SVcDsJPsht37syMRdBYKx
flUxBaQDPqDWzWLEetzU5vf+jp2DS2lWMUUc7/ERRzaJRCfhQaxCuTdKNojP
z0pPDp2MiHYxCS4eUAqW08XOnpHViVkRPwUBJCWYH6lf4l+4OY961KMigBRu
2B3IoQ1B1DoP/BZonzI3cEtzRBNzoZ/gpH2+eKoBjqpL4mjRClp5TIgrscCs
8HMDjDZTgXZBoMo7y+UYBwrkYSW5P+xX4EsFbWpEAxXS1onNIe472d0Plovw
JfU6WlTF2ZOXXXZZT2vERn+nhwKB3EoitW7V6V3WFbFi1DNjAxbQ+lLl+G2l
3lVARmRSIVNdVkKDqp0nF/D5z3++kBvokkgnUqHTTR1jmUaOKaQceR46kG1B
E4SL4pEN0ZL19/dX+VFPu+dFvqbAS6ZwlAJscIxDoe3ToXltFxljZ6GIa/Kd
yJ2Kz6c85Sm+M83CcOJLx2RjTLTVPYFrL2kPaQ4xEDyIPCXeBgGBYcxdcjQa
89iRAA0/SXNVSmo9aiR8rPbFuEzILhu4xIq2Nc7kk8fJagRWk1C2kzPwVO8p
rUCSzkvkrX1i5Qp2EDlSPaYPSWonik1R+szFtcYBmhGhdCFawxYjElM2Ehk5
ZXYYek3/voqhrUZao/3IWeu7bnurs2+8d2jPXSe7rjoUCBMfTXZW9kbTt6dG
KLcLjIAyWWXh5+I4Rkp9BWGQjCchrki0qA2UEP7k6Yeh1jwHhVVqRWMNqZoh
xUNocsLwEpVOcpw+7iNTmj3oQiOOn7WcY6Bbseblnmcg7CopWSoblNMiU6Cc
nFPSz6wHHTLBXcEedMeYN0+T/CE4fM8lGwY8pS6J5SFAg9CL79WnznGgPUbl
GL+S22hdVAN6TRmhIPKsgQ8UqhFZ0gLYHKQeMqmtRnX0GbBo9zi6BGfJIg07
F7e0/lNHJjl3TazrNztG5CmhOcnlozNYmOquuV1L3UoAItpkN6i+QojW6CtF
blrkCJNLNjVUS1iMnYhk6XY1uKtw4wE0fYFbTpAc0+AuFmDxm7b/BecUUBHl
Ey/E+9JzPx3BtqsBG9aYp8sbOZmezhA8ugwAZFFmw1S1fZx+J+DA79APAYgQ
j9twPiUgQ/SE6lodcYVsRxwk5MxyMKXyuST0wcoAC4MUtKpX64C6YczZZvUs
HbDCsMIxXKPypAHS1gptgegApGmlsZa8cXhwRbX1JsAlzIKxiYX/wQ9+cGyl
h6QvwoNYGtJX2yZDsuztTfUg62rsyZ64nGg/EKElZPJHnDBBrikSUedv8d/C
PEqdHbEx7UiA5QDfHKaato2V8YhLtcCzGdaZrAVEt/tnFYDt+YRLt8pwBIk8
E2DG+yLKU+L5Xp8rOkFEQcnUZOIgIAO1mgSZmSx+g8lH10GHHFDiwLBi6rQR
ONmFJ5Rb3BpFUVDAqyMO/RjtDMFnr4FJbo5EPhGyEi56c228Kugdhc1xeo9b
YfBY6wH1gTHWVqvkBb6kvhWqjKasP1dhMnNMEYxxcdSBo2YieTUB9RhgQgJg
kyvES71gJ8oElyqNom6IDOcPuh5s3ZTDoQ44UmKoVMg7uOAZE8ZWzEWJWVJW
wEww1Ha83ymhKJ+iW/n2JJckhFhYBaq9NX0fi4rWpU58H3WEYDgMT+eb0Sjn
m+pwR4wkbWXDj6RqoDp8EwCivWNwlbBFia6zBaHZoLnkQEwWkDH5zuFTfINI
CU9wEPFVXrl0A/k77NAgbOKU87Hqk2azHECFDeD1GPbzWEl+YwoNJUCDe4NS
IzBD+l+1esAGa4ukEu6PMqRxFUGQXt8BQ0UznxfrM9MkBBbl43XaCODRvjvL
ducyactnOV+1xRWaNDrQvR8b/BmRbnTzINvqNoHnQ0t256aPPPawLEZlSxex
4Wn3nL8Hhs2BR6id0BXxCrQAAjZRRnFiCT2hTilZhoGjVF3tr5UOH4+gd4Jd
xU23QhAAo4S1F33oxJ6JiSJMHbeap+HnMAbVxGI7+Z0ZkfcqDaZJkoTTXqXU
wMcJBeWQf7N1mdbR9ZwG+qBonjDC2fffKX3dOUOkWGCLnqatm0wPNckgj2up
kOvYOYE1JtgtbMw9HbfSE6/Dvu4D94PqUWwADKp4bCpLNBDflH/g2Lkh9DmH
LE1RgIswGgvNn+Y8JjjC1ERhcVuDgouLljQtCUQ+E0iBPmVdrtNIMXXLb1jC
JGh8a1vpjxjF+L5KptuxLVNmGBraeddNstzvmWGuFTlXQRUzG78HInPHIY6h
fsve7KGci29VlBlfHyh0P8u/QTs5/YF/AnPAsQRPIGp81anHMdNtoJYSSlLE
oF/Vph6gm34nOO73CQfHcBuCI/FWpsCjGxaXkkOFAFcSNf1mg917xl1NofPS
ymksH+K21NaF8pnJ3W1k7Yb9VOnFQ1YhLc3GnxVyg3s1WvV9Ssb1keKqTQDs
zgVbwaOI06tisVoUm0FcR+aNlBe4/2qFb4LcMHSQEKPoCwufMA0pH1x1LXXQ
mgP8bGLXpANUArsa1Uifevr4whe+cET60Ih3PI9CldXrXvc65Zxi+DWWEPA7
4RqCWNSplJV17crkZaupvaNJrM7jN7gPwrzyyivztbu5hIoiBydHIUOc2hC6
j9LmzIrP1oO57nrCGI2MBsJo98QRF3eblGYdsTEiAHvF72DIcey9DQpgHiQ6
MgnvCJqgYAtGIr6CEY0VkEXGrlJXTNAN+w160haxwTnqY6q80uWeWIhLryeW
rSL5eEdCkGDwbV6rwthqOudPG7F6iV3MSelIenhBlSDMm5OGyqqakPrAaCDi
E0uv7tbBEdsJ+17nwBKGiCXAgUAztYRDM6K8v14kmLpKh3dI353XRqWcwQe5
g1xE7LLohNwzQUXKdBkbUGNZeML3beoz1y80wNxgR+rwoAeWqgJl6hbYfAWz
jWAQcIIxkAnETtCPhDugG2qfqMSN6z8kU4ALDiF0xbhADeYd8j4slK5yRTnq
aAAE4v/OKGmv9QHXk+DDvyD5Ah3jOgMj5nLYy56XjT27YU4kKQjwKllURrht
1cDsIAdxUhhKjpk6EtSZx+dKeBOUY4oADoLIlNLcLUhGgunaxQiz+9WvfnXM
CirDEalIv6ssuKGi1jWJYsd/nxbJIypiiBhmeGXEDA8ePGjSB/LTrlzp85jh
dawjIHrFvrPgmJAqnZ5SLvCS8QL5EXQnp4luBw2c2UFcFGOUADZkBLwJdFJ7
CJtSfompBplRTQSKqdBHzWHKUdtD4AoScLUn6SZqRfKhH9jVl/0MgQEF9yxg
SJwylncbg0fYerS1GXQzcWUF8cfyTTez//WQYYGHtvCQMd4oadGyarJccBR4
Q1OSxI8imHc4GZMHMJTKLIUtgDMIBhAgHDwgTbUlG/AM5aEKNeAXMBZAHQpI
Ap1NblfRvR1hUU67xRjVWTrtssWHObUrkAPEkDkc9yFIRhu5V38OvZgU3YlZ
qYCcscddfNuk/DhE+8RdpfwlQtgPqg0GWWCwvYYsnYvAEjhFGRC7im3qhALV
C49lXveXRpvdRgWJkKH2UdZNmpH2sirw/RBh5B2JAzEkrD98QFVt5CxhztrI
bJ5Ywi87EionUwhU74i5hNcpon+ST4WhWSiMmWL7IXzJnlJjgJbTwuKrOAlk
XuaISEgUMSb8b+q/tUbl0pxMJAtjQSlhCFC3gJXnxzhYlQfDZ9/53OU1rR2t
xUKaaHcMpxCT9toVAxHCggRdUzaHNknD+XK1QjQ4qUglQJ4M3EaeiFpvX+ef
F9PQCPlT4QR5RWxPWbVzKt3NrKSOKuZEb5Nor0qpOCkVyzqfzYli9GKsoMnq
uCp1LoqBhVGAoVAKx+IporaTaZ9V7LTTvDBNKKNkfTfROYKWCAydnM61pH+V
fOaSzuKS1XUM9226rhlzjQ57lTeuEUIZ85YIFPY/wlKxbJk1MvX4HazBr9xH
NR0CmWcxh9iACh2FrmItz9Of/vQpij+JWhK40C6ERvydHBpyFPcV1id9gGWJ
pVpwMqJfvhwIvwlCpN8gVs+tr9cvMzcbgIG2rMeeQZCgLOAKRWowhzHhoHLt
XMALGUZyUcny7tQIe14VRJS/YlLqWXIogi96Gg8y1lhg+Hvgwtbchone0UlE
Vj2XwD0oVNEM8swPWLNWG56A80n/sU9gMDttJXhjn8fUH0TCQxRf9Xa+2/JB
uexaIThYip1MQjFaxvBO2eRzhDXc/K9q8S5241Y58UsnOwEANZv4PcvoDdPN
vjQjqrVjghZRJUB0WSlDRiVjYXEChfc0sfq7RMZwAdYuhj/UzhpMQp7IMw5J
wKKFjJGVXbGNZjfEiFZHoWNkn+9bNG2I8r8WsQsZ6LjoW9YL+wtp6mAFJsXA
eaEYYGVEkUaiZdN1beG2NYwHwe94FTrUgBdUkY8VB1QbtiQP21EjxZ5MylDq
U0df6w+9wRC8LqrG9+7gKJegJa6Hm8D4ETtl6c3Oyh5eZzurqPiO4ifwpcMS
IrcW9XuM8i/2B7OwvEgnQkgFiKL6uG3gC7lSvOTIQyVLuX1D9VmOrBXOsHty
fRxmipxMJIMGy3Nnn332ROVNrDX19bKZy43owyE7+uOFiAMBrHhmM1wdpimx
T2dEyGAGzGHkCwtkMRzwvKGLsnV+TEkEQzxca8k9pqNDDjCm9MJrbNGpw03m
c7rhK/XWthwZtlbJNo/cst6Yg+C4D8AOya2zCmAPpH8uE8x8pqrZpM4mep5g
AZoAkCGh4k6PgDhJJq8XO86sYe2HGNij4FaOt2gCrSQLmvHFsrTCJe2KSy2f
gfCShzTpayp44uGB/HgWjUydIGKsIGFfGWUv9iEaBAW7mejayqryeaMxtIot
nKes1lkgQiCFSLWEWzlAZpxNVjTEGX4jo4jFj+Q2tZlIukzFh0ANOJlIGdmI
z6H8CiijT0rSga+nz7S9BzobO4iV/2QXsAgRUBio2qyh98mWJX0zHtGMkaBC
rO1inxhraN28cZeum+EXnQ/bGEZ+POgTfgkqZZ/hD7rU+bxYPDyP3OGkb2SY
2kQVA/DkwssphF10YiA0p+V0vAAWxqOkDzjKe7zkZ7EaxS78SZ0IWFiAGFY8
iybCARirbMh7AmftggUKr9Aew8dpdaE05plk1tltWh9bl0eJr0B1eDvaByTi
OQ/haqaByAYiLXSeCfcATTQUPgvvxM2wKykbJyRLvIe4BOSHEMZ7lN2DtUFA
JHmYGcmjdYxM0o2wWeWX/WWkWPAKCWGwhXNvy2mEEz83kZLAMittzdhFxSu5
iYX4EYqiDpzkqy8mlN0AC2FjUBnPQBHISy/vH7OklvX0nyiBNOetSrA1lcQL
woZKRPA2PHMOMoOeZCIWICM+tG8VSTOcAYUUQSQiC8ubKJTIHURqlSTBOZ2S
qet4Pyq7wJFK9oXqieAiFangh2h3KD2KaNbhq+n67QLzNm6tb5PAHHXYJfrb
zx6JfvK+0jY+DRULRCuIyeJ/EhRkuCDFzwxqTZycYyeYAfkT3Oj3HKRPHsem
ILSJ4EBIaJc8uZn4sdoNz3f116bhrAE4bCf+BNLeXiFt39Glob4z6lAXFlFV
FJSh5oBatilAlIZCpJpCz7HaoBx3qeda651X/M4z2GcMjOo4bIb9+/dnSt8y
/BO0JQKF/AJTOi5pGSNc8SSk2LaC9+uiZfY/bBLQMoBnLkcYIAkowS8GDEAB
oKHgnG7hTGSrqscgHOaE9RhNH7wAUSDzTbygwB2WFYShAu1Pf/rTBRs4J2CJ
P/RpAk0TdYEOUcHuu7soH18HCjuSHaMtsE/Q2Oti8nYtN2zULLODwwloYe9S
3I3pjgBEleMF4wCitRCCkbOZOY4jw9LmhFIbckR0SDAxSH6HF2TcSWL4Ocmx
2IlwJbegnAhjHzXuPfMatY1CSHa3qSctRsEflK/G70g4OsLZYNtdk4hZwB+7
At84eXQQiyqAtYrHtdISMYnHwtB8++MSLhDnqE24BlYAR2IJm0qCbgIGP6m0
qe7WscqolQG6rePEB7gDOfYyuI13c7v76GY0dEFXZFfQsLjQxD0Rp7ijcBER
MWZ5UT5rMkpgqob7zc3q5HOhu4781Gp6bcfFb7gergVLoojPUKV0zwUXXGCR
Uj/dWPiAWKnVnfixCy984QvH4HS2/W8PNCQ0D7fyKDE1eiZzjFqgWe2QSbPs
7Dp1rQmwAA5ajWch2iiRo4Bk5hTiwJ4Y6PH0eGKCwWconwGwqkqTt3IVPOCr
hEJwta3HgfPw7+F0SiHxm7A7ERQQMbWqESoyQrQVSZyRZCL7dpB/TiaxjBoK
xQlUA0DEfNSfIfxU9/5nbTDjQuIQoOQ3wlLJ+Etzvetd75q4AOkDByONXMJk
LNi3rdDBMGhBFmssD+VyxHmV90c3GJK04jsBdCrhMDgxQjEMMEpJ9MLgRHTT
2GL5GUglog93IFQOxzMOJgfM7qM5vAblNbFnyGliQkXtxguCIgwDhxH4+cAH
PuCyvq52lNDGnmRYECVoDKduTn68myp/hDVJ4kF46huSccvA7gFk2lC5VFbM
zb3TWqkkaVVEEYmLz+h92GjXrl1u4u62GSO+NIoIcJpFQ9Hj+eef38r41ZXO
cW3NTsy8eT12DHPhu9I8uIPr4F4sbFIexcepxrWPKpeS1gXbvBg8m5wqUCK9
BYr43StkJnGfbYnc+HkojmY+ixXdg7jC7NWmwagCeetaAu0pnVIPYw3mZbe1
QIASdF/LM6m0ro13Isx5R2ThWSEItG8x8h4KsZNEayxJMEXQ4i6Rwf3whz88
kTUcrV/+kJbIImo/sE+R2/Fcs1B/Ye/EYLCUkSFf/epXQxY5hzUgSPqERGAk
O2Zt1frL/ukJxaUGwNh8Ez8yUZvLQwLwnvIXqCCaxmRTto9pkLGUPk/PZC/p
2EZRwvo6KE51ExJ3mqGGw2/YP1rk/4hHPCIRO0aeVhUMZpQCOaBWKlDvUtG4
uSK3YhHkWCByRyXIdeck/qAT5p1kUg7lLIwJIQg26FQFeJ7ziaUnveIIYm+y
97AHwRrfiTRhRAhG2H06xLzVzCbBtWQt1JEHau4WHoR3ESzD1PZrlE+I/XZU
2hnTTjzLWDAwkfJBkI1VHha91S47lwsubKO/oGfPLkxqnWdXsi3Ln7Ay4IcP
ybBlUTKspPzOqRPNZ5NRt6LSRXkgqFwCGVpmSv4RuMPcSSJqXshkoSQJSTnj
kb40R9ll3Iol4iehVh3X1qwSRoIRJvlw6UTkzGfSrOAgjoMo92buF1k+thV0
nTboIAIBYok2yOQG2kh5LANPdlhreyvkt82cIINFv/hXMc8L0Eomu6vxrLTZ
e5WMLhgYdvV76o2ZeBC00Nell14adv+rBY3IeypdwKGfp5qTaDuKMbV7Os2c
aJgnIThqA3yTAy/CbyvNVScgxwp3BVMFjBLUoj72XBed0WZFTGLgM3ZJb8BE
zALaok9yIpg+RI0Qp+IIwigCbbKV4+ZT3AIBIdC1vzSftTmbK5yYqc1njElu
nnXWWUfZIU+RomZlK6WWz+/j9NZVF/ZhICwFKo6x/CTy6Q+LmExuV2sgl0Ky
ZTBTdmiTNeqS7TyT1zIxh3+Si0PQ54Py9TXlkzecW917nab69abhHgmYPCjo
jRI4zq3ItkwbItBn7AnkBGajNmn3a/2Bl5XsNuwxKiewDkG5j/G0kUdiGIdF
nMROgC6jw84GB4+pLHGs+ZWYWLAzPEVjGBESZ2hwosjQDAvropuEDBVHc3D7
3Ll+xwPd2tCfZ0EzKpaQRj5crZiDdXEDji6mMg0mGJWilkJzG3F3sqiOvt8u
tz6GuN2529YeY0sp6wgXEQAnJYT2XTYlsu0ut7tdB0Uqi2Ydqk/yGs1LkKkS
zL4K8SxYfA346MKH03ymUZjQBaZaclh7+oqhET5DLPjDBBe9PqPQVxPpw4Am
hwBWuTHuu3PrNdMF+gRytDBZx47wjJGV7zytoKy22och+Z0Qt4QZVi86Cyce
0oyoI+GLIOTZRI1O1nUncQIH+LpxJxMkHNfpCyEbN4+IQJIkhHI5+aN4P0Gy
oSu1cfes0FcUNYIW3meaUSnjI9lE5c2ylAe2rgmvaB9Z5s+dLqCCSo0F3niv
ckG6pQeNCGtS3zApOuqIwism+RC2bMO20RFXb/Ly0vaFKAheibX68Jfecan9
9PkM31Ajv6vwJ5oOERNtHYWdl9rC+OjGZ+QxJAzShGUVOouLHBkMQAUk+CWc
7BCXLobsVeBABKQAIQlDIg1SkjyOr4knRXeUsUHyIJgahrhhOqOle+2QnMyx
mkRYQ1a92cMd93a2i+RK7Bd7EqkiwkCYEimp2cp2taODahKVpkwrHfoQPHr7
zLi0PlErqTGMEQ1BemnKxUrbrlerlcYdDHrFSgsrleJgEzC1D3QcVy+RNdbl
Mm4CLTUZnxSbpe9ZltXz5KiRUwYSVYDX4/t0Z4CdW7nj+KZRFCo1FzjEmClk
VjHxkTaq44iokwOPaQZIfZ/9iU6VIBTBAhJMOq7xmX36IUtcWixmotmELVmg
KW9abatEldkku8ApLni2GyYEg9Gv93s4QUbiazw1EEezuEiq3Gca5CZLuVl7
4GSUcP5uQwkHWuwxESeLT9tx0CaKgqogPewisnNUw0qy2Bvq7lAIOJp4MzFt
FLlRADIrv43Vv439dnOnyuhvFnG8aUEqMITYIkiFLlXewe4Jttau2LDpDUIZ
mPEsKaAeBXpI9JGlRbt0G4sYaQT5YasEFTLNJ3WStZg3yQzbDpgNAWdlQ9Ah
lP4RZKfJ5IxP1tRI8oKCSM2mgRlw87LPowtENCEsLEaGyEWlKyVDiEeHYGk2
qa28o+q+okt13rzsRYwzRBzXqHAhhOHnglYjZiQTk0/GXT3Eh8+47olOsgaP
51lpDnGMdERgVbX6lBvDgH6Pdf1Eh5eeIfFL5tIL5sKGzXPbQAf94SfuhoLw
1vzL2N/dGBlB7lnsBDlNJkF+ptWBjy+JZAEiAkB7EN7TOwlTLQUvDA10ycXH
ZSWL6RH2xhrUs3kn57zNE5SP7EJoyH7hM1EviJIYEQUzCBP8GZ2HFGVm4fUx
xx+HbCWdnBF5IHqy9pAyajwEEj02Yoo8AjQqlYzQ6szj4SCR8X03HTGq2odA
CDvp8MSuIMVtxWGImwNFr4VgAkuBEbMYJXI1muqDcWQ69+f53z0QjMwmvHKw
p5wcylzJrsPdagOJuhMCZYDJ5GWlQSSeS6IITiQQQecwuha20A82vZ9AMzsy
CoEQ2IglMWOM/EIXgJE1RSOEUpTIxMpLnkAs7gxcLFxG5sQ+JPwb7dwoITB2
oBFsAmhHBfDRiZr7rKBouANrQDX7krFNRmV1tzJAOVLVe7cKtG3TihgAOoCL
mDduI66PSKWfub9nTG7HnwqVxy4P163qS2shktCq3l1xguWzrxKKv00rU9YT
I7RxICqPcAPow5J2x6+fiMP8iRUgc4tx4nO4Sx9qTurhywhoooPwbdiQP/on
YkEewWjjdvbk8nVoO6ylWcuAQl7DgHcL8EE6U4aoLBJzJb8bhMNWQVEf/lAy
J97o3pxYw/5nSdTaQkIAspZqLhHqi/3eyBykvbQfGmSVVLxc2+jsS4hNq6rr
w6JLZanbUlNNjN+UHg3EGGKydVcQxOmICLW7vEB3bKVr6gWkeA6+ICs9mddx
tAc3yCLHgZMTiMOHNsL/tWfvGHHjjdnTpB3dzrTLz3cJM6YXtas+kRs8VAgC
iZyc21FD8w12/7opYoThYMaqw9TTGXa5PeGDd63VkR2Gm4z409mcZZYrq0Iy
WoPrNgkz3R/7Lp81a6Q6KV/0DbPVjtcyUqwrn2bY8irv2+KTG41W3MlnGcUY
XjHSEVNF2yejlCL11Fm2Z7nx0t7oEZ0v8H6icaD76U8BJ0waIgVLWYJqYGxy
4B8xc8TJyUHgZswBnDpcCnJ6xB+k1qMQv1OYWUQD8sxT0mVSEq8K44AWO50z
gS/9TAmZVv0V56Z1Dl+/ZmpQVXZpV6eWawQ2rTid+I5WjgFH30x2NApiT2ux
QZRv+ozlwV7tLyqjUWkLs8BWwWCHDqlnJrwUotZlqDGTsI77MtjwP2g17smW
x7e7IRSIis0gFKpBdRO/862dwgECFVA395H3aAyVBcFWWmqbvX5Tx0GORt6/
Fx2F88Uf5T3wZic7vhMhtFzqHDBIOZgReenswrUwoT5VS6JXGAXWsvecz4Fd
FApULf5SoaSbBCJqvdWFWWSj8HhWIBQhInJ6TTEuLAOgNClBmyuuuGJlpTut
XXREcsAyCzs73qFyWAY+lZc6IR2Rr9rVIJuOrnw0L4opTC2DotdBXMSHpSpV
l59TbxxbkJ33rML0ly6g7tJ90LJVZN7DtOgsDYKJIpiLnShpymAIAWv1D845
bboZNluZYu9kV2yPe+qI5tT7qFjJCJ83YnqnrtPHAsPd0Z65ycKc9Fs3+mPN
tGuVA+Al1OAUYXO4XRgsTxOPUUaXbO3BgwcnMaAuujaarwGVmwYAar40RyTP
scpvz60kVTO4yDH0qzYdplhYZrVLn8kqNqsExSp0cd1y0G19UDREBo4oBZ0Q
p0vzUgfzEU9tn4MuMl2vgjOe2zJ6XeeUA7dWbbbPC/dq3nA9UTIQSnIQw6ae
wdgKwmmY/xopRvjXC2hbIaMdEyXedEwLDbC2UmChpjDZY1tVpK1sjVhxHYs1
NFCJdpmK53vHndVrOpIiQUXSMO3T4FSto/54+MhTJrqARxQ0QDtlKS+5uwhy
nSCBMsPtksqwHmIUSbQg8od3fWlfvuPZlZq3zQSl6l7ltcS+vcyuAOStVzkb
ilFW6FizifWI+F5UrWCQgkAyUrHaKMxmK1oEBSSkUf2kiToZCWaUG5YgVigm
B3sBfutb3zJOOdIkZjYJD29mIN06tkuIyqt7LURLhnrH98u25u5V767ClQrq
xEzW3PnOmHgCPE0rMBALB7/2ta/1m7ldFdTbAddUntufWNFUCUMvsCg3+nL5
sboN+x9TED0JYeCtkpC7ABCnvFcWTmh9WtQH/n7VUyKAU/aENFtMu4fij1IT
qnXJSfEG89cavHfHBbXxfLY0hd+dRHwG9+ksXu1NAppRz0TiI3dLPOW9zcMC
gjRcMp7iAmm/m5XhxVJSea6K6hIDY18G6+IHren2fBEi+JB8Ix3z1vKrp0Dx
zjyJxUkZksCNlPXOMP5o0wSa0v3TMg8XS719DTHjsdNXLK+zBu/vs4nqB00+
PpsAqbzolti3AjcYus1hmJNiUQlOvEjZOA3p91sEWo12D4aJTgVj+RLm9M5O
u5LwfmspKlcsspYp2A55u3p5jzSEn8qqRh3Hg3SK4aV+NhvNbAh/4ranlkL9
52qFIiFvBDjpUxDSxx/iVFr+zsSNGeLMMfnZjrB4kXfBy0brkRnUVk59kOWd
YSrKsROKlqCqXO12FC4H5K0VeMTvw2lFBa6jM4iyAwvC18v4DLLRAjtCOjif
aAQcUBXX7ISsf4DU5B0jswCPmN7Fe/muiOnenOY7Xofq9UjtlcB4aynYl/uu
JbOZrehiZgVfT+Njv38m88QHEiuyTgTLqs5xZQWtI0ubTDPDYJSM5QFuyH+F
22lNJz4ibJgnyaRPfvKTeVIPcuYPLdhDR5pQ3cwALaIVrwSmadbuvjQOe1aG
DWKsjRuNgUcgImWuLdjZkIinRgerhyhtWx2sh/jEfvxh2FCKqvOruuBXM+qF
JWa93rZQgjV/agVxjaLjWWh9CBkqHSLN64GVDlvZwUM+8jDw1pSH57UUk0Gz
TvewNo0eAbR7YRnQzgE7thMzL+KGCuLizWvzI9GdDbVbz3Lk0W4VYUzIBmuO
xCEWDRJrpy0NFJW+Z3Xc4tx5AbEDIoYB+IwlDH3AuImd1i8wfMB3PJdMWziN
LLyQWqNAIaFztDKoQwA0o8hlnUikdBI/KpciqNedspR34JTBorprUTqvXItU
zVqo//LLL5+V58aG+eh1DIdwZ3GWSpwpqeHx96+f11j48YYB1OI6kIpBjqjD
jUgGRS1MunuYhRIMVnvxHU8z6jab5kidlj4jTnQ8OHaq5wW7yfKrH0GYJ3vj
yr85NaoiXhCZROVkbCw2w3iwUUObOR3V7pvST1M6gVcQY/Zznum4uUeCGSuD
EeLHJR63Z5ppbhpOUfojh0dNTnVAqnniDQghcIl6xmAY2anp7g7BCIfKmNtr
5sx4NecQ29Jf5I5zK1yqz4oYxxWAfplvXNnUY3fDsIt6i0XZUklyAVhjg4gB
gtgIgYZi+rJP/g7DMBkJy2/9H+YtpsKD8kr+THvnOiYi05LeABtMmIlTUdyR
uk+6rybgD77UWTRcvQEX5512Qk9oI7wkC6dxjFGw3LoKliMXhg3D+AZqY9FK
+7+7g5pYCMndUQsvspNUFag+prRdcx1xq1zPsE7GNrMXH2FBl2aMk+sSt1il
QHe4ZTrSEzMACz/g+yzebS5Hj8x33jZbP4UQzYrvoV5xaNNob1gxtN2wDYYI
Nak6yNw1vi/VbTfBD6wWN6Vq3MCQtuYOu+GYDldO2SLKKMhgVvCk7UQ6HIWs
u3wPgubKi+7Ebbm7sxeiwIfGqf6kQFfnrExLOCgn2fY1U+9rUJGOGDMglMhx
SJaf7bONEAuPh9rNavQU3I2Vn+z44scG063PTD5QTOu/X7/SdA7DUWpLlRti
AQkm1C0Vrs7kSohUm+5i6sgCAWZ8t2Wr6UMar6+vjHKygDsX4R9YkWqUO4H7
/nfeWeWM14MMDhsYxSiHLYVr6g7IYmEpyRBSY1EoZ9rZU3SZ/vhOR2zcwRrb
mDY6PH6I7J0Cg6pkJdZ4UnGrmnWKL9OwHuWPxKITiS+5YHr5CKSE44A6Ed6I
S7Gbk0iffkEfe/SlgPJ6FahVIvCiNBrtRrSaIgmJyywRjjEaY/NtQkUYbuSh
oS2QQdqbzBWShKwYoSuCY3EfpYj1/QFy8XeX4rKPiH75pi2j9rxShZIJFFtg
onvdcEn28/p2PY4jMvaOTtupwCAyxB4AtEZLK8C/c0cLh8t+JptWvoarqjMH
KWmuJ1INzukPDfOPooanr7jiCpcVO2WLTOE5VGqNrwqspnRHEgIbZV34VJ6S
6Uliq7RK0FhLsXAFPD8W0lz5LFDgThUUnj4BJhVXUEqkBDEuE2UlIXxTBnQg
tNWTArkikblABYhY205KDa3h9YKLCBkUDWljKhwL3g80e/AeOnTILhN5wbLq
j7WNUpzu/PzhlagT385w1o7Kgr6IvePx6uRw1WWN00I05fjDo0/Us8eJLZ4E
PiszHilNVO+Mpo+VRYl2y0wgY2oFPHlkRr9fv4w3ETljUQkPSS3VAQ9DlweV
zcRFlZsCbagvSUnbgn2Sz4/l8uFwXFYQG9maCCv/DqxQigQWnWHo45zjZZK+
Ji9AdoO1ASFyUw5NhxSwm4lZaV2IUTqe3vGWHsBoIERENJBaKYiZxXsYEloQ
ELKg5hgRcSW65ush7XdptjtHjpMuIDUIx0EuBGE8m2u32dp5WapUfp55Zj5h
w5ZCuP8JVCntREoXUC4cFXGbC94R2wgCGiv7pLRuyq0ihdTaCV5g3A2PeO6h
XtqucLVeIS9WqDtz8I4vheZBXubQTUsCfLtthVjeTJuHGQFWI2kDLXbV3i/J
TF/rRNRzCfK+62WAIiU5txgImHkkyvEOwSc+EPEQAk387kCdOWVil4B6VjVF
H5omcR2oiWaMUCfJFBXPEjSAUhPfTVR/JHyBKyiUdiE5DdlxedtKHG0dtu5h
Qz/koZYJEaF1BEyrCNpcEUFqJ4oQyhoIklReXT0Su9peG4YrhCv1CRhGBC4P
1zWEI11OeuuEd61sQhaH9ey+vHYtjXpYfNzF3GnP8NGMg+g/0XlMTIM5oGWl
xBR0WL0/WmVfNPS5+PjHP36S9xKely0f/Lh2CyOFmJe3V/dEzmPc38g6Xhhd
aFa2PcFCx4xmURMyDKGFDIErPvaxj03EjVAkNbRI7iTIeq5/+ctfPrE1i2nO
XuBvBEqX2iEMG09mUTCqyO7TKpsD6ISM2wYGrN730uz5aNayFhrxiuRDCscj
9oQR6O3MQujikL4iWbvjREl3mKr1Koy031fSxotgSakfAziSf6toUtEmPjLW
LS6DVu6tccN5oUXdDY+M0unryWh0lm8SlbpZ+/QCJaLdDNJmELfX0gtEoyO0
CIyU9UV+RAJjiVQnTzV9/ocqSvZZ1BEzDkbCK0BsoVskKamAQLvB3iy49A22
bRbJokOAarcuD/qX7niM3UzkMlHbKXVANjdJK22N7iuLA/Hk88smfmhzMlQr
scV9E9QX41CaiyAMXkVOhew04VkA8mOVeW/SCAVeogXgAbnjCWGihuURDclG
TLNuDxOZpfqyFGhPJ5jxjv/Lvbht0BoZcYwZ4jkwtOQe/VAcq/1hl4q4jdMh
QQJPrPdy8HBY+RJXIC7Hs4jHB4pkECycEwZRiyWT15mapxfhmH2tLdtZANml
tW1UpclZlEyct2JwcrVGr6EzqQMAm7SEaamNQCBOWtRaIqiPe8jA0QsvleiF
XYRmTvdIO/3MO6pL06HaTIdMaO9PdzfF5OxZoEW5fC7aM2iG7UIsMCoIRloz
RhjVd+Vo0r/B4ciW34GGvvRZt0FbmCKIVcwGbCtMABQElVt+z0S1nmCfYSDd
na+9e1vWasPD1IeGKZylLxag4fWzMwraATMeq1jFOnLL2RmRco1E46LTvj5W
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
9w==\
\>"]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   StyleBox["Achieving", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[
    RowBox[{
     StyleBox[
      StyleBox["l", "FigureCaptionCentered",
       StripOnInput->False], "FigureCaptionCentered",
      StripOnInput->False], "inear"}]], " ", 
   StyleBox["separability", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox["by", "FigureCaptionCentered",
    StripOnInput->False], " ", "projecting", 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[
    RowBox[{
     StyleBox["t", "FigureCaptionCentered",
      StripOnInput->False], "o"}], "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[
    StyleBox["a", "FigureCaptionCentered",
     StripOnInput->False], "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[
    RowBox[{
     StyleBox["h", "FigureCaptionCentered",
      StripOnInput->False], "igh"}]], " ", 
   StyleBox["dimensional", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[" ", "FigureCaptionCentered",
    StripOnInput->False], 
   StyleBox[
    RowBox[{
     StyleBox[
      StyleBox["s", "FigureCaptionCentered",
       StripOnInput->False], "FigureCaptionCentered",
      StripOnInput->False], "pace"}]], " ", 
   RowBox[{"(", 
    RowBox[{"Adapted", " ", "from", " ", 
     ButtonBox[Cell["[1]", "Citation",
       Editable->False,
       TaggingRules->{NoteData -> RowBox[{
            RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
            RowBox[{"and", " ", "Nello", " ", 
              RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", 
              " ", "for", " ", "pattern", " ", 
              RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", 
              " ", "press"}], ",", " ", "2004"}]},ExpressionUUID->
       "f24cf8a5-8be4-4f5e-9250-fc1163dc19db"],
      BaseStyle->"Hyperlink",
      ButtonData->"00004F53"]}], ")"}]}], "Text",
  StripOnInput->False]}], "Text",
 CellChangeTimes->{
  3.6006800700300913`*^9, {3.637658967650337*^9, 3.637658987078306*^9}, {
   3.637659037298044*^9, 3.6376590805849733`*^9}, {3.6376609657663116`*^9, 
   3.637660972574011*^9}, {3.6376614861686983`*^9, 3.637661487167944*^9}, {
   3.637661561525647*^9, 3.637661566277133*^9}},
 TextAlignment->Center,ExpressionUUID->"29154cfb-f8da-4ffe-bc2d-72d5d68851b8"],

Cell[TextData[{
 StyleBox["\nKernel methods",
  FontSlant->"Italic"],
 " allow to perform the mapping to an high-dimensional space, without  \
explicitly defining ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]],ExpressionUUID->
  "a0f92dce-1dff-480e-905a-0b57f4c2b9c7"],
 " and without explictly performing the mapping. \nIn the remaining of this \
section, ",
 "we ",
 "will introduce the fundamental results from the ",
 StyleBox["Reproducing Kernel Hilbert Space theory",
  FontSlant->"Italic"],
 ", as presented also in ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "93124cfb-15bd-4957-addb-019c57892805"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.600680084113222*^9}, {3.600680133063142*^9, 3.600680151937355*^9}, {
   3.600680282772306*^9, 3.600680330666135*^9}, {3.600680412869176*^9, 
   3.6006804148508873`*^9}, {3.601558944642812*^9, 3.601558947558786*^9}, {
   3.607434968114339*^9, 3.607434969701659*^9}, 
   3.637583979270483*^9},ExpressionUUID->"644b1b80-7523-405b-a94d-\
82201ee83077"],

Cell[CellGroupData[{

Cell["Kernel function. ", "Subsubsection",
 CellChangeTimes->{
  3.600520117616384*^9},ExpressionUUID->"c3191096-2156-4eab-948e-\
a43ac9126e67"],

Cell[TextData[{
 "A function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{"\[CenterDot]", 
      RowBox[{",", " ", "\[CenterDot]"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"86ba65b5-d895-4443-b4f3-e985b5b7b4db"],
 " that for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x",
     FontWeight->"Bold"], ",", " ", 
    RowBox[{
     StyleBox["z",
      FontWeight->"Bold"], " ", "\[Element]", " ", "X"}]}], TraditionalForm]],
  ExpressionUUID->"20314d7e-aae4-4afc-8a59-b0a83d06bbb6"],
 " satisfies"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, 
   3.599899918703438*^9, {3.599900060655603*^9, 3.5999000719742527`*^9}, {
   3.600521449431007*^9, 
   3.600521474971568*^9}},ExpressionUUID->"0ed31c00-49b6-4d44-ab3c-\
7596eef7a9ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", " ", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], " ", "=", " ", 
   RowBox[{"\[CurlyPhi]", 
    RowBox[{
     RowBox[{"(", 
      StyleBox["x",
       FontWeight->"Bold"], ")"}], "\[CenterDot]", " ", "\[CurlyPhi]"}], 
    RowBox[{"(", 
     StyleBox["z",
      FontWeight->"Bold"], ")"}]}]}], ","}]], "DisplayFormula",
 CellChangeTimes->{3.600519871893436*^9, 
  3.600521484232815*^9},ExpressionUUID->"e2572f7d-8709-463c-87a4-\
5732fb6aab54"],

Cell[TextData[{
 "where \[CurlyPhi] is a mapping from ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "d2090986-e672-4fb6-8b6a-85828eb30901"],
 " to an Hilbert space ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]],ExpressionUUID->
  "e44072ed-665c-45ae-bfc5-4dd612768b2d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CurlyPhi]", " ", ":", " ", 
    RowBox[{
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "\[RightArrow]", " ", 
      RowBox[{"\[CurlyPhi]", "(", 
       StyleBox["x",
        FontWeight->"Bold"], ")"}]}], " ", "\[Element]", " ", "F"}]}], 
   TraditionalForm]],ExpressionUUID->"91993d32-8a9d-4521-9ba0-0098472fd58f"],
 " is called ",
 StyleBox["kernel function",
  FontSlant->"Italic"],
 ". If X is an Hilbert space (e.g. an Euclidean space), the simplest example \
of kernel function is the one obtained considering the identity mapping ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CurlyPhi]", "(", 
     StyleBox["x",
      FontWeight->"Bold"], ")"}], " ", "=", " ", 
    StyleBox["x",
     FontWeight->"Bold"]}], TraditionalForm]],ExpressionUUID->
  "57f8326d-176d-4ce8-92a3-487354f6743b"],
 ", in which case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", " ", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}], " ", "=", " ", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], 
     StyleBox["\[CenterDot]",
      FontWeight->"Plain"], 
     StyleBox["z",
      FontWeight->"Bold"]}]}], TraditionalForm]],ExpressionUUID->
  "da81f22f-7494-472d-9b0b-c21d3114534d"],
 ". \nA kernel function is thus a function that can be decomposed into a \
feature map ",
 Cell[BoxData[
  FormBox["\[CurlyPhi]", TraditionalForm]],ExpressionUUID->
  "e8fce308-0f03-4dec-a660-8458da40ed7e"],
 " to an ",
 StyleBox["Hilbert space",
  FontSlant->"Italic"],
 " F , applied to both arguments and followed by the evaluation of the inner \
product in ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]],ExpressionUUID->
  "3bee635a-19b3-4aa6-bf6a-d593e44f9e53"],
 ".\n\nAdvantages: if the kernel function is properly chosen, instances ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "03dd8c9c-bfc7-48dc-b4f3-210198c0085f"],
 " can be implicitly mapped into a feature space of high (even infinite) \
dimensionality where they are possibly linearly separable (or better \
separable), without having to explicitly perform the expensive inner product \
evaluation in the expanded feature space.\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, 
   3.599899918703438*^9, {3.599900060655603*^9, 3.599900104759665*^9}, {
   3.5999001615641317`*^9, 3.5999001634212217`*^9}, {3.6005199520162573`*^9, 
   3.600519971664825*^9}, 3.6005200236061497`*^9, {3.600520399904098*^9, 
   3.600520400837484*^9}, {3.600521444500123*^9, 3.6005214648852882`*^9}, {
   3.6006799286419353`*^9, 3.600679942970479*^9}, {3.600680170362831*^9, 
   3.6006802684922028`*^9}, 3.601558949267808*^9, {3.6016394098918867`*^9, 
   3.601639412680696*^9}, {3.637581472690474*^9, 3.637581509678729*^9}, {
   3.6375815614730587`*^9, 
   3.637581568607192*^9}},ExpressionUUID->"6b28e8b7-6963-4889-85f4-\
392bc00657c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finitely positive semi-definite function. ", "Subsubsection",
 CellChangeTimes->{
  3.600520160142*^9},ExpressionUUID->"37ce6bab-78e3-46d6-97dd-a0788f0c0fd2"],

Cell[TextData[{
 "Let X be a metric space, we say that a function: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", " ", ":", 
    RowBox[{
     RowBox[{"X", " ", "\[Times]", "X"}], " ", "\[RightArrow]", 
     "\[DoubleStruckCapitalR]"}]}], TraditionalForm]],ExpressionUUID->
  "b8536b29-0d19-43ca-b1b6-73aad72a3799"],
 " is finitely positive semi-definite if it is a symmetric function and for \
all finite sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["{",
      FontWeight->"Bold"], 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "1"], ",", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "n"]}], "}"}], " ", "\[Subset]", " ", "X"}], 
   TraditionalForm]],ExpressionUUID->"7e293f55-f203-4287-a004-923209baf9c7"],
 " , of size ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "18423642-6c73-4bed-bcf9-48d7555fcd5f"],
 ", the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " ", "\[Times]", " ", "n"}], TraditionalForm]],
  ExpressionUUID->"5c52e4a7-a241-45b5-a333-a8fa48c7e51a"],
 " matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["K",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8c2a1141-1c39-489b-b3af-1c90de5d9f7a"],
 " whose ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"i", ",", " ", "j"}], ")"}], TraditionalForm]],ExpressionUUID->
  "8524c3d5-be37-4fc6-9930-d29d5cbc0ef0"],
 " entry is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "(", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ",", " ", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "j"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "468b2ad8-762f-4bd2-adb7-f6ff4cc95e9d"],
 " is positive semi-definite, formally"
}], "Text",
 CellChangeTimes->{
  3.600520184976275*^9, {3.600521307814665*^9, 3.600521322030164*^9}, {
   3.600521478707449*^9, 3.600521497086351*^9}, {3.60285900845245*^9, 
   3.60285903066188*^9}},ExpressionUUID->"f3d8b14a-4989-43a3-894a-\
72102b7f784c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ForAll]", "X"}], ",", " ", 
  RowBox[{"\[ForAll]", " ", 
   RowBox[{
    StyleBox["v",
     FontWeight->"Bold"], " ", "\[Element]", "X", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["v",
     FontWeight->"Bold"], 
    StyleBox["\[Transpose]",
     FontWeight->"Plain"]}], 
   StyleBox["Kv",
    FontWeight->"Bold"]}], " ", "\[GreaterEqual]", " ", 
  "0."}]}], "DisplayFormula",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, {
   3.599899918703438*^9, 3.599899923596326*^9}, {3.599899977866158*^9, 
   3.5998999945673923`*^9}, {3.599900197057012*^9, 3.5999002496844673`*^9}, {
   3.600521004175788*^9, 3.6005210089374657`*^9}, {3.600521060236018*^9, 
   3.600521063317602*^9}, 3.600521481463724*^9, {3.607435035187615*^9, 
   3.607435040456483*^9}, {3.6074350716912622`*^9, 
   3.60743508054224*^9}},ExpressionUUID->"ee749080-e84b-420f-97f2-\
ab8c72003f80"],

Cell[TextData[{
 "The above mentioned matrix K is called ",
 StyleBox["Gramian matrix",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "9b2888cc-f57d-4141-87b7-2b6a108cfba1"],
 " at ",
 Cell[BoxData[
  FormBox[
   StyleBox["x",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "deeacdf5-8129-4d84-9e71-1c02df06ff67"],
 ".\n\nWe can now state without proving the main result of the Reproducing \
Kernel Hilbert Space theory: the characterization Theorem of kernel \
functions.\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, {
   3.599899918703438*^9, 3.599899923596326*^9}, {3.599899977866158*^9, 
   3.5998999945673923`*^9}, {3.599900197057012*^9, 3.599900229925082*^9}, {
   3.600521078772048*^9, 3.600521081686219*^9}, {3.600680387046007*^9, 
   3.600680396475376*^9}, {3.600680431165286*^9, 3.600680433155499*^9}, 
   3.60155895076786*^9, {3.6028590505959682`*^9, 
   3.6028590516400557`*^9}},ExpressionUUID->"f97484d5-b6bc-4f19-bbe2-\
24576cbd5024"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Characterization of kernels.", "Subsubsection",
 CellChangeTimes->{{3.600520195189268*^9, 3.6005201969073973`*^9}, {
  3.6005211261606493`*^9, 3.600521128086487*^9}, {3.60052122497523*^9, 
  3.6005212262512207`*^9}},ExpressionUUID->"61538ef1-1649-4d55-af27-\
842d59a8ebb6"],

Cell[TextData[{
 "A function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", " ", ":", 
    RowBox[{
     RowBox[{"X", " ", "\[Times]", "X"}], " ", "\[RightArrow]", 
     "\[DoubleStruckCapitalR]"}]}], TraditionalForm]],ExpressionUUID->
  "8474fe6a-9151-4953-84a4-b438edb3017a"],
 " is a kernel function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", " ", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"\[CurlyPhi]", "(", 
      StyleBox["x",
       FontWeight->"Bold"], ")"}], "\[CenterDot]", 
     RowBox[{"\[CurlyPhi]", "(", 
      StyleBox["z",
       FontWeight->"Bold"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "e8a3e530-bdfd-4ec2-91b6-23787442424c"],
 " if and only if it satisfies the finitely positive semi-definite property.\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, {
   3.599899918703438*^9, 3.599899923596326*^9}, {3.599899977866158*^9, 
   3.5999000197286587`*^9}, 3.599900278074287*^9, {3.6005211824337063`*^9, 
   3.600521247768865*^9}, {3.6005212794860983`*^9, 3.600521289748728*^9}, {
   3.600680334392817*^9, 3.60068033556082*^9}, 
   3.601558952037673*^9},ExpressionUUID->"15eb1e54-b3a7-420e-a1a1-\
014a5b5d3f6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing kernels.", "Subsubsection",
 CellChangeTimes->{{3.6005208743915157`*^9, 3.600520889399968*^9}, {
  3.6005211310135317`*^9, 3.6005211312860518`*^9}, {3.60052123028054*^9, 
  3.600521231853421*^9}},ExpressionUUID->"14269040-e0b2-47e7-89e2-\
11ae43287cf7"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]],ExpressionUUID->
  "656df0bd-d1f9-4cc1-8471-e9bad707fac7"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]],ExpressionUUID->
  "3e3a4ee2-911f-4466-b6bf-a67149f7218c"],
 " be kernels over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"X", " ", "\[Times]", "X"}], ",", " ", 
    RowBox[{"X", "\[Subset]", " ", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]],
  ExpressionUUID->"529ac614-9fab-4a9a-8b5e-967b38455cd1"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "+"]}], TraditionalForm]],
  ExpressionUUID->"2c48ac08-fd35-4fa0-85b3-858dd5035c98"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "\[CenterDot]", ")"}], TraditionalForm]],ExpressionUUID->
  "aae065c0-f9b6-42cd-a086-fb8aa025e44b"],
 " a real function on ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "ce6ed9c2-fd5e-4c9f-9a09-25efdf2b9081"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", ":", 
    RowBox[{"X", "\[RightArrow]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}]}], TraditionalForm]],
  ExpressionUUID->"a7be2b26-faf1-413f-8b5f-74fab3a5cca7"],
 ", with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "3"], TraditionalForm]],ExpressionUUID->
  "07443173-bf98-4c62-af40-5844ca5b86a1"],
 " a kernel over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"], "\[Times]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"5b0de4f7-20f7-4bdb-8fc7-0c7078d38ee4"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8566edfa-ac0b-47d2-b4d5-239967f11e41"],
 " a symmetric positive semi-definite ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "9f16f782-8472-4372-9eb7-64d72647a549"],
 " matrix. The following functions are kernels:"
}], "Text",
 CellChangeTimes->{{3.6005215470135736`*^9, 3.60052181043848*^9}, 
   3.600521960289501*^9, {3.600680350688184*^9, 
   3.600680352079165*^9}},ExpressionUUID->"22250545-b1bc-49ab-9333-\
2f16b6921b8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["k", "2"], 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["ak", "1"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["k", "1"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}], 
    SubscriptBox["k", "2"], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{"(", 
     StyleBox["x",
      FontWeight->"Bold"], ")"}], "f", 
    RowBox[{"(", 
     StyleBox["z",
      FontWeight->"Bold"], ")"}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["k", "3"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Phi]", 
       RowBox[{"(", 
        StyleBox["x",
         FontWeight->"Bold"], ")"}]}], ",", 
      RowBox[{"\[Phi]", 
       RowBox[{"(", 
        StyleBox["z",
         FontWeight->"Bold"], ")"}]}]}], ")"}]}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], "\[Transpose]"}], 
    StyleBox[
     RowBox[{"Bz", "."}],
     FontWeight->"Bold"]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.600521821322874*^9, 
  3.600521954172388*^9}},ExpressionUUID->"e11436d9-39dc-44ea-a156-\
865808006688"],

Cell[TextData[{
 "Using these rules, it is possible to prove that the following functions are \
kernels ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "b903e656-9b75-4482-a801-f767dd4bd723"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6005220003083353`*^9, 3.600522027218873*^9}, 
   3.600522239615951*^9, {3.6375816772219143`*^9, 
   3.637581681519464*^9}},ExpressionUUID->"ddc5a2d0-e203-4d11-9cde-\
01b6cda95d11"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["k", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], ")"}]}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"exp", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["k", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], ")"}]}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"exp", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox["\[Sigma]", "2"]]}], 
      SuperscriptBox[
       RowBox[{"\[LeftDoubleBracketingBar]", 
        RowBox[{
         StyleBox["x",
          FontWeight->"Bold"], "-", 
         StyleBox["z",
          FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "2"]}], 
     ")"}]}]}], ","}]], "DisplayFormula",
 CellChangeTimes->{{3.600522034296327*^9, 3.600522125572928*^9}, {
  3.600522159916383*^9, 
  3.600522173394792*^9}},ExpressionUUID->"e8e8c037-8d79-425c-8570-\
0f310db8909b"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "2e934e51-819a-41cd-8e8d-b4174d4b11b4"],
 " is a polynomial with positive coefficient, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "+"]}], TraditionalForm]],
  ExpressionUUID->"939da760-418b-42a4-836b-bb3687fad5dc"],
 " and the last kernel is called the ",
 StyleBox["Gaussian kernel.\n",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.600522181091859*^9, 3.6005222713596487`*^9}, {
   3.600604367460373*^9, 3.600604407425941*^9}, {3.600633626266096*^9, 
   3.60063365830182*^9}, {3.6006804528314857`*^9, 3.6006804530787573`*^9}, 
   3.601558955248292*^9, {3.607435123162004*^9, 
   3.607435126578198*^9}},ExpressionUUID->"44d2305a-b390-4c5e-b39b-\
6284f6f3a87e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.607435131187323*^9, 
  3.607435145995408*^9}},ExpressionUUID->"ffb29b8d-5357-4e20-a4be-\
b05862dceb56"],

Cell["\<\
A snippet of code exploiting matrix computations to efficiently compute the \
Gaussian kernel (without any loop on the samples) is provided below
\
\>", "Text",
 CellChangeTimes->{{3.600522181091859*^9, 3.6005222713596487`*^9}, {
   3.600604367460373*^9, 3.600604407425941*^9}, {3.600633626266096*^9, 
   3.60063365830182*^9}, {3.6006804528314857`*^9, 3.6006804530787573`*^9}, 
   3.601558955248292*^9, {3.607435123162004*^9, 3.607435126578198*^9}, {
   3.637581717582654*^9, 
   3.637581717931527*^9}},ExpressionUUID->"1e60b86a-8dd4-477a-b3e4-\
bcb42db0ba32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"computeGaussianKernel", "[", 
     RowBox[{"fTr_", ",", "fTe_", ",", "sigmaSQ_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"D", ",", "K"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"D", "=", 
        RowBox[{"computeDist", "[", 
         RowBox[{"fTr", ",", "fTe"}], "]"}]}], ";", "\n", 
       RowBox[{"K", "=", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "sigmaSQ"}], ")"}]}], " ", "D"}], "]"}]}]}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"computeDist", "[", 
    RowBox[{"fTr_", ",", "fTe_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "d", ",", "nTr", ",", "nTe", ",", "NTr", ",", "NTe", ",", "P", ",", 
       "D"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTe", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTe", "]"}]}], ";", "\n", 
      RowBox[{"P", "=", 
       RowBox[{"fTr", ".", 
        RowBox[{"Transpose", "[", "fTe", "]"}]}]}], ";", "\n", 
      RowBox[{"NTr", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Norm", "/@", "fTr"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nTe"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"NTe", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Norm", "/@", "fTe"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"D", "=", 
       RowBox[{"NTr", "+", "NTe", "-", 
        RowBox[{"2", "P"}]}]}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600631896186021*^9, 
  3.6006319280829906`*^9}},ExpressionUUID->"e927ea24-871a-4097-9e16-\
ba0c55c56f6f"],

Cell["", "Text",ExpressionUUID->"5d90848e-43ff-4e10-a314-024adbe1dbe7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kernelized Support Vector Machines", "Subsection",
 CellChangeTimes->{{3.60052057586366*^9, 3.6005205832622623`*^9}, {
  3.600680463724263*^9, 
  3.600680475089451*^9}},ExpressionUUID->"c982bacc-6229-4486-ab29-\
d4ac3773929e"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]Kernel Trick\[CloseCurlyDoubleQuote].", 
  "Subsubsection"],
 " Given an algorithm formulated in such a way that it depends on instances \
only through their inner product, it is possible to construct an alternative \
optimization problems by replacing the inner products with a ",
 StyleBox["kernel function",
  FontSlant->"Italic"],
 ".  The algorithm is thus said to be ",
 StyleBox["kernelizable",
  FontSlant->"Italic"],
 ".\n\nAs it can be seen from equations (",
 
 CounterBox["DisplayFormulaNumbered", "eq:hard_margin_svm_Dual"],
 ",",
 
 CounterBox["DisplayFormulaNumbered", "eq:soft_margin_svm_Dual"],
 ",",
 
 CounterBox["DisplayFormulaNumbered", "eq:2norm_svm_Dual"],
 "), the SVM training procedures depends on data only via the inner products \
of the training instances, as encoded in the matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["H",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "f1f769f5-d3d3-46a4-90db-847594f9ab32"],
 ". We can thus substitute the inner products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], "\[CenterDot]", 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "j"]}], TraditionalForm]],ExpressionUUID->
  "3006a54b-c290-4238-8f08-8bf6cc7123d2"],
 " in the matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["H",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "804595b3-52b7-4bbc-b75b-e4968090d615"],
 ", with evaluations of a kernel function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "(", 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"], ",", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "j"]}], ")"}], "."}], TraditionalForm]],
  ExpressionUUID->"440810f5-c580-4a49-8a1c-35eafbda4fff"],
 " The same argument can be repeated when computing ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "f0848509-c0eb-427b-b336-0d9edc7e3674"],
 ", while during prediction we have:"
}], "Text",
 CellChangeTimes->{{3.6005205906937237`*^9, 3.60052060725213*^9}, {
   3.600520734263096*^9, 3.6005208082720633`*^9}, {3.60052231125207*^9, 
   3.60052244716322*^9}, {3.600522602075625*^9, 3.600522631488048*^9}, {
   3.600679822312314*^9, 3.600679824486844*^9}, {3.6006805005202703`*^9, 
   3.600680513041226*^9}, 
   3.637581782629739*^9},ExpressionUUID->"ee1ffcfa-9e33-4ca8-b3da-\
4ede2d864d12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    RowBox[{"(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], " ", "+", "b"}], "=", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "j"], 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}]}]}], "=", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["\[Alpha]", "j"], 
        SubscriptBox["y", "j"], "k", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "j"], ",", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], ")"}]}]}], "+", "b"}]}]}]}], 
  ","}]], "DisplayFormula",
 CellChangeTimes->{{3.6005224511976852`*^9, 3.6005225680942383`*^9}, {
  3.600522616237176*^9, 
  3.600522616683543*^9}},ExpressionUUID->"e53ae4aa-00cd-4713-a0f5-\
63d9b430e3b7"],

Cell["\<\
The SVM algorithm is thus kernelizable.
\
\>", "Text",
 CellChangeTimes->{{3.600522576351549*^9, 3.600522581762825*^9}, {
   3.600522634902485*^9, 3.600522689377336*^9}, {3.600632077360847*^9, 
   3.600632141805462*^9}, {3.600633696941916*^9, 3.600633704520831*^9}, {
   3.600680543354413*^9, 3.600680558709915*^9}, 3.600680591255466*^9, 
   3.6015589690049334`*^9, 
   3.6074352003734617`*^9},ExpressionUUID->"58b13c58-8972-4159-ac70-\
93fd2b445d73"],

Cell[CellGroupData[{

Cell[TextData[{
 "Implementation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.607435206105165*^9, 
  3.6074352116708393`*^9}},ExpressionUUID->"f1d24c78-49b6-43a5-a0a7-\
f51d63eee5c8"],

Cell[TextData[{
 "Following are two examples of using a Gaussian kernel with a 1-norm \
soft-margin SVM and ",
 Cell[BoxData[
  FormBox["\[Sigma]", TraditionalForm]],ExpressionUUID->
  "f3fd50c2-5c45-4223-93ee-6f300ccb3031"],
 " either manually set\n"
}], "Text",
 CellChangeTimes->{{3.600522576351549*^9, 3.600522581762825*^9}, {
   3.600522634902485*^9, 3.600522689377336*^9}, {3.600632077360847*^9, 
   3.600632141805462*^9}, {3.600633696941916*^9, 3.600633704520831*^9}, {
   3.600680543354413*^9, 3.600680558709915*^9}, 3.600680591255466*^9, 
   3.6015589690049334`*^9, 
   3.6074352003734617`*^9},ExpressionUUID->"07913a25-48f3-4c31-84ca-\
89bc36eb613f"],

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6006048285290947`*^9, 3.600604832214456*^9}, {
  3.60060492573352*^9, 3.60060493283676*^9}, {3.60063205504002*^9, 
  3.600632055382025*^9}, {3.637589294615818*^9, 
  3.637589306180026*^9}},ExpressionUUID->"b10792fa-71b3-4b32-92e0-\
1dbdd273f065"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train1NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", 
     RowBox[{"gaussianKernel", "[", 
      SuperscriptBox["10", "s"], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "6", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5998242191740923`*^9, 3.599824229454277*^9}, {
   3.5998252407905684`*^9, 3.599825254780796*^9}, {3.599826597734229*^9, 
   3.5998266032226143`*^9}, {3.599827838897214*^9, 3.599827844368305*^9}, {
   3.599834921347526*^9, 3.599834931257943*^9}, 3.599837534064529*^9, {
   3.599837586265244*^9, 3.599837587236148*^9}, 3.599838156127186*^9, {
   3.599838278004527*^9, 3.599838283845191*^9}, {3.599838320952675*^9, 
   3.5998383940135202`*^9}, {3.6001818323648357`*^9, 3.600181839037133*^9}, 
   3.600184631598147*^9, {3.600193595816077*^9, 3.600193596704954*^9}, {
   3.600414786940836*^9, 3.6004147882576027`*^9}, {3.6006048392177057`*^9, 
   3.60060484081664*^9}, {3.600605120330772*^9, 3.600605236489294*^9}, {
   3.600605278496801*^9, 3.600605370975388*^9}, {3.6006054467664337`*^9, 
   3.6006056337560787`*^9}, {3.600608340073489*^9, 3.600608403369323*^9}, {
   3.600608784741392*^9, 3.600608800561816*^9}, {3.6006138946792793`*^9, 
   3.600613914949931*^9}, {3.600613981095159*^9, 3.6006140038278933`*^9}, {
   3.600631031797982*^9, 3.600631046883752*^9}, {3.600631169968791*^9, 
   3.6006312022651997`*^9}, {3.600632284493023*^9, 3.600632381592064*^9}, {
   3.600632716638606*^9, 3.600632720569006*^9}, {3.600632883363166*^9, 
   3.600632887269599*^9}, 3.6006341300235977`*^9, {3.6012176852743673`*^9, 
   3.601217723056239*^9}, {3.601217774874392*^9, 3.601217829056218*^9}, {
   3.601218048212277*^9, 3.601218049956155*^9}, {3.601218092413991*^9, 
   3.601218094058381*^9}, 3.601218538625985*^9, {3.601639528847186*^9, 
   3.601639529765829*^9}},ExpressionUUID->"877a30eb-0dca-4432-bf89-\
f4c18c1a9d95"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., $CellContext`s$$ = -0.5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 6, 0.5}, {
      Hold[$CellContext`s$$], 3, -1, -0.5}}, Typeset`size$$ = {
    1386., {8., 20.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$214775$$ = 
    0, $CellContext`s$214776$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 0, $CellContext`s$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$214775$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$214776$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train1NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`gaussianKernel[10^$CellContext`s$$]], 
      "Specifications" :> {{$CellContext`c$$, 0, 6, 0.5}, {$CellContext`s$$, 
         3, -1, -0.5}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1437., {74., 83.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6006139182977867`*^9, {3.600613991571281*^9, 3.600614006333933*^9}, {
   3.600631166222625*^9, 3.600631204383501*^9}, 3.600632361422915*^9, 
   3.6006324038610373`*^9, 3.600632706012581*^9, 3.600632790117234*^9, 
   3.600632828274665*^9, 3.6006328883788433`*^9, 3.6006341308833113`*^9, 
   3.600673411795135*^9, 3.601214296560351*^9, {3.6012177250354443`*^9, 
   3.60121774461922*^9}, {3.6012177771940536`*^9, 3.601217790779821*^9}, 
   3.601217975721672*^9, 3.601218016027615*^9, 3.601218100445734*^9, 
   3.601218427072694*^9, 3.601559005952841*^9, 3.6015718646445913`*^9, 
   3.602859125092246*^9, {3.602860301230935*^9, 3.602860304963408*^9}, 
   3.607435219113673*^9, 3.637564997130847*^9, 3.6375741093416557`*^9, 
   3.637585932828742*^9, 3.637589234152894*^9},
 TextAlignment->Center,ExpressionUUID->"d220f2aa-8ddb-4d94-a694-ea571d1791b8"]
}, Open  ]],

Cell["\<\

or automatically estimated from the distance matrix
\
\>", "Text",
 CellChangeTimes->{{3.6006805982005177`*^9, 3.600680602556728*^9}, {
  3.6015590758471746`*^9, 
  3.601559076617323*^9}},ExpressionUUID->"28337886-cc35-4aed-9577-\
74eaadfb99c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.637588572062921*^9, 
  3.637588576374981*^9}},ExpressionUUID->"aba5c1c7-a369-40b5-ab5a-\
2ada8d0d4936"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$1910 = MousePosition["Graphics"]; 
     Private`p$1910 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$1910], 2], 
          Union[
           Partition[Private`pt$1910, 2]]}, 1]]; 
     If[Private`s$1910 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$1910}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$1910}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$1910 = {}; 
     Private`s$1910 = Private`s$1910 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{{3.637588577236641*^9, 3.637588588173602*^9}, 
   3.637588628986217*^9},
 TextAlignment->Center,ExpressionUUID->"bf1dc6fb-9d93-4504-ac17-e1f9b8ceabd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train1NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", 
     RowBox[{"gaussianKernel", "[", "fTr", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.600613948168401*^9, 3.600613952460599*^9}, {
   3.600613984781619*^9, 3.600613985070965*^9}, {3.600632430678021*^9, 
   3.6006324394629927`*^9}, {3.600632760059959*^9, 3.600632760297097*^9}, {
   3.601217841683545*^9, 3.6012178996634207`*^9}, {3.601217934031218*^9, 
   3.6012179413367558`*^9}, 3.6012181058933687`*^9, {3.601218378597372*^9, 
   3.601218386568543*^9}, {3.601218449702098*^9, 3.601218454101859*^9}, 
   3.6012184852873774`*^9},ExpressionUUID->"c5fe43c8-923f-455e-8bfb-\
8a75e65d313a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.5}}, Typeset`size$$ = {
    1386., {8., 20.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$349386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$349386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train1NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`gaussianKernel[$CellContext`fTr]], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1437., {61., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6006139555960484`*^9, 3.6006140124361277`*^9, {3.600631134408229*^9, 
   3.600631156152076*^9}, 3.600632442234915*^9, 3.6006324889386044`*^9, 
   3.600632670795189*^9, {3.6006327915627813`*^9, 3.6006328094417877`*^9}, 
   3.601214371380438*^9, {3.601217883436945*^9, 3.60121790023698*^9}, {
   3.601217942569275*^9, 3.601217968762043*^9}, 3.601218107421936*^9, 
   3.6012184546693573`*^9, 3.601571936310586*^9, 3.602859157011862*^9, 
   3.6375860488656054`*^9},
 TextAlignment->Center,ExpressionUUID->"c69d3823-419e-4d69-bcce-2bf9918dee93"]
}, Open  ]],

Cell[TextData[{
 "\nNote that the only difference w.r.t. 1-norm SVM implementation presented \
in the previous Section is that the ",
 StyleBox["linearKernel", "Code"],
 " used to compute the inner products between the samples has been replaced \
with a ",
 StyleBox["gaussianKernel", "Code"],
 ".\nExamples with the 2-norm soft margin SVM and the hard-margin SVM can \
also be similarly obtained, without any modification to the training \
algorithm\n"
}], "Text",
 CellChangeTimes->{{3.600633734023837*^9, 3.600633762487398*^9}, {
  3.6006806134703293`*^9, 3.600680765709626*^9}, {3.601559081232439*^9, 
  3.601559082916675*^9}, {3.637581822110478*^9, 
  3.6375818269573317`*^9}},ExpressionUUID->"3a0af452-cb2b-4b95-b159-\
3457190c21ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train2NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", 
     RowBox[{"gaussianKernel", "[", "fTr", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.60063376783984*^9, 3.600633799012179*^9}, {
   3.600634018727207*^9, 3.600634021419395*^9}, 3.6006340741687193`*^9, {
   3.601218354623122*^9, 3.601218368367414*^9}, {3.6012184626827097`*^9, 
   3.6012184719714117`*^9}, {3.6012185142264338`*^9, 3.601218516602757*^9}, {
   3.601626556640802*^9, 
   3.601626565263352*^9}},ExpressionUUID->"a3afa070-7cfc-4abe-bd76-\
f7471c52847a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.5}}, Typeset`size$$ = {
    1386., {8., 20.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$457765$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$457765$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train2NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`gaussianKernel[$CellContext`fTr]], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1437., {61., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.60063395696488*^9, 3.600634022691804*^9, 3.6006340748757343`*^9, 
   3.6006734975619097`*^9, {3.6012185016681843`*^9, 3.601218517924493*^9}, 
   3.601559032899728*^9, 3.6016265662634573`*^9, 3.602859184103071*^9, 
   3.637586116663261*^9},
 TextAlignment->Center,ExpressionUUID->"78225876-4e95-4da7-890a-ed22dcc5ead5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "30", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"runSVMExperiment", "[", 
  RowBox[{
  "fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", "trainHardMarginSVM", ",", 
   RowBox[{"gaussianKernel", "[", "fTr", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6006337750492973`*^9, 3.600633807983213*^9}, 
   3.6006338717603903`*^9, {3.600633904185114*^9, 3.600633905192507*^9}, {
   3.600633935598153*^9, 3.600633983199975*^9}, {3.601218398120228*^9, 
   3.601218420453926*^9}, {3.601218475151033*^9, 
   3.601218496491725*^9}},ExpressionUUID->"cbea7b10-d3df-4ffb-b404-\
653e3c6f0969"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
GDWwUMpe13U87xc4HnP8rO4v9haOv6HjeT/B8ZjjM6f+oYnT7Zb3+mvvNzge
c3z9Fn/8UGZAtPf6bO9HOB5z/OQ1lWt8Uv62d72z9yu6Xpg5Pur3wanqP/OO
5/0Mx2OOT1V39/mWW+94P7+939HPb9bPv+D35Z373vV+fns/pJ/frJ//foWe
P3wY4/389n5JP79ZP3+lgZVGPfKO5/2Ufn6zfv6JOxLP2HjP+/nt/ZZ+frN+
/kvPjy/p6b3/4v2Yfn6zfv5i5RcFlYzV9YT3V1xPMNeT+q0fFU3dOUHH8/6L
4zHHTw4q/TxH4Uc6nvdnHI85PupNz0NF7njH8/6N4zHHp2qwYdLHgY91PO/v
OB5zPPuJ49lLXM8xrzfsNZw24kyBgKgjut5nPbZhb6Jl++VM9be1m7Nmp97P
sZ/4eTCvX3ln9E71RZtNcu60A7Zc6bBO92dv6e/HMnN89ilDWvTsHigXy/j2
1ZvbC/R6evF1WP0qtyfrn//t6O/DS3Zf6b0+TGg7NEWbzXq9Zn/xfMG8fiar
UzzHD0V2ye9NKFI7qOBe3Z+9xv0xx6eIKNQ/Ot8BOWXK95flyH1Y92ffcX/M
8eNXz+hSbGqwnLxOurefpzqq+7MHuT/m+An3ps5pNzHE+/UnpC4x9L0w3Z/9
yP0xx08qOtmdPzZcTh2RouW2xJHe68P6sbmSDT8uz4wbVfeTIafkL7K5VatW
814Pfbs+Pd1871m5QcuD3/er5L2eHX9V7e+pOy/IDRfum7uuvPd6dLJylZIh
Wy/LjS/vDr75ofd6cnpIxa//3HhNbppr56NspbzXg7P7yo8rF3RTLrGp1fS1
Wbzrefe/F7baedZzUKNLhY/O9q7Hcb9mf3KqqXe9LfG4xf4bGbzrY/ca88c/
POk5aMb5pm+me9fDuJtZ8qZo5F3vSnwUEJs1rXd96j5yzvZCx7z3x+xJXS/N
/PuIK5Cpfo36nlNFbv0wbP0Db6/a/tT108zxJfo1zdowpef6OZ++Ods1ztu3
tld1PTVzfPfgmbdaR3ie3O2jsOii8d77e9u3en0wc3xQxlO/dZ3gOWpvn1mP
73n3Zw/rn9+sf/726QcPquM5VarNbd+ufqjeS2xrVHNsMu/63D3x9LSzQzwH
NTt+adkY73ocF5hm1caa3vW25PMGffYneqL34+xl3h+zj7md9/eYPc31in2M
2cdcn9nD3M4+wOxn9W37V+ff9i9m/2L2L2b/YvYWZm9h9hZmb+n+trf45+F6
yvUcc365vvLvm59H729t32if2b7S88f2Dueb1yfOF68H3J/9ws+DOZ49o37s
/YD6Masfe37xfODzEX4eXh85H3y+wa/H6xO383kHt/N6xc/P5xH8+lx/uZ3P
J7id6zG383mFng92feZ2Pr/gdq7Xen22zzP0/LHrN7fz+Qa3cz3ndj7v4Hau
79zO5x/czvWe2/k8hNu5/nM7n49wO68H3M7nJdzO6wO38/kJt/N6we18nqJ/
//b6oc8T7PMVXR/t9UTPX/u8Rc9fe33R5w32+Yuub/Z6o88f7PMY/fr2+qNf
3z6f0a9vr0f69e3zGv369vqkX98+v9Gvb69X+vXt8xz9+vb6pV/fPt/Rr2+v
Zzy/+byF5zfXY27n8xdu5/rM7Xwew+1cr7mdz2e4nes3t/P5Ibdz/dH7b3t9
0ePZ50UcT+9zB97s+EXsJl3f+T4MPxj17xvs3Xo94PrA9Zv335j301zvuT+f
/3A7n//w6/P+HfP6dL5Z5Yt5B23T/fn1eT+Nef3hesXjr0ia/NqRGvv1eXGX
k+HJ1mR09XrXqeyjvasDg3W9O71++aTqTUP1+tVosa/0pUxhut61P5Y74GhI
mK5vDQdvLNO0q/d5LtfXo/XGry+wNcrpcLZTldDaUbreZZgddSvVL1G6viV5
uH/VL/e8v4895Z7OiYKL+XT9Gtj59vR97X26XjkLq45xZ/l0fXocnmFRsr0+
XY/y5j4xbM9Fn64/SwMGXU/6yOf9/WRDmlXO8pdP15evjxfuly6x9/lrtq/y
1sr1j8/7+ymeNf3lm999ul4s3B574u1dn64PmU99cj7/MZ+uB2Vv3u0S+5tP
/Qe2GpFz2Fifep+2pMsP75r7vD9fMPU/f8wv4FPPlRMOVPv+rvfnLyWKvnFh
7grvz5tJ3T5weK2vvT9fo2GmTq8Xp4j6n88ru6WvuKBJx1hn7d3wqYFlvc9H
ozJ+H55/e5j6zLov7+ZRH4apx2Lps1R8tMb7/RQ1YnPWnJLT+/54fMN6J967
edgdtq3O7B9XHnTzp4it2LlOqDttedq/+x0f7MT8Xrrm2seh7vV9AxPV7POL
E5MvY4Y+n0W5j8uV65Vq8TFn6UeDyiSaHeWeHB5W7PMuJ520E0aOmXAlyk0z
bV9CoSWnnUOFLj7JmNvnDiuxe/x7yc86m2s2iAwr7XM//yJ4fMryMU61gXeG
53gS5U7JOCuyzp8xTop0LVpsCopyqxy5fDso5J7j63J76txvotybIwf8U37G
fWdZ6o5vL/nPT6u3KTPdah3rhHX/uWuJ/f6f98tjkT12PXYyTbqWbUKeULfj
+Idtck574vyxpkeSaokOuANmjr51o1CI+/x2vG9IhiNu16C/fii9aYd7ovyL
3M1SH3VzbZ44rMX6De7axeuu9mpw1N17bm+KtMPWuyUP5NoYnzzc3ZmpS6o9
ObY6Hbau3/3BlnD3QnTJgKl9dju3R9y4FLM/3J3q3Dw68/5u5+zCjJ8WLe9/
vzfm3Kn7vgPOmsEzJw3+JsLNUu15vaHLDzmnfzlb8OONEW7JtwNOvVoU7Oxu
0jwmf1//86fa67fJa/lfrx8u/6fEMp/rDBgyqMipC86a22tPrQjxn68ft03t
3uqSs+5UvnsPbvncc+WXjHx287KTPjKgUPsXPrdLsXH1rnS86nwXNyRxu3c+
d/b+T59Vi7nmPC5Ze3YFfw/frmv76MNON5yGszJWK/fW516sEFf/+K2bTtad
WVv/+sTnTnrVrF/WMtHO6W/uHTh8zecW+P7OodJx0c7gJleTXg72ueHNT7yp
svq2k6/036+KL/e5iyZ+terzdneciacPHH082Oc2P7n34lc57jpTh07+uPMX
Pjdz5IIWP5y66/RYVC/k0roI9+LkFmfCC8U70y/N3N+8W4T7T+c0Ma/mxjsd
/mq6IEvtCDfHtlcV3pyNd3LVvplt56Nw9930loH1ujx0ao2LaZDkerjb67dh
yyaOeeh0u157+L6+4e6AQYvrDCqX4MwMjeiU/Z8wt/T0KW8P3kpwDg/Zsnrh
lDA3u6/Q8v7Tvd9/+t2KzIN+ij3sLp1Ydnv3OO/7tF/eHB6dZv3/fl9W67On
B2/m3uaWrt8sd+2l3j7g/WnK0h1vpFzWwU26sebZNnEh//P92fr8q9al2bPT
2bwg0+UO77zvwzq3/LZchsneHpjQ9YO8nbJ732+VX1g6U5Kp3vv3R9+ERBTM
571/nxaVps2WoP/9vuR8XNtnTpYEp9DT6onr3ojU9xs3W62ucCKHv5fa1bPN
a+Bz8iY+lfHgHwfdmL9zz4g7GOzGn+s8oevdQ26f7uXX1Czmuh9t+7j2ydkh
bvrrZ+as3DTdTb52Vq+5MSFuugLbv41POtjts25gv8Oxke6n9ZJUWHsm0skb
tfK9zv4eI9NmCY7zX6/2X+w1//juSHdE71IfvE73wDmeLH3n0Vcj/e+3hnxf
NDjWf/1uV6xVjmB9v7F67awyE78OdjcG7GiVxt3jtkx0vM3SzsHumPAtu54N
3ONuzV+8WYFi3u8HGHCzZDmn0hF309mGcc9PbXcn3F2fPNsO7/uM8HtpWvU+
E+omvC1TpW/UAmfNjE7VNvUK0/cX814V2B8+Pcx9feHDORc3rnOqbfy14zdr
wtzcxXItmN44yAkYsn3jZzm83w9QcUfBJx8VDnfv73k+7krebc7+hUXbtuoU
7nZ40HhsmjE7nMKlR+xd2c/7/mLsqeI/5hviv543LdCm5KgTTvESrZIkO+J9
X3H2lzUVRxyPciPKzn7d7OvTToanw+dcTOHT9xNPMofUmpXN5wa0a1ax3MMz
ju/mgYXt6vj0fcTkOuXnrP3K52YoPzu47oBzTtD1iBG3Anzuk23dg64NO+f8
maHvjks/+fR9xOefLcpQ2/96le6380tj75x3MqROtfHGRJ87LcWisQNSXXDS
nutT4sc1Pn0f8eLl5s9ebvC5SSqOvRXT/KJTterPXTJt97lvPjt35f15F52Q
F3+P7x3p0/cRJ9/Fn9p/3OdGZM/T/9OoS07LRLuCYs76r0dls9ZImveyk2/s
uCuxd3z6PqJ6+d/DFt/zufteTd791LniVBr+POm+eJ9bsNC+Q5UDrzjB7equ
zuh/feb7iMiy/T+b88r/eA8Otnm396pT/euQdw/e+NzG75dteqXwNSftNz0m
ZPS/vvN9xIRPO79b7Xdk01MffF/hunM89PrnUYmOuQU6dyudePV159WW1SHp
E3u/n+HP+2lPnPXfvjHTikvFtt9wJoWmHBzkv//n7SuniSh40wk8e2dNOf/7
C76P6H0s9428f/rck+/65qxV/pZTKf5y3Hn/z1f/avu2NX+95TSKbBWxzP/+
RN9PHMicfPxDn9s0rOumtm2inS8HPiwy977PbXeo467Pp0Y7o37M2WDYZZ++
j1hbPu/bdBd87oJaDR8cyXvb+WvCjJbFT/ncPz/bEHKu7m2n2uSDiRMO+PR9
RNDGgGEHdvvcTOPGbg6Ivu0ETGq89sJWnxuV9va0bxPfcXpeHz0n2yKfvo/Y
lTOhxxz/+63pXQvWybjmjnO//VcTr0z1P186r/02bv8dZ2XbxpPy9vbp+4hf
rpx5s6ijz92b0DP4VY+7ztI9ZZ729b9/693rdeFRA+46u+qM7VrkE5++j8hV
q/eW4A/97+dudDpRrFSMM7l40n3Nk/j0/UONV7Mzv3kV5Q57lihX7O0Y58uU
IzKfOup935BnxojbnfdFue2TnGoStfCec/HUiTz7hnvfL7Sp/SJtlcFRbp52
T8tcbHjfqVk015zKZb3vEyIKRp1YXSbKbfEs6YfZEsc6F3+dcSaht/f7NbI/
X5bJ1zPczZ5nbPHNlROcKQHNjt6rHO7m6RVxY8OkBOfs6MfP33sepu8PNtTo
X6HDnTA3R8ZS/cqneeR8OPBJgaZhYW65zDdaBlV65NS8/lnY035h+v6gTPj6
Mr83C3MnZUuX7ugt/+vPgzsznjUOc7utrDg+e8wjZ2bsmxrn4r3vD9Iuz5tk
5PlQ91nKVZ88mPXY+fDbXQ3Pfed9XzD9ztZMw1qGusFJTySU+/SJU6/Rjejp
ow5oX2zslCfu1ob9bp79OzMXGB/iXli+bM7AZgfdms/OThgw+Yj7qsrreZvf
HXCD+r+aMfXpEbf72EK5a3/nuudDznwf+sUBt0fIkPpOlOvW7JuuY7vy+92r
7YqW7hYZ7BZM/t20xvV3uVVmva4a88FRfV/wXs25f07bdsSdM6xovQO3trjL
6zdMW7zfUXdPn1m1Zqxc6wbU7/x154wh2jPvPX2ervS5o+6sOu9Gp10Q6C77
KFXpMteOugUCWhzcUyLQfVj8vRfjOoW4Lcbmn3/58ly33exWRd9+HOJWzXS9
xoKUi92mP+Xo2bhdqFstYcU/L7qOdn7s23tb5yWhbo2F/4QXTj3LiUhyukH7
GmHulEGVfj3UfqXTtdXojbWcMDdLkvnFhvZd6bxMPSN03xX/v48d5zM2frrR
qb+i3KGfd3q/v6t+VIqMx56Fu2eif2/UNs8+p3rJyWMX14nwvj/o0vvElXQR
7t6/E6YuqbPfKR0//ljtfhHuyQrZx+Qdcdj5q/CPyQb6IvT9wMdJ6/ierI1w
v1iZplvFocFO79DnTfs+inB79I7q26TQUWfU7eiYdPcj3Fnj8iVd+vKIM+yD
9rVP1YrU9wMltoX8ejxfpFs79NT9Mc1CnJ2xEUkLlo10S7XO3rFIZIjTa0lA
no/6RrqtiwZ0Od0zzBnVdvTq7gGR7uAyGa9s3hLqxGaOPlRne6S+L7jV/tbx
hAmR7qyJdcvmyRDuLEw5ccbB3yLdAse+btQlXYTzbd2WVePuRLppuvfJ+npj
pPNbwMNfvtkb6V4oeSF1aN8IZ9ydavN/rh/lpmv7ZnD9+8ecI4FJ7uzrHuUO
zdlo7dR3x51Mud3lwaui3Gb90zWpnfOUc3Fn9fW1dke5r3fu+qrUiVPOdd+8
p98/j3Jzvpw3/LeCZ5z8cTuH+v6Mcr8Z/F7rL5qecfK1qT82dSX/3gtI8uXD
HWedwA5Zn7Wp7H+9q5m8UJuDZ52tyUZ++aKnz10aHTz5WMnzTpkch6cs9l/P
huYaGf7LkgtO+k/mzWt+yOc+q9fKF5b+kvN4+LTixa76X9+ij4R8Oe6y83Gd
e2GZ/e9vq/654LPSb684sc0XfJnT//73+/x9330/+Jrz99+RA6r4Xw9ef3Q5
7K/n150HWVNWGOh//9xm5NZG8f1vOncaPk15wv/+uvyxJR+Uf3HLWbShRfk6
t31u0qBpTbofiHZOBv1891a4z40tN7dzl59vO0X6FugRuNr/+pGr2aZpn99x
dvdN13jmUJ/bsdXjljdT3HVudC/Uc6v//XHxrk/btj5515n7dEjo4iz+63Fo
lXmrJsQ4B/OvPXM/vf/1sMnSckkWxDgrvr//+b3LUW7Yxxtav6juvx6O31Ky
9Qn/PnyZLfu5dvectoOytft5UZQ7cciJp92f33PmL3gzK9u4KLfnm/VPoorf
d06FrSu26Ksot3nPiS/Tr7vvtGq2Jn2Jj6PcNj2rnoh5cd+5UrdA1z/HRur7
i0WfvAmttcH//q3snc93F33gLM/eadmKaZGu2+JQs0pdHzipw/dm/rRDpP96
eTtnveAHzpqNbZt+MNT/fFn0VfT06Q+cQiu75l7/QaS+z6gd/rpdkXqR/tfT
gHsbXz5w3sxYNXVdhUg3aeHkTUrminMCfhg27V7ySHdS81bh0f3jnDq5r3eu
nznSPZf825eZv4lzKh5s/eNAN0Lfb5Tb8v2zOdci3NYxFze4IXHO0ZOVxr69
FOGu3n+hUU9fnHM4uEajuJUR7ux6SffvLhXv5K399NG45hH6fmPOzWfRowdH
uAGti8W8HBrvpD1cZE1CqQh39Oa0m4a/jXc+jtjx97u73u/3ezkvLuWcjBFu
2p9fTzxf8qGzrEdY2c2bwt26VUvX//rkQ+f4tKxXXxcLd/tUb7q0cWCCU32r
71CqJWHu6EFNc7ce9MjpPnrHlnKZw9wNybYNnF3tsfNq6Vrfs+Rh7uPv3ts6
sMFjp0iz31s+nO/fq5U/HZ0v9rFTMuXp8M09Q92PDpaaFvj+E6fZ4zUNpuw7
qM+PahfbnSnHo0PumofvB5TM4H1/kf2DNvV2TFnpdu4S//Oxn0P0+dHmImdf
7k3w7941EX0ufvODG7grJGmZlJH6/uHarD51qwyP1PcP0yY/zzLtXqQ+718/
vcvIYdsi9f3DPxtKTK3VIlLfP2SK/C1Z7hfe9w8tXz5bXqNHuPvdwfafdQ/d
4eTs8LZdrmxRbrG/Hw06VMHn1P215hcHbkW6rfp22zNpZ6yTbEHlv7sHHnG3
Xpn+freArW6Fnj+07b7Wf36fJ66c5epD5/8AcS91Ig==
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
0I09LsNVAoYZrhow1HR8t2fAagGrB+xluAb7aH5L3N6+WzNgVCPPTZ0YYf/A
lwlYNmCXgM4BywcMNFwhYJBhl4BjGnmu6Vh8MH1HvTlLAa+zl3d4I8+6HBHh
APNerpT+3OMCxpfS7/u0UvrvLlFO/++vAhYvp+84+GLllK/gyzRyjbpshJ0b
uc5fPsIly5kOv/J329M+DO91aaRdYMVG+pqPt7wVyumPjq/6iuX068Vfebly
+tDjU79MOX3T8Xlfupz+7uBLlbMc8GXLGU+aLuXMj7yWL6dvPWV0Lmd+4DtL
A+i7E/lK992Vzafo5zvMfjvfvqTfJssHxJ0jf4CfLR+ATzHdnrZzgGXilzzE
76BBf+PO81vKQNbgF4itHb6GZwu/EsLCV4UQXxLGFb4myLvC1wQc3Z3zVZwn
QzYwR9KHhQ8K342z/f3t+53lu4mG8N2pATv63diAfuJjSkmrfgJnnJYqpb2e
c07MQdP9bqxplpLWzH1Lmv5e4ynnPkPqdY/9QHp8r+FvxuWZhtBxknVkTJyG
3FGenu470uCfOrqUPt/bKxOhL/7moy1jzUb6s74V9Rofcf3Na6yydseAUw13
Kuc+DHszxZ7JGNeZ+OaPdd23pWtI1o9X1XM8rN1IOzlpWJuyz4z9Hdsxvvwn
usZkP3kT49aKNLdHeGU99yXGuQY407MYnMng3NqcWvqeY69dPWCNltwDZp+5
sNuuZhxnSciTcyXYi9cMWKsl7bxriG8Y+d6LDaGRabC5YmdlL5ln8mJdgq28
7BoI+zs4dlPsudh31zHE7ruuITbUtU3X5HoM2zo2eGzq2C6xNV7r3LJ51OHG
erZvm0bq/djl/7S+1AubK/3AXgF9QRt4V7JtJet0fT31qi0jnx6NpNt2jVxP
sE9AvqzJqAs4tnjsodhK8aegz9iXwE4/j3HYRLG/YF95xxC7C74nh6nPc17r
+VruAe7UyOcdG3n2gm+wR7E/jw0I+w97+/Qffcf+Pzh7C/jIjLQP3rUc1hno
3a+q8/M99jJsZUOijFfi+SbXWK+oz3/gmuRW67mu+b5nftiW3jfku00sn30N
zqMcr/2BsyzHWBb0GS0P49MP/3A2hf08bNALtOQe3vzi7Et1EuccyWjHC/x/
ovlvKe35Dpvc/bW0y23WyOdrHIsn2/f4ORwh3+P7sJ44tN1AmmIDYP8JnuOM
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
4KwuZzU594qfLH6z+LLuYf+ca7r9Wjp8SwkLX+x9rB9+zdSVfPFlJg78r3P2
tdzXL/ybicOPHF81fE+5i+QXce4x+FUcP2fOTxZnTwmL8+WE9AP+1Xv7HfcM
cO8I949whwD3vzBGb/Dd2y0ddyi8KI++LF6cjyUvfMX3FS/Ox3Jetji/Wpxn
HVHtOGtLiHyCPxhXz8ovz4vDpy+Ir2N+xTnR/SzvUuv1guMGeVHc8fCKdYVf
XzPuOtvHvSbsR7EvVexlERb7SITLufe1ir4K7CWxt8T+Ff7YnBvlLCT/sOFc
M2ez+e9NT3Fs/Ku7388+FftVlMfZ3MOkC3tX7MMRV27LOQrfQMbZ69Yb+fSG
+LXWHbzYl0K+sBf1nPKrs74SO7sXx/xW7OkRdnX/jXas0tqx/0c9uG+CuzyK
+ydulBcOl3aU/6d9Dx+V7Ps1lb9ri8OX+FbiK805CXz3OTcBT3GnC3etMA9s
Wu24A2YTeQR52l0+Yh6gnNVNs5lp/pDX4XH4Hv9syuP+kN8cD9xD8rs495D8
IQ79KI+5Cv4u6nKY7bvG9PiRky/pGT/gjD3ahLwnr9UcW8zryEfkZs12wOPM
i5yt5qx3cR8K9UJWPiM+Vd4H54w4+sGBpmHOPrjacb4deX+EY5X+ONL+Ad/Q
8USa8y0HerRbF+LP8x0yozi7zlhttbzirhfC4g6b9ewP2o3sHiKtdxMvzuGD
49fPuRbOCJyrnEJuFefeadsUyyduQccNdygU93YxNxZ3ezF34TNcnNldpS3X
fujO3QzRqVc2ZC04y28564pPEL7v+MgXZ3o594o/Nr7y+MhPNx4/91Xb0h5B
Gau1pc0IfPW2tGWAY3PBLxm/b+xG1I8ysTnNFse28qnfYWv5TPweywFfqy19
arBvrWmI3WsNQ8q7zzrSBvzAv7HeD9uO4nwzIWdV+X8P92FyJyf/vOHuO+7I
4784M8T5RxH3dnL3Nv8l4p487ss73nfcEY6P15Jt6bvFfip31rPHyvnl68X5
j9H95tvftRY6e/HfHe7p45893OF391xnPjkDim/8t7bnQetenCPu5/lOyuBO
O+62G2WbqDf/K7rLdvIvoGnioy0HfIzlU3Zx9yj1PsO+ghcmSUfoxz4652O3
8DwpZ1m38twq51c5X8v51R3EqS9nYDkrC09x1poz1pyX5Wwt+8v0CWdk+Y6+
Ih58MWlAXgubd3GOlpDzu9CCvDkPS39zFhbaLN2WPkL4Di0hnaBpJ+tLGzg/
yFlZzuAuaH7gnDfcxrYtYDw4Y4Wz7LRhKfPGH2lJQ3xOOKPFvvl19cSxcbB2
x1bIeRLOi2A7/Ic4ebAOx/6xkuNyiHUfZxy20gfk6wnyAfhE+wS8OF9Bvqfb
b/RZcUaFMyvYNDkPgz9DF9fMg+Rd6orfzAmN9Ee8L+q/omtsvutqvQbb1rG2
rY/tY03KHSv4Ld2vD8VO+lrcavmUzZ21N8pn3F17k/hxjqdb7NtRjj94fKx8
uqNjFXwnx+qpTR3/MGNccp4N34Yb6tmXx5v3FvI34/Kb1uQP+rCveRf/djul
qePfbqMdN9+35p3p3ImO7rF2W8qkkiEy6bvWjOeeyH+1ZshZh29bM6Q8+PdE
29bL8Xmi/H2y+ObWEVnydWvWEf7a1nYU/9wg5B7g4r489I791G+KOzkI0X1Y
pzJns4ZDl0XXR8ffxHfMx+j1rEPQxVk/HCDe3bkFfB/zYy2EjXFNZTD65sWW
zdqXu83Qj4qzCvjHFv/9Oqqp479f4OiSA9XDxjnfIMs3s03Uewvnb9q5pfoW
+FaWA87cfIn1YHxy90RxXwVhcf8EIefyOdfwI75WrXm+A56A3jMMkeuccfgJ
3y9tImX7nHMQ/zUOewnvCpsr4f9a8zwIIfehMh8gm/GrfNp3v7fmuZVvLZsz
KfAQvFP8D+9+6XSz4+RYxwc4um+T/LiUY4OxMtv60rZZtu+H1jzrQQgvP2xI
eQ9aJvUo7gZFn3jKOv7WmmdnfrbN4Mz96BeUgRzh/wCUQ8j/BGjf6uoF3JMw
3rEKPdZQR1jaMUy9i/sUwJe1f8CpL/kx9p607F9tH7KJsqnTSson+pl/DDJX
P+G3v7TmWaFfbMPOxhf/qzzN+tFW6kvbSLeKehPpuqk3kX5l5TR9T5nUg/Pl
vVzPcKcYd1lxBxY+Rfgz4S+GXxW+WNhI8THCb4l41tWsr1hXsc7+UXy2ax7w
Ud7jUtyDdXul496p2zx7eZB3zXDHDL5Q+EhRBnfJXOx9MzMth3Ub98tcYtwh
3i9T3KlzuXkdaH58x1043K3D/TmcxeFczV/3uFbyfjrub9uikX5j/EcXmw5r
KtZSI/XV36TR4UeFXxV+avO6x/SY37LGQn6TD7JwhD5mGzXStveTdFm3kfR8
rJ5to3zuVOPeIO444qzxVN9x3xG0WMf+eNw88V/jThL83rBf43Nf1g9/P2lG
Hvyb61797bgrDHsi9hXoxB1tLxV0r+T9bdzNwx093N9zhGeiuVuIu++wP5K+
uNcSnDzIr7hTkxC7DnTFtoJtg7MCTfoEcx4IGzu24Oc82/2n5ZMOOw3nDJr1
w/6X5wlIz/1BV9rf/LPxVn2di7uQrrG/X7Bfi/HzhOPncXHG3WPiPykrwYfb
bsoYaX7Q4hjPUHOm+ljPUoNz/9sN0gg/Zc7t4j9Q3MdEnS72zN3z9bxHijw4
732cvH+L4+5G86Lu0ADacc8RPMYZYmwA+BJibxjqOF5ZnWZFZUhf9aEl1Xu6
GIfMmW07i7VHsRZZs61jjbKW+sFeyrk11Ju6Wt4wZeeq6nhLqycU6zTi9jC+
WFetZl7F+o3v8BVdTH/RHdVlyKuQ78h7zonMcC7jfpR15W+Ad0U7v3LO20VZ
u7w6zIPOS986V4EPNL74J8wK0ug7v6XsQiemTsXcw1zU37YWd2kv29bxn5nl
LPsb52PKw88SGYm8aHJc9rH8H5zbsD9iL8UeyXz0iP20knPDz85XvzmfraJ8
/830s0xzqnrHX2fDW5Nuf537VO9GL8Fm9Kc89HS1w2+6mCd+tT6/KPuwoWI/
wjb2lN+CP+E7vivO83zl/PO7+gF8w3yJPlHolIWO+V1rh076vfN6F+fj/7R2
zMfg9AHtKXTeb1o7dNJvnfsL/mYcr61O0dTWoeOW5T/qRZ3gd+pVkq9/Uh5w
v846tqeYL6EL94uyj4K8u0x5iazi39XcackdnvyzmjvVuFttPecz5p+/GU9c
J+fVLZXryDxsw/xjmzvhuBuOf3JvLF43P3Doik6D/sU/dbBFYlPhHzvYIsE5
h8xcDl78gxy8uEePOvEPOf6nXbVeyKnDbMcR4lXT0A5sNszZzNX4SOOvj58+
/sz49OOrjv/zBsbhd9zmO/QJ7qAs7oMcZV7zSYPif+BbWP6WykFkapv0KP4r
voF14r4/5n70Av5v12Y8/7trNx3/waMN/COc/+Q1Kh3/PUe+M4fwX7j5LJ9/
6M1jX/GvuHnt202lDfMA/ITOytlu/ufO3aRb2z/EF3cHjrAM/seOrYv7Swt9
Gv16Ad+Rnv/UdZIe/EtpfnmE/yRRxvzSgPqi43CHH3cocu8H56E5I80ZOezX
2IA518ddjfwnnfsb+V8fNADn/4I1ea3ZfkOfmN92wJfd5dkDpPch8g3/dFqw
0vH/ecLif/WE1JV/EEI/aM3/C+vycvG/dvJukXfgG/bbsPVjR2bu5O4V7hMu
7l4Bv8533E+Jnzv+95x1LM5aoIdeazz39a4jX6D74LsPv1ImugJ6z8vSort8
dI3pGN/ctYUegf/fFvIg4wHdizH6h33G3I8ugO8+YwBaFndts4/KvSPcP8Je
cXE+hHmAO0Z4x/4qZbJnjEyhfezFsm/MXS7EF3d1E7K3ibzmPAx7DNCGctjL
ZV5BN+dMAPTiHXkh43lHGu6BIQ/qB50oh7LRb16VLldLA3Q6dJB37YOrfPeq
/LSuNGbPm7MFjHV4HNlQ6DK0k3ag138kjr7/sTjnJJAN9M22poOmF0sn9Gvu
t+GuUe7AKe6voR3sb5Oevi3OzIAzb6Hfscaa5fkOznncYl1If5N50Dbu6eGO
nN/lffoTvYy9+ZfkrSss52WhRZl3qPmv0cj99ZdN85vlI6O3Mj9k2f8DSjfR
kQ==
          "]], PolygonBox[CompressedData["
1:eJwtlnmUl1Mcxu8sLb/3XhVhODhk7ThkX8p6HFtCpJSIVGSpJk1FzTRjRjPR
SsvUUE3KkiWRPYQjOTpHllCqsVXiFFkj2T6P5/fHc97nud/7vu99v/f5fu/b
rl9ptyGFIYRGUAympBCKYgjnZyGs5vomKAABTCI2EfxD7DzwIWOTQUkuhF3o
ccQGgR+bhzANPRg+BBzcIoR6dCn89ei588Hh6N/Rg+GzeHmF3gE2twzhT8bq
iF+pZxaF0AfdEz4KbIUXgNvhlWA7vBBUwLuBVfDIc6bBy7i25gPbcp2J7gq2
5DznCvhmxntlnqO5FzH2DfGVjF0KvySZZ8Smwu8GnYk/zNg9ehbjvTOvsR5+
NGNriC9i7Fj4UNCd729A3wa/EKyA55h7H/yY5LnKqXI7jPGmghCWos9GPxTN
e4KN8GrGToUXgZfRY9Ed4cXgFfR4dDnvX4ieAO8Assxrmqd91TfnvIbO8DGM
rST3a9B90Z3Ai5k9IC+cAppyHjsN/iDji5UbsAG+AjQHzcC9yTlX7i8g/oly
g/6A3PRHXw2fDhLjW9Bl8Blgt+g9vSM5J8rNu+gu8F5gLvf3RV8l/xGrI58l
XBvQ9aBVtAfGJO+R9uo99GXJHpFXtoFyeCmxJcHfcAJ6WbTXGsEh6Dr0RPz7
Jfpm5SKaTwJ7a39AgH8LRsJfI74TPhschB6d/C6tSWsbkTxX36hvfSo618PA
LvhL0d7VnlYRX4xeCx8hT8APTPaOvnlO3sPy8kb25B2uByTXljw2Ozrnyv3+
YHi+ZlW7d3J5g+v74ETtPVgLPy451gV9vLwbHdMeaa+0p9rbUXjyba5fgx6Z
PSqv7pdc66rxB9B7oSdkzqFy+Vn0sy8G65RrMDSz5+S9V6O92wnUcu/SaG/L
0zXoPVRz8N48r5bYqui5yrly/1F0LyrI9yp5Ut7sqjXCP873suZ5rx6VXBuL
yF+j9hZ0z/xNX8EXgk3E9lGPY+6+ykHmnnY/sfXR3yIPyUuXJ3tNPUW9pUg9
SrXUjLxqbrKX1VPUWwIYie5AvIr436AM/Rf5qIR3JP5C5ppT7SVQg97B/LvU
y9C16PasZyw6h65CLydeo1pEV6CnoqvRX2iN6CfYr+nw5aBN5ndMZu5hYF7m
Hq5erpwpd63BW/DTk/dezzgDfmbys5Szs+AlybWxjPU0KJfqIUXuiT3U+8Gc
zD1dvV01plrTOw9Vb4j2qu6ZEV1DqiXd0y75jNBZsQAckXxG6Kz4FH0deoH2
POdvOjm5R6pXqqdvis6JcrMBfUNyTpSb9egB6MfRq+E3gu3w58Hn8HGgTXLO
lfsmzUE/F83Hqqa1V8oxfDxoi342+l3VOjOS90h7pWcOVC5V78V+5zXJnpa3
9YyblFt5Vr0H/Az/Fdyid3NPebSn5K11jPVn/tOqMfVO1UCyh+Ql9ZDr0c9E
zy3XGZHsOXlP9/TT2ROdy1LwB3y0+kOx19CH+JPqKfBB4LfoNWgtGruW+JLo
XFaCFuhH8r2pBH0O+qRkL2mP5hM7NzmmGns0+pl6tv4BdsC3RZ8VA8D30Xui
vRmoGoxeo9aqHrIzukeqV6qm/o1eg9aimmiZ3GPVa/+vsegcKVeq0cLknCg3
qplmyTlX7pXzX9RLk3uBzszHovdUe6uajMkekBdUk63gP0WvVTlULrdGn106
A2flz6ySfA9WL/4u+t9GZ9xM+A/R3y6PyCvDk89KnTk6e+RJeVM9cfdkz8l7
6rl7wtsn14r+UaZw/5HJ/yr6J5grLyXXqnrarfD/AFh8WkQ=
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
+fxLzIG7a8mjyN83W9vPKTm3PC/y3B55X63lWCFTOJtdzHmPbCl8s5ivHZWt
yKqJ9fRfO7ye+2NkCjJmQec88etth7PQ8+vpH3oU9tuoe75a+pwwhnPEiXF9
z/hN4vKe8+xt+zDNfrC2UB96Q2f5nW+vy5tznQ/zixeyBN8ZfIyLO5GE+Ekv
of7Ife392zLOmri4Ifft92nLOOvpYobcj1myLfV4dPjC73lKKX2e8dXFZ3fZ
trStsDcm7VXTLi+lzzK+y/9ty/0YezHm07RS+hW/Uc05h/8/d1nwSX6ilHdK
njR+pe3gc/xY9H2hqOuCevrkv2QbPe0r+tNSbWmLYe+xTFvu29HRD1P2Xx6w
QlvuG9kzrtiWZzDsCY+JtFvk46H/6Osgy13WkjofOF3henCV8cvsK/7k3KvB
Vxq/aO7cPGucuzfPGV+6LfcP7B2K+zP0+VLrIN947EQBtwYs35ZnipyRXGTd
lDnWdPD+PdK/jnXsnkq7vx3rVQf5Gt7dWr6CPxuUR4W/4VrVdh9GwsK3kRD7
DnyHfajwPezkvEHnIx07ET6S5PnAdr6yLXi9o7jUnHOsjQu6DiFT+pTS1x6f
+7flb/rBPGMeEj/aucacYy51qLb7chKSD92ru3O7zXZYe5kzrJ3IePSc7zzX
/t7f4HlK1Pt7/D45wo3a8je61Wn11HVPree6+61lObNG7kJLzrtL0m985Psh
8typLPjWPQCy4XvbApefxOdnf1Pn/LWM85tvv5jnGMvQ/jhlze21pPE31kk/
frBs4X8JLVhD2EsUPhGE6PtrRN65AX8y9sjFgL+qKTs/jN+zW1JfRO9Hx0c/
e9p4b8eKew1D61l2SD31uGfMN7ie9R8W4ZHKVeTrg9C1lu9j4GOHr91LtbQ7
osPCQ/dy3lTLN6nOrae+vEM9+a638pq+Qi/6e7Z7sd713FOxt9q6nmvyq/b/
b99k/flXa0v9nHkDXqThw9zZfOT5VDqQXvipFH4rr1nvcNca1hz0xRddq6+Q
xsSZG+zP96+23y1HXl9mXtbzQVH+/WhrYISrt+XvP5yH6H2FnbWfdU2W/6A1
OH4knpdaX+Fb9Jz5kI/XKn9r9ZR7bfW8p/y1evDYWsrrPyIcX0v5WK3nuVun
tjx7O7aWMrRSzzMQ7iPv4FnyTsaPqaXMaqrnfVx8GfFtxLewY1ue3y0UuPYJ
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
4o3ez96bMyj0+HuMX1NKfQ49Gjl0mzw3Tf2LtJMth5y7Nup/JOrfvJ5rxjR5
DfqyVnIfFb2O+uGBqdbNOne8tJ8lf93heBznN9o+yXZIYz/A+HFe2lzPNaBc
z7u12G2x4x7kmBDnPgz327jbdlyM5ayWtGlypkI/wQU/KvxhTtP/4oR/+Jic
qF/H3fqNnKovxXH6Ujyofwd+HvdaB35Kd+kTQpk7rYM4+uG7+gLtoP5X6JVL
qBMOcZ/Efmmwez3ih7nnI/6QbeKPgr46p7ndR/49/azwOTtD/O4Tr8IHbYJp
M/UvKfxHjtEn5Udl9fRa+qr0+4ePzAH6nNxqXnxeHtUnBd+Uh8ULv5lCr6Wf
E/Vr6SdOe+kjM1tanqDPynjp+4h1nFtu978p/HEICz+d/f7hF7O/bZxl3ZTZ
zj0NeBQ2HfZBQ6Xxxu5FP3QNWsy9EOs0exvWr2KvQ0ga+yXWNNLQiea6HlEv
axlpC7vXJd5bvWkh9Z53K+16ECFr3KbqnsV+fQHzwhPsUdk3QUfwQrfA9r6N
e2d0C9qnD7TDuglO6F/UTZz9yDv6vfURF8odYXvYXzjnwq6FnYuzPPbu7OE5
y+tufJg06277nd0Dco7Wx/JbS+PO4reIY1DYzqD3WNthTMYZUu5IccE2xPng
puLH2Ry2I2h5uHiRNsq8pB1jHdu0tNvsGIfRlgO/750DhZ/sA87j75wnpOHr
y3vrvMWOXxxvphfvrBOShk8XPnCFjxsh/nH4EvP2OW9aMz/wO8P/bGfTl5bH
+YYPGn5utEMZfO14C572kCX4u+1ebn9fuHhvmJC3wfC7450v0qiXd8Qoj58z
7fOWNm2SlzR87Xg7jDL4NpPOO9zM+63F9Tt1qutr2fZ/y+2+z8uJL3gtaxrz
DX9ofEvxE1zGtH5+W8O5Dl3Aa0/rWMF5j1/aDsoV8uK/d5I03VlZsJ35TjAv
tN9FWtLeKcYL38ZdxfFA60MnPNFy1HuydVOmsD8yF/H95o1n3mGGFvgX4j+I
Ty4ynXXgMWUN8uwX91Q31NJPFx89ZCr7K+Qm8hJfYNYY1ofHLUcaftPIXOTo
h5Yjjs/6o+V2H/bHLIePOXIf+fqt9cGv+J0/aFrhl4/s/Fp8abvw3afe39RP
bqzlHvVx8d3WvuKb+bF4IY/x52ZdZD3EZx7a/O49j798nOtrdZvraulvD09B
R8YMnlvcMSBvg+O5qGmF/+jfPF7O9RJaw1O0U9wdIfz73WxxIR9+6LPF7xPx
LfzZZ5lW+BPDg8W9FPBmPYS/C//iPcyHHOmovC7s1B1dn5G7yGLsGx/q/4xN
Zq5+yNg3PtbnGfvV+/o5YwP5SJ9pbCkf6LvMmcVX+v5i9/hE/2Rs8l/ob4wO
xp6Q/SVnB9yX445dYWNCp+AcAZ9k0tj/0nZhKyKkTWwRHU3jzOJr/ZjZv3cw
bTPrI44NAdsWtivOWb7UPxm7zaf6O7NHps/gzl6JeLFX3ka82RNtZRp7Mfbe
7LnHiB/xw20P28NY0ynD+cLn+pMfZR+K/X3vSrs9ClzIt4V9LexPhIX9aWFx
PdJ+0u+RtlnYOXqaNsp02mMvton4YQuF9sW9RkLuYLImo5/eKX+gG6NLs/6z
V0N/xr7Dnqiw9xBi40FXQM+d5RpPOXRl7FbsnyiDPYt9FfEvbYc20EVut+1p
0pE+ofsPr7TvI0eYRhl091NsA70fnfxT2y9sErOtFxsV+7y3K+12THjuY/sE
3gtpt51dS72GfWOx7yFkj80+i30a+0h0/u2No+dvZ/w987I/n0dbza213LtC
Y/aJ6DczpSn6DXviwjYww7Q37HNhIyS8VjpONY3+sI+9Xppebdr7tk+975hO
f96yDsqgV7KOsX7O797ttlr2AX5l7vIWzKuMX0u+w/VyhK+05DsxhKTx/hS+
E+xHeJsKvw/8KHir6/WWfHsawGdqmmXwXcKH6U2/4TvFO0S0Qxne/XqpJdtD
f6QPjAlnsx+6t+XdrucjfKElz5fZE7H35c2vF1uy/EfiAn68B0Ze0j4R31n2
5ypxou2p4vqaOBJHv4aPi/MoQnif/UybaeiU2DnhNfY2VdPGqztup65HOvpx
d+ugDHeZ8BfDB+w487Ln4A01/Ljw6XpLOpHvHfPi38W7YjOkO2+b4duFj9dc
Q9KOtz72au9ajnrfs27KwL+LOvbQDj+fK1vafeBGiPfb8lTxfxXoYbSBHlz4
rxEe09LuczbWfr4pD9LeGNMYm2Ol0y2WI16cK7NW7KbMQlYhixcR1939xtxC
Tnc2bQf5tzhXJ2SN2tX6qItz1aVsYyfTiV9jXw+XR8Y7JvAOvkv4MJ0gLXeU
d9jrDpVfhkkvxoc9wKiWdh/BI+SzoeabZjsjHdcjLMPYsE8YbXv4ThW+V4Ts
p180jW+9tXdh65klvoz5bMMTHOfR0v1K6wDvl41fJV+Msm1spdiLsJfuo5xA
J2Kfuoo6FPYS/qMF/5NW7Sf8fsjv+JFM8V4ud3L5/zL8UfBF4azmHs/We9Tz
+9Ra5nuorf0/KymLD0pRL3ehkUvc3+A+B3Kjm3FkzsbGeSOwu3HeCtzEOPNo
Pr8hZ/BT//t9S+vj7gXzCx9N/DeZL/hXEWc+ci+COPOLexTcq2AOco+CODKQ
uxDEi3f6iL8UtHym+rcJ7285Uxd33m58sprvO75QzTsnT1VT3nYVP2QRedta
2+Uv6cWbjODE3AcX4sgTcKefyNh5pQf0vluaI4fb7Dc80Co9kNXzSEvkAN8q
AnTirgCyF59+7gowZ+nnh87lj40zdz4xXsijQj69r+yZabkP5H/wfkteJX2O
c4dv9GOGeamLeQqu0JI3qninibe7eMuYd+s6a7Pj9zaG1/t7ur/JO826qWuq
9RWynxA6cSfvLvmWef2OuDJf3jXeLG2gC+PHnSHuEFGGu/3UMdTfwwzv93df
8+9v+Li/HzAPddwgPWiPt/jgG97V20w/sGm15B146NxqygfGDLw4d8Iei132
efnwUUN4j7qaHE/uc9Dmg+LWot21uzS4299Fecq+LN/SLvbSedrSZlq8Ncy5
97Xa6rHZdzPEt2SqcfxNNjLER2Uj5VNhOxys7Oum/CQNGwnrBevNsHrqByPq
aTc51jTOJVo8mzjac3LOljlnqHjWcJRnzPg74PN7vXh3tU3k7yjTSWM9H28b
6APDxKmP8hU5O1y77NWeJc6wbWzh2MyxnS9XT9y4K1zIa+Q39iDWBNaG1/SF
wCcC+T5bed7bdpDV2JWOsAx6xXBxwk51tDhhRxprvLBVEd/cOgr7EyFrUA/b
L+xnI6x3M9Npj/fUeKON98nGSNfivecbpSnnmfgs/am/0p/6T3BeR/wPfZQI
2TfgN8S5xV/6Ov2lnwH+FL9rf99BGhR6DSFrHnn5Tv5FpTFnEE/Jn8wtZBK+
icW7qoQL66vYWV/FZ5wnyOox9fQNHVvPuw/MIe4ZjfZezBGe7fxP350l63mO
xftnvDfBfbetPBdCx0ZXafMOOnfL8fHibTzeUOyi78f69fyPCHzb8OvifIl9
BHsHzot+04eJs9DVjPPuCffdtq/nO1a8DVf8TxQh7/YtU0+e5x3W7aQZfMxZ
6OrSt/gfKd66K/6Pqvh/qt+s9/9MJ+0R6+btOngX+kHjNaONGxnjeupN6E/o
69gGuJvNveoWz15n1tLezx3j4j43YXHfmnCG94O5JzxdG8St1vWB6TO1Zdxi
GucJN1jvp7bJ/ek2/TZvqeVe8G3r/tE7zQ+5N+bOdPFe0QOmvWv7N2g7mN3c
fnf8du8qU5470mdrH5kpTtyJ5o0f3r/hfSneSOCtBN5t4j2E4p2qf5vGuxHF
uxS8YVG8acE7Uby9sIjwqTYk7lbvZBvFmzu8wbO17VCGN4UWsj3a+Eg7GffM
fy233zsnxK7GPfVftOfxNlEny/OexY/a8/703PCmWt5p/1lbHe9nfKbtDXvD
fdL0C+l0p7Qp3qDiLjh3wos75YTcZb/H/pB2l3Q8xfInGb/FOni/6m7TT5Uv
xtoG48PbRsWd8hMtv6+6LXpt8SZF8UbFB+X2dyw+1N5ZvIV0vHxGm8XbV+NN
K95Oor1v7MO9ze3vHzE23M3n3aS9pMuE5vb7+oTFnf4z5aev7H9xz/5u64Uf
eReK96GKd7Kg35fS6C7r3sP2yp45zqjlPOONqaOl9+7moz3ed9pHuu9m2pni
S9rZpuMvdIPtF2+hjbbe4o0wxmB/9w3YROHFT7Rxwpsfa/tkf/+pa+FI13TW
9nXreQ/2qlrKReQjPiIvqHuhk+JDim80fqToIG94dvu3/1c112DOzOfx3Bzf
nI6W4Ty8g2fi+O7yP0Dct53pb+64PaycQ9fk2y3mIY0y+KtRHz7Y+GZ3Ek9k
OLhSdyHTb7Ys+ii4oKuy7rykTsZ7pbwxyvoKvjfaH/Z8LypP2fu9ZJw93MvG
//Z9q6af+RR12MLO8Yr5nlVvQ9cs/uuOTQg0uF2a8J4u33i3dV71P94spU+3
SX/6e4d95u3dv1w/Nq7n927cAalnnRvWcw1grNA3eSPnC+3lD+m3iG/vI+6H
0G/hHeRj8S4g4VbyVh/TmPfIuG3ku96m8eYeb/As7hwlfVtlwVaWKd4K5B0f
3tlb1DK8y8PZA+cexJFh4Eo+8OUshXeIOIdDLvOmD+cZxRs/hKTR3iLWy5tB
X3mmwds/1E0Z3khFZ3imlvICnHZUfmxvnPlHvcX7bYTFW2uEyzsnkb8rOUdX
MI6sWcbyrGXLaTfZ03LkK94TLN43XKK5/b3DJaXHeOlXvEe4nfgx7zeX7g36
mdxcS7nAurKKcmIl48i/pcVpZ+smjo8Db87yNu3/A2Kt2tY=
          "]], PolygonBox[CompressedData["
1:eJwtlXmU1lMcxq9Jzfv+7rU32d4ak1IpqSwH0Y4cdBi7bGVfmnJUsu9SOSVC
JvsSyTqJiWypIxSFE+ocTCVMi5g0xSSf5zzvH8/5Pc/93v1+v8+vYujwyqqS
EMIksCMYH0PokYXwKHgcflgKoQa+itg89Ldgd/TxO4TwDXwtGIJelw+hHr4G
1MO/ou0Mxh4NauF7gBHEfgQ/5912DLGf0JWZ2xTbk7aJ6H/RreDX01aOvkB7
gv8KBmdeQ2uNp882dC/wAPo+dJPmBpPQv0ePXUv/3+BjwH6Z9zxVewF1xOag
ezP2qOSzzUb3hD9HfBb8TXAo+gf0cvq/hu6BPj35rK3BqOg70F0sRZ9D7Eyw
BN4GjI7eg/aitrOIvYB+H94KfAp/CcyDfwT6E+8M8pnPOAG+jvh6xn+NHow+
GSzjAReiB8G7J+9tJ1BF34PRg3i7mehu8HOTx+oOdBdnJ+9Vd6y7rkTnmoWw
CH0afCB4nvnno0+A7w0mw5vYw17wLxizC9hI223oRfBdwSb0negJ8D7wavAE
/EHQD550Rvh3oLY0hL7o7+GLQU0uhC3oexh/f3RsIFgGnwx6w2eAp+B306cx
85paWzmgXJgOnoTfSLzAfPXom+DjaOsOnwKmKV9At8xnqoY/BPpnzvEF8LG6
w8w5+Rj8DuZoyHxmnb22ePYN4GZi09EfwOeCvuh3i3fxF7hduQUWwHO0fwaO
QJeRbyXwifD50Vw5d3hyn1wxJ45F3wU2Zz7ze7R/rpziLcr4TiW2kG9pcQ/9
0HOj71JjNFY5odzQG+gt9k2+i23MsU9yDiuXB4CH4QNo+zjznJpbNaxa1h3p
rq4FLTPX8JToHFeuq0YfgXdSPmWuyXHwXsm1pjEaW4VelflN9DZt0NvZy2rF
lavRuaIcXgrvmFzbpaADvHWyV/3HmAK8LeiJbg4q4O3lQfAWoB38nWhv6Yq+
El2enJtaU2vPJr4V3oW2y9HPoFegd0Yfgn4ZvQFdgT4PPRP9B7ot+nz0K8oH
9P7yLPSr6D/R7dAXqpbQK/Ve6D7oA5NzVXekuwqgA7yBPtvpW5a813/QLZM9
Qd6gN3mReFetCS8wdBj6l2gv0RqrtVb0WvK4OviRyd6mnFPurYg+mzxtObxL
cm3Jc+Q9ymHlsjxKXnVcshcoh2foX4A+KPOd7ZbskfJK/TOeVR5G373e5F5i
H0a/nd5krMYme5PO8LS8JPnut+jO4W9Hn11rXJH8D9K/qMC3Wt7P9wDVF32a
9DbRbyOPXB9dc6o91ewc9DS9edFjFhfnKBTf+BO+JyV7qTzvxOSaUm3JE0fy
XRJdG6o51d6pyV4pDz4luYZUSytpGwa/CtRl9hB5yYjk3NY/Vv/aUeh6/G8N
enSyx8nr5JnyTuW0cls1MjzZc+W9mvNq+DXJa8nD5GVvRd9dZ/RlxG5N9iZ5
4C3wG5K9UGuO0b8i+u7a03YRelN07iqnG+CN0bmrnN6st4juq5zeqtyOzn3V
xEZ4Xjktv0Hn4COTzyaPvw7eAnRC/028OTwl77URHeGvR+e+3nQI+g35Z941
MVS5FT22I/pidE30WprzEvSs6Lm0h0vRzZL7ao4S+JfR3lBezIX/AaBOQls=

          "]]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV03V0lQUYwOE7BWlESkFCUGmdpCJIh4kwQlIJQXpSC3J0LIDNTWEWKF2C
khIqoUgo3R1KSSkh+Xx/PPu977tzvnPPd+4t1jEyondYKBQK96dXtlDoxeyh
0Nf6gr5EOAnscNvJzyTaf9JkelPeXoED5oMcIpKKbtP0MEdYz1S3X7SyTtdK
+o1W0Q2apK9QlZepxqtMZJf/72YTk+wbNYWPqW5/jaPmY3xCH2q41eS4+QQn
6Ustt2/1FKc5Qz8+df9VZ1DbPFPr6G9aT2dpXZ2t9XWzNtQ52kDf4HUm8xZv
8yaNeIdkGtOEd2lKBCns8Yz+fGb+Xf8klQE0c2vOWfNfpBFFC7f3+Nt8Lvj8
RNPSrRXnzReCZxJDa7c2XDRf4h9iaes2Vy9zhasMpJ37PL3Gdf5lEO+7z9f/
uMFNBvOB+wK9xW3+Zwjt3RfqHe5yj6F0cF+k93lAyD5MO+p3GqaP8Chx9k66
WDNoRh5juP1DXaKZNDNZGGHvrN9rVs1Gdkbau+gPmkNz8jij7B/pUs2lT5Cb
0fauukzzaF7yMcbeTZdrfn2SKeaxdDf34CkKMNVtHD3NvSjI06S7jQ9+R+ZI
ClGYz90mBN9tcx+KUJQv3OLZSwJT3P7Q/ewLvvf2fvSnL1EMIJUYYolmEANJ
YwhDGcwKzximW3S4rtQ4XaUjdKuO0h91pK7W0bpN03W7ruEZczGKk2gfo2v1
WX2O50kK3pWu0xJaklJMDN6Vjqc0Zfgy+M0H78QcT1nK8ZXbZB4CSw+nQQ==

          "]]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.14637212643678166`, 
       0.43134474436762316`}}, {{-0.09357040229885061, 
       0.980862563512372}}, {{-0.09357040229885061, 0.980862563512372}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.2695761494252874, 
       0.6117834312509736}}, {{-0.22733477011494252`, 
       0.010321141639805631`}}, {{-0.22733477011494252`, 
       0.010321141639805631`}}}]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], PointBox[CompressedData["
1:eJw9k3tMk1cYxrtxCaCrDFizCDKcjHXDoW6uWkx8YBAhEVlpnDLHiFY7YSAw
54yruBU10CwDu81FYxcsmBEGNooEcBT8Cr3FrNBCK9DSllasvQADx1VW4/hc
+N7k5OT3xznnfd7nORt5pVz+yzQaLWVlkTtTveYYt6uXSHj1ij9BMoq1h879
IX3QQ7QflDkjP7MhV/Mam5/XTfHtNMKcPNdBeGhB4+yj0wjpKRCE/3iHSFTz
1PYqG4SzjLTk0gqoXA1FWTQvpCU32T5NPQSetqjld9yYOZe0ZszdDg2xltO4
4EW4t0st7u9Ap/VUdWjcNOL27xV+1HYX1T3Z7MXlMdwuinxLzurGyT+96yNT
/sZM6tZrsYEEvvutwtbC8IK5uL335Mc9SJHPOiqDp5DJU5bHs3pxP/mViuFZ
Bw735ewYilEiv6RTEyiehnCn40lVgAq6fbufyc2TCC95W+84rcLk2aCowsOP
KSa2jdZfjnTjLv3ZFxMGNap+b5XPLTxESjpZGnwpPNDAr7HgjN8p1L6hA3dz
N4et8EF8vGzXt8F9yF1XzWo1WZH7tan6www93kzSMmSVXopX3/c0RhfVdOox
ONC4JXTeBFrYgwgpx4Dt/ZdvbCwYhhgxM0tKA1RRzSI604ybTWQN4Hm0UWpL
NUFF2vPTIBipBeYMj5FiU3nYYr3ShRfjDDTihI7bOXjUCcdKt/QzRvBOa7MF
gVqUtZMCjZQf/olPLES+CTUfuApCLC6KmV1LSkXhJPx5jHt6/hDEiidEdo6G
4q+EsRd+4IxD9PPnEqZ5CIfoW7vDEpUUZ+W8zwjP11Kc6SMsJ2Zc4Lz30ori
YSTkkQYpUHz1kqry6TB0F97NSgi7Q/H5PZWJN3YZoCDj1jAC65XMf/0b7kMU
EPv9TscI/H37u5cPtODiKTsv021Bkiooi2VXQjpWvGG5bxT9HZcqyoNVxNKt
g4XPBVZqXtIXDdjALL3Oavb9hYIJQ2k73Y6Q2Rh9XUwdsbmSvNAOUfz8kuis
FKu8en4u7vV9687bQTM8Va3flE50ycmyY0+tUkOLHkN8y5HdERIHFi7u+Kc5
xQHf3iDZPZMDAkle1aMmDazZtT1Tx5wYkW+ytLTJiFW++khXG+BtIuq9K4Gv
dWI+oq732hELgjt+OV4md1J6+8l4zzvRqOIiw3kLHvI7jT7EVFPotkTREOYk
sjTi08doTS/nb/lm4P98Gdww0Md5vxZfJ/4D1bkUNw==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[4], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxFlAtM01cUh4susgErjwlDEaaRaB0PpxgFmRwMrKCZDojjJWOAZQibiA4S
ZA4E+hqZuMS5EAkbDlQmWYUOLGN0p+VRVqBgC5QWLPTxF+RRygyCIIG1Ev67
yc3Nl5vc/O53zr27Ui5GpW6iUCh087SsieU0daP0OVKZB+0va7RQdqOdvcSd
w8RdyQEmhz4oHpH6NX02h9Qj6sKERBHJZ2QxFXadWvCsTw5yKjdhbM6wG1f5
F4gM9tYf5pvwQk9Us+KcDn76Znvyn3tNGDp5m1nJbAM/3j/7DDZmPjzv+Ggz
AW/S+4uTGmYxnvqB0MarDd4NOXrxgOcszjjEuFBKGsE4HCrlyYzYvfXrVL8p
Hbwaqm0oOGbEu5z8vw/VDEK71Q3YkTWN2unSN+Lab0H/6ov3jWNTmJu2GFnK
qwY7RlRL8L0pHNhfn349tAPMae47ukxhcBHtxKqLHgQ307IClybRqyOlY5Sj
AckPvWft0ieRd8qjhCaXgv9ZTv4fL56hfobnwHUUk7w601vstp0AeuxsOjP1
GXr8tpYhEA9B9KfmMTiBPJNzRHWhGioEroorthPI6j41VEbRg3JHzjmZfBzX
3PorNccHoLl+vMZt+inWBToxHGO0oDJfT9hFYDZ94VKcoBd4Iag+mk1gkdaf
3hsgRqbFvzuBYSvdFFZGH+yk5q7oKASWpkyyuqyU0BK8p8OWMGDQkKSQES4H
X9uxCX6WAZWs7JcinRLOZwVe2XLEgAltsWsZ4lEIshRAq0f2cuR8PE0BdQqz
wAt6zP6Oy6zJHABWxlsRNS56pLkW+PZV1ZHs7MRoYYkMkL6Wd2thvw6bGhvd
yh7ISP6ip0Tz+x0VydfFpwMWl8egijG05+SCFuPq9hazRxQkN5g03tIQPUxJ
bldlemtJ36/9Ph3DEp670Ml5AJ5zNnsU+I8h46CqtahKQDLxTmbRElsP3sbP
HypWR7E8/2Ptv50j4FAkn9/pOop2XwYJ+PF8DJ/wYWeParB624yP/byA5Fee
OR3Kih7wvvpLd+viE1yRnREuR9ev1+PkE3xb/ThMRX1M8s9d4fOJFfp1v3PD
mLvJejw5Gtf9CoYxKWYLp+o+Bzf4Gj13X21CMrnfVBgxfpxXC1srI3ysbIZJ
ny8PtV7+ZLeaPD/D4u+hCuW/VjuFyQj4qtTSMUrMK0/gEA8kwH09Bsl+3+CN
/BtcGUAZiRTySRZJvO96HXsEWnP6b30HkMY/cGL5jhzar3oe7gnrJ/Os6K51
vkftJ/+D7+9Zi8/nybGymqdqvmkAia3lgf3PxI+XPjq9TYZJ7mm+wbtZ8B81
BGoZ
       "]]}, {}}, {}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"TRerr=0.% TEerr=3.12% Marg=0.0535\"", FontSize -> 21, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{-1.1742456896551725`, 
   0.7442169540229884}, {-0.15644794775238186`, 0.9863304025088373}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.600633817859412*^9, 3.600633879575737*^9, {3.600633916698587*^9, 
   3.6006339915512037`*^9}, {3.601218489652751*^9, 3.6012184974546328`*^9}, 
   3.60155905782364*^9, 3.6015719848275137`*^9, 3.601572961195009*^9, 
   3.602859191746373*^9, 3.6028603327363863`*^9, 3.607435246854671*^9, 
   3.6375663428422832`*^9, 3.6375742022727137`*^9, {3.637583922046226*^9, 
   3.637583926164082*^9}, 3.637586133285777*^9, 3.637589376085411*^9, 
   3.637660403344537*^9},
 TextAlignment->Center,ExpressionUUID->"71e93a39-7767-4b0c-b1ef-53c69e48aeb6"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"1c02518c-051b-46ff-b141-853379c92ffc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tConclusion"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.5998959933365173`*^9, 3.5998959950405684`*^9}, {
  3.599899418576304*^9, 3.599899421983275*^9}},
 CellTags->
  "conclusions",ExpressionUUID->"9038aaec-39ae-49a5-b483-4f48d9f863ac"],

Cell[TextData[{
 "In this notebook we presented several max-margin and SVM classifiers, both \
in the linear and non-linear setting, partially following the exposition in ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]},ExpressionUUID->
  "0de5b030-b3c2-4825-8297-e6dce8950935"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ". We have exploited the Quadratic Programming functionality of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve most of the optimization problems presented. With the help of \
dynamic interactions, as dataset drawing and direct manipulation of the \
algorithm parameters, this Notebook can help understanding the algorithms and \
the role of their parameters.\nThe implementations provided here could \
virtually be used to address any binary classification problem. It is to note \
however, that in order to extend the applicability of the methods to larger \
problems (with more than a few hundreds of examples), it would be necessary \
to abandon the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " QP solver and implement a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interface to existing and efficient C++ SVM implementations."
}], "Text",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.601559105921438*^9, 
  3.601559198545088*^9}, {3.601559249982498*^9, 3.601559282462489*^9}, {
  3.60162661258946*^9, 3.601626632824834*^9}, {3.602859200950872*^9, 
  3.602859222123472*^9}, {3.607435279179245*^9, 3.607435281253655*^9}, {
  3.637581868498744*^9, 3.637581869905108*^9}, {3.637583980164358*^9, 
  3.637583982248032*^9}, {3.6375842030551443`*^9, 
  3.637584203566497*^9}},ExpressionUUID->"53f17872-0bbf-44c3-b728-\
1af94fa5b3e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.5998994728452187`*^9, 
  3.599899474304348*^9}},ExpressionUUID->"26711f6b-891f-45f2-8830-\
d2df3477cac2"],

Cell["\<\
\t1.\tNello Cristianini and John Shawe-Taylor. An introduction to Support \
Vector Machines and other kernel-based learning methods. Cambridge university \
press, 2000\
\>", "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellChangeTimes->{{3.6016267198091307`*^9, 3.601626780317151*^9}},
 CellTags->"00004F53",ExpressionUUID->"39c756b4-49df-4694-90df-a54c708ab275"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Presentation",
WindowToolbars->"EditBar",
WindowSize->{1280, 776},
WindowMargins->{{283, Automatic}, {84, Automatic}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/marko/print.pdf"},
PrivateNotebookOptions->{"NoteStyle"->"NumberedNote"},
ShowSelection->True,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["DisplayFormula"]], 
   Cell[
    StyleData["FigureCaption"], CellMargins -> {{54, 24}, {10, -5}}, 
    TextAlignment -> Center, LineSpacing -> {1, 2}, 
    ParagraphSpacing -> {0, 5}, LanguageCategory -> "NaturalLanguage", 
    ScriptLevel -> 1, CounterIncrements -> "FigureCaption", FontFamily -> 
    "Times New Roman", FontSize -> 12]}, Visible -> False, FrontEndVersion -> 
  "11.2 for Microsoft Windows (64-bit) (September 10, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "intro"->{
  Cell[16404, 374, 370, 8, 70, "Section",ExpressionUUID->"da50e2a6-9df2-4511-9cd8-3960b64fbe16",
   CellTags->"intro"]},
 "linear_classifiers"->{
  Cell[25002, 556, 629, 13, 70, "Section",ExpressionUUID->"29290889-37c6-4796-bda1-293f86a9c7b3",
   CellTags->"linear_classifiers"]},
 "sec:max_margin"->{
  Cell[123124, 2409, 636, 13, 70, "Section",ExpressionUUID->"ed58420e-a71e-415e-8225-5acbfcd08dd0",
   CellTags->"sec:max_margin"]},
 "margin_bound"->{
  Cell[123785, 2426, 209, 3, 70, "Subsection",ExpressionUUID->"b4618a38-f3dc-4bd5-b10e-3eb03253329f",
   CellTags->"margin_bound"]},
 "theorem1"->{
  Cell[130101, 2597, 2407, 63, 70, "Text",ExpressionUUID->"e256784a-bcf8-4e6a-ac56-698afbeb14e2",
   CellTags->"theorem1"]},
 "eq:max_margin_hard"->{
  Cell[154092, 3236, 1216, 40, 70, "DisplayFormulaNumbered",ExpressionUUID->"1ef6d4a1-d781-4f70-a8b2-b50cc271060e",
   CellTags->"eq:max_margin_hard"]},
 "eq:1norm_svm"->{
  Cell[199641, 4134, 1763, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"22389821-95b9-4546-b665-4b14d0c1044c",
   CellTags->"eq:1norm_svm"]},
 "subsec:hinge_loss"->{
  Cell[227728, 4774, 265, 4, 70, "Subsection",ExpressionUUID->"bd0be1ea-33fe-47f1-b756-3132ee5e0c59",
   CellTags->"subsec:hinge_loss"]},
 "sec:svm"->{
  Cell[286408, 6228, 522, 10, 70, "Section",ExpressionUUID->"8b377088-801a-4cc6-acb9-b7fbd0e8f3b5",
   CellTags->"sec:svm"]},
 "primal_problem"->{
  Cell[289555, 6293, 1279, 38, 70, "DisplayFormulaNumbered",ExpressionUUID->"8c84cf9b-3ddd-4ac4-b928-9579ab0bba01",
   CellTags->"primal_problem"]},
 "eq:dual_problem"->{
  Cell[295071, 6459, 902, 27, 70, "DisplayFormulaNumbered",ExpressionUUID->"683e7de3-2e30-419c-9217-b7047432b84e",
   CellTags->"eq:dual_problem"]},
 "eq:kkt"->{
  Cell[303420, 6697, 2297, 75, 70, "DisplayFormulaNumbered",ExpressionUUID->"9e89ef74-fd83-4028-ab0c-3017a3d0581e",
   CellTags->"eq:kkt"]},
 "eq:hard_margin_svm_L"->{
  Cell[309832, 6876, 1551, 56, 70, "DisplayFormula",ExpressionUUID->"60722845-d174-438b-a5f6-30a0a1e979d7",
   CellTags->"eq:hard_margin_svm_L"]},
 "eq:hard_margin_svm_w"->{
  Cell[315795, 7076, 938, 27, 70, "DisplayFormulaNumbered",ExpressionUUID->"92c91af1-1f4c-4d00-bf47-db60389cfab3",
   CellTags->"eq:hard_margin_svm_w"]},
 "eq:hard_margin_svm_Dual"->{
  Cell[330209, 7503, 1571, 56, 70, "DisplayFormulaNumbered",ExpressionUUID->"7f4fc88b-2349-44f2-8696-97b0b614fb0d",
   CellTags->"eq:hard_margin_svm_Dual"]},
 "eq:soft_margin_svm_L"->{
  Cell[437069, 9585, 2098, 74, 70, "DisplayFormulaNumbered",ExpressionUUID->"3df713f7-d94c-4d16-8fad-09da2f988b2f",
   CellTags->"eq:soft_margin_svm_L"]},
 "eq:soft_margin_svm_w"->{
  Cell[443889, 9816, 1254, 34, 70, "DisplayFormulaNumbered",ExpressionUUID->"a61aa2ce-25d4-4dc9-8077-2eda2a956a71",
   CellTags->"eq:soft_margin_svm_w"]},
 "eq:soft_margin_svm_Dual"->{
  Cell[455561, 10188, 1436, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"b6d64be6-34cd-4247-a16f-53720d7aca68",
   CellTags->"eq:soft_margin_svm_Dual"]},
 "eq:svm_w"->{
  Cell[503705, 11376, 1026, 30, 70, "DisplayFormulaNumbered",ExpressionUUID->"a9b18c05-dc77-443d-9de6-688c1639565c",
   CellTags->"eq:svm_w"]},
 "eq:2norm_svm_Dual"->{
  Cell[521498, 11902, 1394, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"f89fc744-0244-459f-8fdb-0154db8ebe6c",
   CellTags->"eq:2norm_svm_Dual"]},
 "sec:kernel_svm"->{
  Cell[554448, 12671, 640, 13, 70, "Section",ExpressionUUID->"33810f8a-a097-46ac-a305-18fd965ff113",
   CellTags->"sec:kernel_svm"]},
 "conclusions"->{
  Cell[832169, 17824, 567, 12, 70, "Section",ExpressionUUID->"9038aaec-39ae-49a5-b483-4f48d9f863ac",
   CellTags->"conclusions"]},
 "00004F53"->{
  Cell[835241, 17891, 402, 8, 70, "Reference",ExpressionUUID->"39c756b4-49df-4694-90df-a54c708ab275",
   CellTags->"00004F53"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"intro", 837098, 17941},
 {"linear_classifiers", 837244, 17944},
 {"sec:max_margin", 837400, 17947},
 {"margin_bound", 837552, 17950},
 {"theorem1", 837700, 17953},
 {"eq:max_margin_hard", 837850, 17956},
 {"eq:1norm_svm", 838022, 17959},
 {"subsec:hinge_loss", 838193, 17962},
 {"sec:svm", 838345, 17965},
 {"primal_problem", 838492, 17968},
 {"eq:dual_problem", 838663, 17971},
 {"eq:kkt", 838825, 17974},
 {"eq:hard_margin_svm_L", 838993, 17977},
 {"eq:hard_margin_svm_w", 839167, 17980},
 {"eq:hard_margin_svm_Dual", 839351, 17983},
 {"eq:soft_margin_svm_L", 839536, 17986},
 {"eq:soft_margin_svm_w", 839718, 17989},
 {"eq:soft_margin_svm_Dual", 839903, 17992},
 {"eq:svm_w", 840077, 17995},
 {"eq:2norm_svm_Dual", 840245, 17998},
 {"sec:kernel_svm", 840419, 18001},
 {"conclusions", 840571, 18004},
 {"00004F53", 840717, 18007}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1021, 30, 19, "Input",ExpressionUUID->"5f6e3166-6362-45df-ae17-5dfc7098e067",
 CellOpen->False,
 InitializationCell->True,
 InitializationGroup->True],
Cell[1604, 54, 220, 4, 19, "Print",ExpressionUUID->"3d924dca-edc6-4caf-940e-1bf7278d5846",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1861, 63, 867, 12, 203, "Title",ExpressionUUID->"44c5b680-9a4b-4aee-b511-cbcf0059a6e7"],
Cell[2731, 77, 238, 3, 47, "Text",ExpressionUUID->"1b4a5b8b-1f1d-4b03-a44b-1674ee239cdb"],
Cell[2972, 82, 504, 8, 41, "SmallText",ExpressionUUID->"a7470c8f-0ebf-4509-8af1-ade08bc97c7e"],
Cell[CellGroupData[{
Cell[3501, 94, 162, 3, 41, "Subsubtitle",ExpressionUUID->"32aae7f1-b7c1-47d2-83af-ef83930faf20"],
Cell[CellGroupData[{
Cell[3688, 101, 158, 3, 63, "Subsection",ExpressionUUID->"85d297b5-5c28-49e4-bad0-3eb5a7d6af55"],
Cell[3849, 106, 12518, 263, 886, "Text",ExpressionUUID->"2e8b85dd-7fa4-4b2b-91a2-a65d4335f496"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16404, 374, 370, 8, 70, "Section",ExpressionUUID->"da50e2a6-9df2-4511-9cd8-3960b64fbe16",
 CellTags->"intro"],
Cell[16777, 384, 8188, 167, 70, "Text",ExpressionUUID->"e17c650a-e74e-44c7-8975-6f8a93d021b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25002, 556, 629, 13, 70, "Section",ExpressionUUID->"29290889-37c6-4796-bda1-293f86a9c7b3",
 CellTags->"linear_classifiers"],
Cell[25634, 571, 2047, 49, 70, "Text",ExpressionUUID->"3a01cec4-642b-4f87-9fdc-c3b7c9e338d9"],
Cell[CellGroupData[{
Cell[27706, 624, 596, 18, 70, "Item",ExpressionUUID->"9663ee5c-52a8-4fa5-9cbb-ca93f31f16f1"],
Cell[28305, 644, 288, 8, 70, "Item",ExpressionUUID->"c8b3bfe0-d9e5-4ec8-8deb-0c4d3f4caae9"],
Cell[28596, 654, 351, 8, 70, "Item",ExpressionUUID->"d5014746-21ec-4fe0-a782-cf26f33f4dd6"]
}, Open  ]],
Cell[28962, 665, 1585, 32, 70, "Text",ExpressionUUID->"63a54088-f346-4dba-b869-3900dddd269e"],
Cell[30550, 699, 1072, 31, 70, "DisplayFormulaNumbered",ExpressionUUID->"fdc3bc5a-186c-4473-baea-14124a589410"],
Cell[31625, 732, 2123, 56, 70, "Text",ExpressionUUID->"cfabb73f-f827-4013-8739-af2cf388d313"],
Cell[33751, 790, 751, 22, 70, "DisplayFormulaNumbered",ExpressionUUID->"1a1180d2-68bd-4aef-ab28-12327804cee6"],
Cell[34505, 814, 3234, 71, 70, "Text",ExpressionUUID->"5c3d4251-9684-45ff-839f-483b44aba4e3"],
Cell[37742, 887, 71556, 1183, 70, "Text",ExpressionUUID->"71f6411e-0fe3-4df7-a916-84bd312f421c"],
Cell[109301, 2072, 1393, 33, 70, "Text",ExpressionUUID->"cf1e887d-594e-4b34-b29a-82a0d36130e0"],
Cell[110697, 2107, 922, 23, 70, "DisplayFormulaNumbered",ExpressionUUID->"b7ba8b92-2d08-423d-b2ed-ea15825544eb"],
Cell[111622, 2132, 3045, 79, 70, "Text",ExpressionUUID->"b603059b-483d-42e8-9bab-a7c43774862e"],
Cell[114670, 2213, 805, 23, 70, "DisplayFormula",ExpressionUUID->"5e08987a-3dff-4cb7-b2f2-cf9688d287e3"],
Cell[115478, 2238, 2980, 63, 70, "Text",ExpressionUUID->"f9bb16e8-f229-4f89-901d-d1ae3e127908"],
Cell[CellGroupData[{
Cell[118483, 2305, 1610, 36, 19, "Input",ExpressionUUID->"d42f9947-8486-49de-a5d0-1de71ec9bb33",
 CellOpen->False],
Cell[120096, 2343, 2810, 55, 70, "Output",ExpressionUUID->"334c5d3c-7a22-48a7-9ca0-c0fa493bced4"]
}, Open  ]],
Cell[122921, 2401, 166, 3, 70, "Text",ExpressionUUID->"aa7ff82f-47c9-46c2-8a3f-935edd08c35e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123124, 2409, 636, 13, 70, "Section",ExpressionUUID->"ed58420e-a71e-415e-8225-5acbfcd08dd0",
 CellTags->"sec:max_margin"],
Cell[CellGroupData[{
Cell[123785, 2426, 209, 3, 70, "Subsection",ExpressionUUID->"b4618a38-f3dc-4bd5-b10e-3eb03253329f",
 CellTags->"margin_bound"],
Cell[123997, 2431, 2296, 55, 70, "Text",ExpressionUUID->"7722d8a6-b60e-4ff8-a851-e8b4a7cfb58c"],
Cell[126296, 2488, 620, 17, 70, "DisplayFormulaNumbered",ExpressionUUID->"d5a5d358-b2b9-4e66-9997-3cd9f5030214"],
Cell[126919, 2507, 2081, 54, 70, "Text",ExpressionUUID->"b7a5ce11-d890-429d-a2d1-32222b4c6707"],
Cell[129003, 2563, 596, 18, 70, "DisplayFormulaNumbered",ExpressionUUID->"564f0eea-78ee-4775-8429-580f8c052732"],
Cell[129602, 2583, 496, 12, 70, "Text",ExpressionUUID->"b0201633-e4e6-4c4f-aadb-9803f821868e"],
Cell[130101, 2597, 2407, 63, 70, "Text",ExpressionUUID->"e256784a-bcf8-4e6a-ac56-698afbeb14e2",
 CellTags->"theorem1"],
Cell[132511, 2662, 941, 28, 70, "DisplayFormulaNumbered",ExpressionUUID->"20edb297-8349-4427-a905-c1d9d6a8c7cd"],
Cell[133455, 2692, 2789, 64, 70, "Text",ExpressionUUID->"492d6e93-e7d7-4d9f-84d7-a76a1efa19f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136281, 2761, 239, 4, 70, "Subsection",ExpressionUUID->"6a20980b-8921-4337-bf90-0fe2d973132c"],
Cell[136523, 2767, 2836, 83, 70, "Text",ExpressionUUID->"f3eed6f6-045c-4a49-a6a3-13fe302ee9d8"],
Cell[139362, 2852, 1348, 37, 70, "DisplayFormula",ExpressionUUID->"f4790b0b-9e80-46fc-b708-370229d25ca6"],
Cell[140713, 2891, 1628, 32, 70, "Text",ExpressionUUID->"1524060c-0df2-487a-9d72-014e8e48f5eb"],
Cell[142344, 2925, 1059, 36, 70, "DisplayFormula",ExpressionUUID->"751b947d-0e0a-4cb4-afc6-8d28351232ae"],
Cell[143406, 2963, 1424, 22, 70, "Text",ExpressionUUID->"6017dc00-c123-4f62-8b33-89b9d3bc7909"],
Cell[144833, 2987, 1054, 33, 70, "DisplayFormula",ExpressionUUID->"b349112e-fc70-402b-b910-28fb1f8b7973"],
Cell[145890, 3022, 3737, 87, 70, "Text",ExpressionUUID->"127dcb57-4878-42b7-a48d-f88a6040523a"],
Cell[149630, 3111, 1205, 38, 70, "DisplayFormula",ExpressionUUID->"e3c29145-6200-4416-8bcf-26c61a781ef8"],
Cell[150838, 3151, 3251, 83, 70, "Text",ExpressionUUID->"0231a288-08ac-4615-8957-96f4d2e2fe08"],
Cell[154092, 3236, 1216, 40, 70, "DisplayFormulaNumbered",ExpressionUUID->"1ef6d4a1-d781-4f70-a8b2-b50cc271060e",
 CellTags->"eq:max_margin_hard"],
Cell[155311, 3278, 4838, 114, 70, "Text",ExpressionUUID->"8d3e6866-28dc-4c71-81ca-308c1d955121"],
Cell[CellGroupData[{
Cell[160174, 3396, 2157, 33, 70, "Subsubsection",ExpressionUUID->"305e7b61-f7a6-4a5b-946f-b7d02e036406"],
Cell[162334, 3431, 2489, 41, 70, "Text",ExpressionUUID->"6c85eedc-b88c-4f75-be4e-9c44f5bf450a"],
Cell[164826, 3474, 2519, 70, 70, "Code",ExpressionUUID->"ba32f8aa-8da6-4cc1-b4dd-bcb22369dc27",
 Evaluatable->False],
Cell[167348, 3546, 1109, 20, 70, "Text",ExpressionUUID->"da376dd1-1524-4736-bbd0-fb4977ef610d"],
Cell[CellGroupData[{
Cell[168482, 3570, 525, 9, 70, "Input",ExpressionUUID->"ab736fc3-bd75-4939-8c10-739b2eda379b",
 InitializationCell->True],
Cell[169010, 3581, 5815, 106, 70, "Output",ExpressionUUID->"daaae197-1f44-40d7-a70d-e5ef31ce91d1"]
}, Open  ]],
Cell[174840, 3690, 2025, 33, 70, "Text",ExpressionUUID->"c867ce95-efb0-4b4e-bc5d-100962a35d80"],
Cell[CellGroupData[{
Cell[176890, 3727, 1927, 32, 70, "Input",ExpressionUUID->"3fec1b93-4f30-4cb6-b514-05826fb63a52"],
Cell[178820, 3761, 15613, 265, 70, "Output",ExpressionUUID->"b43bafb3-eacd-4769-8b3b-97adb35572d4"]
}, Open  ]],
Cell[194448, 4029, 1768, 29, 70, "Text",ExpressionUUID->"c54e5f8e-3dba-490c-a56b-93a5cef92361"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196265, 4064, 239, 4, 70, "Subsection",ExpressionUUID->"8a9aa383-6182-4419-9840-ceca8b5b4a14"],
Cell[196507, 4070, 3131, 62, 70, "Text",ExpressionUUID->"694f82e4-35bf-44d2-887a-762ed83ed3ad"],
Cell[199641, 4134, 1763, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"22389821-95b9-4546-b665-4b14d0c1044c",
 CellTags->"eq:1norm_svm"],
Cell[201407, 4185, 5863, 150, 70, "Text",ExpressionUUID->"51e630fd-5f18-4520-86fd-f67de701f721"],
Cell[CellGroupData[{
Cell[207295, 4339, 233, 7, 70, "Subsubsection",ExpressionUUID->"8bfbc834-bc63-4259-8b76-a8e60723adb0"],
Cell[207531, 4348, 1692, 28, 70, "Text",ExpressionUUID->"9c86c5b4-9197-44d0-b61b-d506280d3e7b"],
Cell[209226, 4378, 3598, 97, 70, "Code",ExpressionUUID->"b2fcf885-caf8-48ac-8b86-22b7fe2de8b6",
 Evaluatable->False],
Cell[212827, 4477, 1327, 21, 70, "Text",ExpressionUUID->"caa86fcb-a114-4ae4-81ed-3d928d34bb43"],
Cell[CellGroupData[{
Cell[214179, 4502, 416, 8, 70, "Input",ExpressionUUID->"75ed84dc-6a88-44cb-86b4-1a1be1092d41",
 InitializationCell->True],
Cell[214598, 4512, 4429, 88, 70, "Output",ExpressionUUID->"9238be7c-99d2-45fb-8239-991c35fd7cfc"]
}, Open  ]],
Cell[219042, 4603, 1353, 31, 70, "Text",ExpressionUUID->"2495ec05-a47b-4ae0-b36a-320ad2398e4b"],
Cell[CellGroupData[{
Cell[220420, 4638, 3328, 53, 70, "Input",ExpressionUUID->"4f4c00c0-4871-421c-b686-5db5fa5fb87d"],
Cell[223751, 4693, 2888, 52, 70, "Output",ExpressionUUID->"da959926-ede0-4249-a575-15edb4b6045d"]
}, Open  ]],
Cell[226654, 4748, 1025, 20, 70, "Text",ExpressionUUID->"d8e51949-78be-4a83-82a2-5b742cf52a3d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227728, 4774, 265, 4, 70, "Subsection",ExpressionUUID->"bd0be1ea-33fe-47f1-b756-3132ee5e0c59",
 CellTags->"subsec:hinge_loss"],
Cell[227996, 4780, 1442, 32, 70, "Text",ExpressionUUID->"74ceaf5a-b847-4101-bdca-685540b84a07"],
Cell[CellGroupData[{
Cell[229463, 4816, 1056, 30, 70, "Item",ExpressionUUID->"18b74b14-25ea-4632-8235-ab2d3c3d46aa"],
Cell[230522, 4848, 1478, 45, 70, "Item",ExpressionUUID->"22d2e8d4-6628-441a-a90a-ac196492c7e8"]
}, Open  ]],
Cell[232015, 4896, 842, 22, 70, "Text",ExpressionUUID->"09d6e491-b15e-42fc-bd08-f6e1892c8a67"],
Cell[232860, 4920, 608, 19, 70, "DisplayFormula",ExpressionUUID->"11831c5c-e734-4626-b53b-00e8ca0bf6ab"],
Cell[233471, 4941, 1594, 41, 70, "Text",ExpressionUUID->"790131a9-1234-439d-9a13-a28b4aabf239"],
Cell[235068, 4984, 1004, 33, 70, "DisplayFormulaNumbered",ExpressionUUID->"17069927-a568-4975-a751-d9ce3b7ede1e"],
Cell[236075, 5019, 4432, 123, 70, "Text",ExpressionUUID->"42cdd8f7-16f4-4eb6-a04b-739364194911"],
Cell[240510, 5144, 546, 16, 70, "DisplayFormulaNumbered",ExpressionUUID->"fafbda14-8d49-4ca1-b854-0811c2542e98"],
Cell[241059, 5162, 693, 13, 70, "Text",ExpressionUUID->"cd3096da-c1f9-4ce4-a979-8972c4dc6905"],
Cell[CellGroupData[{
Cell[241777, 5179, 2209, 55, 19, "Input",ExpressionUUID->"1b8df8cb-01be-49f0-8de0-8877c2595443",
 CellOpen->False],
Cell[243989, 5236, 6809, 134, 70, "Output",ExpressionUUID->"ddd99801-c2e8-4bcd-a55c-37e1707a26b9"]
}, Open  ]],
Cell[250813, 5373, 1179, 19, 70, "Text",ExpressionUUID->"cd05b306-44a4-4653-a394-aae7e54cea0c"],
Cell[CellGroupData[{
Cell[252017, 5396, 808, 20, 70, "Item",ExpressionUUID->"e2a70d07-edb2-4698-a91b-9cb41244dc0f"],
Cell[252828, 5418, 1124, 30, 70, "Item",ExpressionUUID->"8e11f643-5cf7-4609-bfdc-cb87b54e29c6"]
}, Open  ]],
Cell[253967, 5451, 71, 0, 70, "Text",ExpressionUUID->"2ec01b7a-8df6-4e18-ba30-35a4995c748c"],
Cell[CellGroupData[{
Cell[254063, 5455, 233, 7, 70, "Subsubsection",ExpressionUUID->"2989a964-4b02-4ae5-aca4-9a2f21d3a2b8"],
Cell[254299, 5464, 271, 7, 70, "Text",ExpressionUUID->"015f9962-a262-4958-a874-d022121faad5"],
Cell[254573, 5473, 3288, 93, 70, "Code",ExpressionUUID->"9c8de514-d24b-4714-b534-5221c67253c6",
 Evaluatable->False],
Cell[257864, 5568, 282, 8, 70, "Text",ExpressionUUID->"85b2fd07-4aa8-4f7b-8417-3325b33da83f"],
Cell[CellGroupData[{
Cell[258171, 5580, 259, 6, 70, "Input",ExpressionUUID->"67456d63-0355-4de5-a3ed-a4f2cd468042",
 InitializationCell->True],
Cell[258433, 5588, 3519, 75, 70, "Output",ExpressionUUID->"70047871-55c8-4a95-950d-4ac24ee20818"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261989, 5668, 4003, 62, 70, "Input",ExpressionUUID->"b9afa8e7-2630-4f3f-ae2d-0e7895235b49"],
Cell[265995, 5732, 2422, 45, 70, "Output",ExpressionUUID->"5f329a4f-eadc-4215-8342-001b5151b52e"]
}, Open  ]],
Cell[268432, 5780, 441, 10, 70, "Text",ExpressionUUID->"c94979cb-3207-4631-ae42-c675a26664c2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268922, 5796, 316, 5, 70, "Subsection",ExpressionUUID->"06944fe2-05ae-45ea-81d9-31032e7bb976"],
Cell[269241, 5803, 2072, 46, 70, "Text",ExpressionUUID->"9eb61eec-363f-4915-9fb3-f2f2d2af97c3"],
Cell[CellGroupData[{
Cell[271338, 5853, 233, 7, 70, "Subsubsection",ExpressionUUID->"543d6a15-1a3b-4506-b66a-5118af991404"],
Cell[271574, 5862, 747, 16, 70, "Text",ExpressionUUID->"d8ae073f-cb2a-429e-b92f-68df92ba4081"],
Cell[272324, 5880, 1094, 35, 70, "DisplayFormulaNumbered",ExpressionUUID->"487bb05b-e410-48af-a523-cc29508bfd9f"],
Cell[273421, 5917, 1366, 28, 70, "Text",ExpressionUUID->"6e054c7c-f0aa-4261-bd3f-3ef2b0e7e8d8"],
Cell[274790, 5947, 2830, 79, 70, "Code",ExpressionUUID->"3d27ca2c-182b-400b-a149-70687907823f",
 Evaluatable->False],
Cell[277623, 6028, 393, 10, 70, "Text",ExpressionUUID->"da57480a-049c-4d17-a4c9-a6153dea8080"],
Cell[CellGroupData[{
Cell[278041, 6042, 262, 6, 70, "Input",ExpressionUUID->"c2419323-a9f4-4568-859a-c3abdf4f4f4f",
 InitializationCell->True],
Cell[278306, 6050, 2979, 68, 70, "Output",ExpressionUUID->"8379ff10-e696-4c27-ad88-4bf46d0998dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281322, 6123, 1758, 32, 70, "Input",ExpressionUUID->"3c9b77f8-c693-4425-95eb-6523c3d7fb23"],
Cell[283083, 6157, 2155, 42, 70, "Output",ExpressionUUID->"6ab9e0e6-7d58-437a-9b23-4a1370db2f4c"]
}, Open  ]],
Cell[285253, 6202, 1094, 19, 70, "Text",ExpressionUUID->"5cfdba45-6554-4a3d-aebd-a90f2b80d086"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[286408, 6228, 522, 10, 70, "Section",ExpressionUUID->"8b377088-801a-4cc6-acb9-b7fbd0e8f3b5",
 CellTags->"sec:svm"],
Cell[286933, 6240, 1879, 34, 70, "Text",ExpressionUUID->"8d2089f3-5b93-41da-95f3-4f53e27c9207"],
Cell[CellGroupData[{
Cell[288837, 6278, 174, 3, 70, "Subsection",ExpressionUUID->"636dd8a5-e124-415f-b970-f5601e14510e"],
Cell[289014, 6283, 538, 8, 70, "Text",ExpressionUUID->"732ea5d0-b8d0-4aea-847a-c9b953044e95"],
Cell[289555, 6293, 1279, 38, 70, "DisplayFormulaNumbered",ExpressionUUID->"8c84cf9b-3ddd-4ac4-b928-9579ab0bba01",
 CellTags->"primal_problem"],
Cell[290837, 6333, 1849, 45, 70, "Text",ExpressionUUID->"838899d1-87a0-4363-9d84-b7f3a5d6a7c9"],
Cell[292689, 6380, 1890, 64, 70, "DisplayFormulaNumbered",ExpressionUUID->"25a63f95-2e62-48fa-9c9a-e6d6917c4558"],
Cell[294582, 6446, 486, 11, 70, "Text",ExpressionUUID->"5f5833a7-d0e0-45b7-9829-2436cfb1a3c6"],
Cell[295071, 6459, 902, 27, 70, "DisplayFormulaNumbered",ExpressionUUID->"683e7de3-2e30-419c-9217-b7047432b84e",
 CellTags->"eq:dual_problem"],
Cell[295976, 6488, 1244, 36, 70, "Text",ExpressionUUID->"bc25d2d5-3afd-4753-b325-c1ae0ea8842e"],
Cell[297223, 6526, 3393, 98, 70, "Text",ExpressionUUID->"69cbf817-7d93-48fc-be35-befb43b6d7ed"],
Cell[300619, 6626, 2798, 69, 70, "Text",ExpressionUUID->"c363b972-272a-4eed-830e-a9de8a522e27"],
Cell[303420, 6697, 2297, 75, 70, "DisplayFormulaNumbered",ExpressionUUID->"9e89ef74-fd83-4028-ab0c-3017a3d0581e",
 CellTags->"eq:kkt"],
Cell[305720, 6774, 2786, 59, 70, "Text",ExpressionUUID->"cc687e90-5346-4b45-b90b-7b2057601d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308543, 6838, 171, 3, 70, "Subsection",ExpressionUUID->"fb21b2a3-23db-4f8e-9431-1a711f46f324"],
Cell[308717, 6843, 476, 11, 70, "Text",ExpressionUUID->"87759d45-1983-4b40-9c09-6be30e3d4902"],
Cell[CellGroupData[{
Cell[309218, 6858, 221, 4, 70, "Subsubsection",ExpressionUUID->"dd249775-47a1-498b-b44c-9b6d2f90eefe"],
Cell[309442, 6864, 387, 10, 70, "Text",ExpressionUUID->"a853c70b-647d-4742-8978-2d45ad342351"],
Cell[309832, 6876, 1551, 56, 70, "DisplayFormula",ExpressionUUID->"60722845-d174-438b-a5f6-30a0a1e979d7",
 CellTags->"eq:hard_margin_svm_L"],
Cell[311386, 6934, 1675, 51, 70, "Text",ExpressionUUID->"409c287a-3499-479d-ba1b-729aad1a5844"],
Cell[313064, 6987, 2399, 80, 70, "DisplayFormula",ExpressionUUID->"0fedcaca-a3d9-46b0-bb90-fffcfce57481"],
Cell[315466, 7069, 326, 5, 70, "Text",ExpressionUUID->"baa148cc-f88a-464c-b313-93241d24c2fc"],
Cell[315795, 7076, 938, 27, 70, "DisplayFormulaNumbered",ExpressionUUID->"92c91af1-1f4c-4d00-bf47-db60389cfab3",
 CellTags->"eq:hard_margin_svm_w"],
Cell[316736, 7105, 476, 13, 70, "Text",ExpressionUUID->"3197420c-a9eb-4101-ac8a-87aeef01635d"],
Cell[317215, 7120, 3328, 113, 70, "DisplayFormula",ExpressionUUID->"bec0423a-21cb-44f0-af8f-5f55aa0ce4ba"],
Cell[320546, 7235, 3814, 100, 70, "Text",ExpressionUUID->"8de1dd42-d1c0-4ba6-aeea-1ccfb1c75e41"],
Cell[324363, 7337, 4515, 136, 70, "DisplayFormula",ExpressionUUID->"85ec0331-5929-4426-972a-27fa23c2b8af"],
Cell[328881, 7475, 1325, 26, 70, "Text",ExpressionUUID->"a49d0c08-8525-430d-a63b-f5040ddb8611"],
Cell[330209, 7503, 1571, 56, 70, "DisplayFormulaNumbered",ExpressionUUID->"7f4fc88b-2349-44f2-8696-97b0b614fb0d",
 CellTags->"eq:hard_margin_svm_Dual"],
Cell[331783, 7561, 4060, 74, 70, "Text",ExpressionUUID->"02ad0b14-45db-4a9a-8344-9d9e3fefdc69"],
Cell[335846, 7637, 1536, 55, 70, "DisplayFormulaNumbered",ExpressionUUID->"5399cc5a-4a47-4129-9463-804c42728776"],
Cell[337385, 7694, 4730, 104, 70, "Text",ExpressionUUID->"db372dda-e344-4bd4-9e68-a3eb80488ca1"],
Cell[342118, 7800, 3024, 92, 70, "DisplayFormula",ExpressionUUID->"341dc3e9-19f0-4d75-a0cf-aae78eb044b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345179, 7897, 295, 4, 70, "Subsubsection",ExpressionUUID->"f8d6fe00-19a5-4303-8154-5dcad62512dc"],
Cell[345477, 7903, 5620, 128, 70, "Text",ExpressionUUID->"89a7d805-feb0-4475-bc66-11817c84e1e4"],
Cell[351100, 8033, 242, 6, 70, "DisplayFormula",ExpressionUUID->"860b8aa1-db17-4225-ac6e-7474a05855d1"],
Cell[351345, 8041, 1154, 20, 70, "Text",ExpressionUUID->"472ab42e-3d45-4b4b-88bd-a23dab1af286"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352536, 8066, 237, 7, 70, "Subsubsection",ExpressionUUID->"58b0f33c-0e2d-437e-85e2-d24804c7bed4"],
Cell[352776, 8075, 1243, 29, 70, "Text",ExpressionUUID->"e624e65e-9770-4ac4-b1d4-798e1a03061a"],
Cell[354022, 8106, 4292, 115, 70, "Code",ExpressionUUID->"605d0bb8-3dc4-4220-97d2-d3f71e1706db",
 Evaluatable->False],
Cell[358317, 8223, 604, 13, 70, "Text",ExpressionUUID->"dc3d3415-cbff-4c8e-a90e-1be7be3fa4d4"],
Cell[CellGroupData[{
Cell[358946, 8240, 143, 3, 70, "Input",ExpressionUUID->"e482877a-994d-49db-b578-884bba4977a2",
 InitializationCell->True],
Cell[359092, 8245, 3656, 77, 70, "Output",ExpressionUUID->"b0ec1ea3-038a-4e9a-bb6e-ea1de8e9a6b2"]
}, Open  ]],
Cell[362763, 8325, 1330, 26, 70, "Text",ExpressionUUID->"5697f6b1-5f77-4a0c-a545-6700cff483f0"],
Cell[CellGroupData[{
Cell[364118, 8355, 3861, 58, 70, "Input",ExpressionUUID->"fd37e9d2-e673-4b90-8dce-cbdc00bbc0a3"],
Cell[367982, 8415, 67482, 1128, 70, "Output",ExpressionUUID->"73e45ac0-9e93-484c-977f-b0772afad064"]
}, Open  ]],
Cell[435479, 9546, 865, 16, 70, "Text",ExpressionUUID->"0a8c0117-e525-4c5a-bdf0-1b063ce2c396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436381, 9567, 167, 3, 70, "Subsubsection",ExpressionUUID->"8488ab90-18c9-46b8-9aa9-e07ba1d655ab"],
Cell[436551, 9572, 515, 11, 70, "Text",ExpressionUUID->"1fa60a76-7000-47d3-b82c-92edcc4faa76"],
Cell[437069, 9585, 2098, 74, 70, "DisplayFormulaNumbered",ExpressionUUID->"3df713f7-d94c-4d16-8fad-09da2f988b2f",
 CellTags->"eq:soft_margin_svm_L"],
Cell[439170, 9661, 273, 6, 70, "Text",ExpressionUUID->"58b60a46-5de4-438b-a7ec-320f701bbdaa"],
Cell[439446, 9669, 4061, 137, 70, "DisplayFormula",ExpressionUUID->"928043e3-7814-4bea-b3c0-43ed35cf1cb5"],
Cell[443510, 9808, 376, 6, 70, "Text",ExpressionUUID->"4270a8d1-5236-410a-aa59-4418f61dcfe9"],
Cell[443889, 9816, 1254, 34, 70, "DisplayFormulaNumbered",ExpressionUUID->"a61aa2ce-25d4-4dc9-8077-2eda2a956a71",
 CellTags->"eq:soft_margin_svm_w"],
Cell[445146, 9852, 1530, 42, 70, "Text",ExpressionUUID->"01917583-6f95-4b01-8065-683e52c97244"],
Cell[446679, 9896, 4016, 133, 70, "DisplayFormula",ExpressionUUID->"a41fe002-96c3-4da4-a68f-653d4a1a1530"],
Cell[450698, 10031, 2575, 79, 70, "Text",ExpressionUUID->"147a4d45-5c0e-4d1a-a445-e59225abce10"],
Cell[453276, 10112, 1451, 47, 70, "DisplayFormula",ExpressionUUID->"a922654f-31fc-472f-bae3-b8f7aa884d44"],
Cell[454730, 10161, 828, 25, 70, "Text",ExpressionUUID->"6b2674c0-4d6c-40e5-abfd-0e121667b916"],
Cell[455561, 10188, 1436, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"b6d64be6-34cd-4247-a16f-53720d7aca68",
 CellTags->"eq:soft_margin_svm_Dual"],
Cell[457000, 10239, 9787, 234, 70, "Text",ExpressionUUID->"c347b66d-bb4c-45b5-9255-1852b12a6d2a"],
Cell[466790, 10475, 2452, 86, 70, "DisplayFormula",ExpressionUUID->"64841ae1-01c9-428a-915a-3d900a5cedda"],
Cell[469245, 10563, 3359, 46, 70, "Text",ExpressionUUID->"0e39787d-7ca5-42d1-8eb1-ef92416c69dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472641, 10614, 237, 7, 70, "Subsubsection",ExpressionUUID->"0d092b1e-a812-48cb-8381-f6c61c98a9e7"],
Cell[472881, 10623, 4003, 67, 70, "Text",ExpressionUUID->"45796a1c-6030-4bfd-8697-8fdcd1cedfea"],
Cell[476887, 10692, 5128, 140, 70, "Code",ExpressionUUID->"9ca332be-b894-4089-97d4-fd7e2ce65792",
 Evaluatable->False],
Cell[482018, 10834, 509, 9, 70, "Text",ExpressionUUID->"640fbb4f-5286-472f-89e0-14ea6f33b6a3"],
Cell[CellGroupData[{
Cell[482552, 10847, 143, 3, 70, "Input",ExpressionUUID->"1381895e-634b-4d62-8f0c-39ddf8f627fe",
 InitializationCell->True],
Cell[482698, 10852, 3562, 76, 70, "Output",ExpressionUUID->"bc955b61-7d49-4ccb-b726-1bcf182e5e27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486297, 10933, 4098, 64, 70, "Input",ExpressionUUID->"77154b63-0038-4a6d-8c1a-562ff66a21bd"],
Cell[490398, 10999, 2283, 44, 70, "Output",ExpressionUUID->"ea021757-22b9-4048-a8fb-d85c22520ed1"]
}, Open  ]],
Cell[492696, 11046, 597, 13, 70, "Text",ExpressionUUID->"bc05efe1-f78a-4d26-9f46-e9da9f4d1a13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493330, 11064, 222, 4, 70, "Subsubsection",ExpressionUUID->"f2ffed6f-c9bf-4527-9079-194ef7078ea3"],
Cell[493555, 11070, 908, 18, 70, "Text",ExpressionUUID->"808f3bf3-252a-46c2-9bcd-52808999a6c1"],
Cell[494466, 11090, 1757, 55, 70, "DisplayFormula",ExpressionUUID->"75ce06db-b506-404a-bbcd-0d24b9e170ca"],
Cell[496226, 11147, 1279, 23, 70, "Text",ExpressionUUID->"e44cd86f-45a2-488c-b0a7-db8e288b6e68"],
Cell[497508, 11172, 1886, 65, 70, "DisplayFormula",ExpressionUUID->"80e8d441-8317-4417-8401-69886be8f597"],
Cell[499397, 11239, 706, 10, 70, "Text",ExpressionUUID->"c47c28fb-9e01-4466-a698-7d4f91bd8602"],
Cell[500106, 11251, 3314, 117, 70, "DisplayFormula",ExpressionUUID->"5050cc50-21aa-4630-9b19-8f19eb751143"],
Cell[503423, 11370, 279, 4, 70, "Text",ExpressionUUID->"275e262f-7a85-4553-b62f-b391ce8359b9"],
Cell[503705, 11376, 1026, 30, 70, "DisplayFormulaNumbered",ExpressionUUID->"a9b18c05-dc77-443d-9de6-688c1639565c",
 CellTags->"eq:svm_w"],
Cell[504734, 11408, 1596, 33, 70, "Text",ExpressionUUID->"ef89c1ce-1fd1-441f-8b7a-754583a8fa10"],
Cell[506333, 11443, 4103, 138, 70, "DisplayFormula",ExpressionUUID->"059a1460-6e72-4352-9be8-a2ec2243474f"],
Cell[510439, 11583, 4511, 127, 70, "Text",ExpressionUUID->"fec53507-49e5-4879-91b4-1a8af82c2e5f"],
Cell[514953, 11712, 5214, 160, 70, "DisplayFormula",ExpressionUUID->"23314f87-4c40-4d6a-b873-6a382647602d"],
Cell[520170, 11874, 1325, 26, 70, "Text",ExpressionUUID->"527f5574-bf19-42e7-8b50-75338383d00f"],
Cell[521498, 11902, 1394, 49, 70, "DisplayFormulaNumbered",ExpressionUUID->"f89fc744-0244-459f-8fdb-0154db8ebe6c",
 CellTags->"eq:2norm_svm_Dual"],
Cell[522895, 11953, 8454, 213, 70, "Text",ExpressionUUID->"f4dc373e-53cd-46c9-9982-00774803635e"],
Cell[531352, 12168, 2692, 84, 70, "DisplayFormula",ExpressionUUID->"782d7529-3674-4e04-abba-f0716a3ed8a4"],
Cell[534047, 12254, 3628, 66, 70, "Text",ExpressionUUID->"32d75d72-33d4-4a7d-9cc5-26b1b2025b01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537712, 12325, 237, 7, 70, "Subsubsection",ExpressionUUID->"52e4329c-dcd5-4cbe-b571-7c73ee2e8d3b"],
Cell[537952, 12334, 3235, 49, 70, "Text",ExpressionUUID->"bffad7b4-7235-45f2-90f2-12abc5fa449a"],
Cell[541190, 12385, 2099, 59, 70, "Code",ExpressionUUID->"90f18adb-b43d-4f1a-9dcc-4edbaad9ae5d",
 Evaluatable->False],
Cell[543292, 12446, 275, 8, 70, "Text",ExpressionUUID->"f97021b7-81a7-4af0-a5c7-4a0850cc3127"],
Cell[CellGroupData[{
Cell[543592, 12458, 260, 6, 70, "Input",ExpressionUUID->"577a32ba-178b-475c-8220-ff28093b0a9d",
 InitializationCell->True],
Cell[543855, 12466, 3885, 80, 70, "Output",ExpressionUUID->"7ee68a4a-3177-4e5a-a9dd-074a0e21e8f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547777, 12551, 4688, 72, 70, "Input",ExpressionUUID->"b60b1ca5-1bbd-43cb-bad6-532ca8e784cb"],
Cell[552468, 12625, 1907, 38, 70, "Output",ExpressionUUID->"aa74dcf3-4777-476e-bc7e-7d6cb3183739"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[554448, 12671, 640, 13, 70, "Section",ExpressionUUID->"33810f8a-a097-46ac-a305-18fd965ff113",
 CellTags->"sec:kernel_svm"],
Cell[CellGroupData[{
Cell[555113, 12688, 164, 3, 70, "Subsection",ExpressionUUID->"5586615d-30e2-4835-b9e9-e12a4d37f9f3"],
Cell[555280, 12693, 2874, 50, 70, "Text",ExpressionUUID->"0225ca4f-6b4b-410c-97a1-43865aa96c28"],
Cell[558157, 12745, 152497, 2532, 70, "Text",ExpressionUUID->"29154cfb-f8da-4ffe-bc2d-72d5d68851b8"],
Cell[710657, 15279, 3077, 56, 70, "Text",ExpressionUUID->"644b1b80-7523-405b-a94d-82201ee83077"],
Cell[CellGroupData[{
Cell[713759, 15339, 144, 3, 70, "Subsubsection",ExpressionUUID->"c3191096-2156-4eab-948e-a43ac9126e67"],
Cell[713906, 15344, 1854, 39, 70, "Text",ExpressionUUID->"0ed31c00-49b6-4d44-ab3c-7596eef7a9ce"],
Cell[715763, 15385, 595, 20, 70, "DisplayFormula",ExpressionUUID->"e2572f7d-8709-463c-87a4-5732fb6aab54"],
Cell[716361, 15407, 4396, 102, 70, "Text",ExpressionUUID->"6b28e8b7-6963-4889-85f4-392bc00657c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720794, 15514, 164, 2, 70, "Subsubsection",ExpressionUUID->"37ce6bab-78e3-46d6-97dd-a0788f0c0fd2"],
Cell[720961, 15518, 2136, 67, 70, "Text",ExpressionUUID->"f3d8b14a-4989-43a3-894a-72102b7f784c"],
Cell[723100, 15587, 2035, 39, 70, "DisplayFormula",ExpressionUUID->"ee749080-e84b-420f-97f2-ab8c72003f80"],
Cell[725138, 15628, 2094, 39, 70, "Text",ExpressionUUID->"f97484d5-b6bc-4f19-bbe2-24576cbd5024"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727269, 15672, 280, 4, 70, "Subsubsection",ExpressionUUID->"61538ef1-1649-4d55-af27-842d59a8ebb6"],
Cell[727552, 15678, 2356, 49, 70, "Text",ExpressionUUID->"15eb1e54-b3a7-420e-a1a1-014a5b5d3f6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[729945, 15732, 272, 4, 70, "Subsubsection",ExpressionUUID->"14269040-e0b2-47e7-89e2-11ae43287cf7"],
Cell[730220, 15738, 2288, 69, 70, "Text",ExpressionUUID->"22250545-b1bc-49ab-9333-2f16b6921b8d"],
Cell[732511, 15809, 2987, 119, 70, "DisplayFormula",ExpressionUUID->"e11436d9-39dc-44ea-a156-865808006688"],
Cell[735501, 15930, 876, 20, 70, "Text",ExpressionUUID->"ddc5a2d0-e203-4d11-9cde-01b6cda95d11"],
Cell[736380, 15952, 1723, 65, 70, "DisplayFormula",ExpressionUUID->"e8e8c037-8d79-425c-8570-0f310db8909b"],
Cell[738106, 16019, 836, 20, 70, "Text",ExpressionUUID->"44d2305a-b390-4c5e-b39b-6284f6f3a87e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738979, 16044, 233, 7, 70, "Subsubsection",ExpressionUUID->"ffb29b8d-5357-4e20-a4be-b05862dceb56"],
Cell[739215, 16053, 570, 11, 70, "Text",ExpressionUUID->"1e60b86a-8dd4-477a-b3e4-bcb42db0ba32"],
Cell[739788, 16066, 2146, 63, 70, "Code",ExpressionUUID->"e927ea24-871a-4097-9e16-ba0c55c56f6f",
 Evaluatable->False],
Cell[741937, 16131, 71, 0, 70, "Text",ExpressionUUID->"5d90848e-43ff-4e10-a314-024adbe1dbe7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[742057, 16137, 232, 4, 70, "Subsection",ExpressionUUID->"c982bacc-6229-4486-ab29-d4ac3773929e"],
Cell[742292, 16143, 2482, 69, 70, "Text",ExpressionUUID->"ee1ffcfa-9e33-4ca8-b3da-4ede2d864d12"],
Cell[744777, 16214, 1486, 52, 70, "DisplayFormula",ExpressionUUID->"e53ae4aa-00cd-4713-a0f5-63d9b430e3b7"],
Cell[746266, 16268, 461, 10, 70, "Text",ExpressionUUID->"58b13c58-8972-4159-ac70-93fd2b445d73"],
Cell[CellGroupData[{
Cell[746752, 16282, 235, 7, 70, "Subsubsection",ExpressionUUID->"f1d24c78-49b6-43a5-a0a7-f51d63eee5c8"],
Cell[746990, 16291, 660, 14, 70, "Text",ExpressionUUID->"07913a25-48f3-4c31-84ca-89bc36eb613f"],
Cell[747653, 16307, 327, 6, 70, "Input",ExpressionUUID->"b10792fa-71b3-4b32-92e0-1dbdd273f065"],
Cell[CellGroupData[{
Cell[748005, 16317, 2435, 44, 70, "Input",ExpressionUUID->"877a30eb-0dca-4432-bf89-f4c18c1a9d95"],
Cell[750443, 16363, 2816, 52, 70, "Output",ExpressionUUID->"d220f2aa-8ddb-4d94-a694-ea571d1791b8"]
}, Open  ]],
Cell[753274, 16418, 256, 8, 70, "Text",ExpressionUUID->"28337886-cc35-4aed-9577-74eaadfb99c6"],
Cell[CellGroupData[{
Cell[753555, 16430, 184, 4, 70, "Input",ExpressionUUID->"aba5c1c7-a369-40b5-ab5a-2ada8d0d4936"],
Cell[753742, 16436, 1823, 51, 70, "Output",ExpressionUUID->"bf1dc6fb-9d93-4504-ac17-e1f9b8ceabd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755602, 16492, 1176, 24, 70, "Input",ExpressionUUID->"c5fe43c8-923f-455e-8bfb-8a75e65d313a"],
Cell[756781, 16518, 2276, 44, 70, "Output",ExpressionUUID->"c69d3823-419e-4d69-bcce-2bf9918dee93"]
}, Open  ]],
Cell[759072, 16565, 739, 15, 70, "Text",ExpressionUUID->"3a0af452-cb2b-4b95-b159-3457190c21ca"],
Cell[CellGroupData[{
Cell[759836, 16584, 1055, 23, 70, "Input",ExpressionUUID->"a3afa070-7cfc-4abe-bd76-f7471c52847a"],
Cell[760894, 16609, 2054, 41, 70, "Output",ExpressionUUID->"78225876-4e95-4da7-890a-ed22dcc5ead5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762985, 16655, 740, 15, 70, "Input",ExpressionUUID->"cbea7b10-d3df-4ffb-b404-653e3c6f0969"],
Cell[763728, 16672, 68294, 1142, 70, "Output",ExpressionUUID->"71e93a39-7767-4b0c-b1ef-53c69e48aeb6"]
}, Open  ]],
Cell[832037, 17817, 71, 0, 70, "Text",ExpressionUUID->"1c02518c-051b-46ff-b141-853379c92ffc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[832169, 17824, 567, 12, 70, "Section",ExpressionUUID->"9038aaec-39ae-49a5-b483-4f48d9f863ac",
 CellTags->"conclusions"],
Cell[832739, 17838, 2305, 43, 70, "Text",ExpressionUUID->"53f17872-0bbf-44c3-b728-1af94fa5b3e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835081, 17886, 157, 3, 70, "Section",ExpressionUUID->"26711f6b-891f-45f2-8830-d2df3477cac2"],
Cell[835241, 17891, 402, 8, 70, "Reference",ExpressionUUID->"39c756b4-49df-4694-90df-a54c708ab275",
 CellTags->"00004F53"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

