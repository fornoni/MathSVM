(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    655929,      13141]
NotebookOptionsPosition[    636180,      12549]
NotebookOutlinePosition[    641269,      12680]
CellTagsIndexPosition[    640823,      12665]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Join", " ", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"{", 
      RowBox[{"NotebookDirectory", "[", "]"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Get", "[", "\"\<MathematicaSVM`\>\"", "]"}], ";"}]], "Input",
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.637590364986126*^9, 3.63759037657835*^9}, {
  3.637659248753847*^9, 3.6376592499719048`*^9}}],

Cell[BoxData["\<\"SVM Package Loaded\"\>"], "Print",
 CellChangeTimes->{3.637590581417562*^9, 3.637661437524823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["\<\
MathematicaSVM\[LineSeparator]A hands-on introduction to Support Vector \
Machines\
\>", "Title",
 CellChangeTimes->{{3.41783940236821*^9, 3.4178394062050323`*^9}, {
   3.435291780155868*^9, 3.43529178092163*^9}, {3.468557035897552*^9, 
   3.4685570550125637`*^9}, 3.5442382141880083`*^9, 3.544238351303344*^9, {
   3.577353300017419*^9, 3.5773533139229527`*^9}, {3.5773537360629873`*^9, 
   3.577353752656562*^9}, {3.577360010706706*^9, 3.577360032241975*^9}, {
   3.5773623107856827`*^9, 3.5773623335992813`*^9}, {3.577366518781762*^9, 
   3.5773665255746326`*^9}, {3.6006674743663063`*^9, 3.600667515305976*^9}, {
   3.6006724810398617`*^9, 3.600672484136705*^9}, {3.60067811062516*^9, 
   3.600678199962726*^9}, {3.600678268573207*^9, 3.600678294242147*^9}, {
   3.600696453559613*^9, 3.6006964997643633`*^9}, {3.60069653571983*^9, 
   3.6006965375750303`*^9}, {3.637590304709113*^9, 3.637590312287281*^9}, 
   3.637593832933488*^9},
 TextAlignment->Center],

Cell["\<\



Marco Fornoni
 This file is part of the MathematicaSVM package
\
\>", "Subtitle",
 CellChangeTimes->{{3.577360037879161*^9, 3.577360051866151*^9}, {
   3.6006963271549063`*^9, 3.600696335190198*^9}, {3.600696579834607*^9, 
   3.600696581404216*^9}, {3.60069666719566*^9, 3.6006966693796587`*^9}, 
   3.600696706013411*^9, {3.600696744642015*^9, 3.600696744764159*^9}, {
   3.6017146822968483`*^9, 3.601714693998954*^9}, {3.637589551537219*^9, 
   3.637589571133428*^9}, {3.63759033327686*^9, 3.6375903447083607`*^9}, 
   3.63759146037525*^9, {3.637593806348874*^9, 3.637593837032143*^9}, 
   3.63759388007968*^9},
 TextAlignment->Center],

Cell["Feb 3, 2014", "SmallText",
 CellChangeTimes->{{3.511439683975197*^9, 3.5114397034510307`*^9}, {
  3.544238057548271*^9, 3.54423806068119*^9}, {3.563082604004828*^9, 
  3.5630826078039503`*^9}, {3.5762506934144382`*^9, 3.576250700712188*^9}, {
  3.577360043793089*^9, 3.577360047111844*^9}, {3.587640689382739*^9, 
  3.5876406916604958`*^9}, {3.600522942653962*^9, 3.600522947743492*^9}, {
  3.600675320404994*^9, 3.6006753342597103`*^9}, {3.600696305413248*^9, 
  3.600696314469296*^9}, {3.600696354080703*^9, 3.600696368290978*^9}},
 TextAlignment->Right]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Machine Learning and Pattern Recognition", "Subsection",
 CellChangeTimes->{{3.4685570921061563`*^9, 3.468557093653076*^9}, {
  3.600691912880437*^9, 3.600691920166958*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Training computers to perform a variety of so called \
\[OpenCurlyDoubleQuote]",
 StyleBox["intelligent tasks",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]"
}], "Item",
 CellChangeTimes->{{3.600690999810689*^9, 3.600691027534608*^9}, {
   3.6006910742805033`*^9, 3.600691076350659*^9}, 3.600691401463162*^9, {
   3.6006979198510103`*^9, 3.600697920262042*^9}, {3.601708600233788*^9, 
   3.601708617406847*^9}, {3.601724862530945*^9, 3.601724866498249*^9}, {
   3.602776004337039*^9, 3.6027760121263247`*^9}, {3.602776044344665*^9, 
   3.602776048683792*^9}, {3.602840334818379*^9, 3.602840336629698*^9}}],

Cell[CellGroupData[{

Cell["Recognize people from their digital image", "Subitem",
 CellChangeTimes->{{3.600691035295644*^9, 3.600691051341201*^9}, {
  3.600692203048737*^9, 3.600692203312245*^9}, {3.602840601992441*^9, 
  3.602840609690198*^9}}],

Cell["Classifying e-mail: spam VS non-spam", "Subitem",
 CellChangeTimes->{{3.600691035295644*^9, 3.600691056619569*^9}, {
  3.60069220730217*^9, 3.600692211958488*^9}, {3.60277655377728*^9, 
  3.602776575832324*^9}}],

Cell["Perform online trading, etc..", "Subitem",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
  3.600691416961458*^9, 3.600691416970848*^9}, {3.6006916721450863`*^9, 
  3.6006916721492558`*^9}, {3.600692198962222*^9, 3.600692225336874*^9}, {
  3.601715944854539*^9, 3.6017159454577312`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Problems",
  FontWeight->"Bold"],
 " are directly ",
 StyleBox["specified by data",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox[
         SubscriptBox["x", 
          StyleBox["1",
           FontWeight->"Plain"]],
         FontWeight->"Bold"], ",", 
        SubscriptBox["y", "1"]}], ")"}], ",", 
      RowBox[{
       SubscriptBox[
        RowBox[{
         StyleBox["(", "InlineFormula"], 
         RowBox[{
          StyleBox[
           SubscriptBox["x", 
            StyleBox["2",
             FontWeight->"Plain"]], "InlineFormula",
           FontWeight->"Bold"], 
          StyleBox[",", "InlineFormula"], 
          SubscriptBox["y", "2"]}], 
         StyleBox[")", "InlineFormula"]}], 
        RowBox[{",", "\[Ellipsis]", ","}]], 
       RowBox[{"(", 
        RowBox[{
         StyleBox[
          SubscriptBox["x", 
           StyleBox["n",
            FontWeight->"Plain"]],
          FontWeight->"Bold"], ",", 
         SubscriptBox["y", "n"]}], ")"}]}]}], "}"}], "InlineFormula"], 
   TraditionalForm]], "Text"]
}], "Item",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
   3.600691416961458*^9, 3.600691442326303*^9}, {3.600691542092374*^9, 
   3.600691545991539*^9}, {3.600691632442828*^9, 3.6006916324486103`*^9}, {
   3.600691807355426*^9, 3.600691869939301*^9}, {3.600692790864078*^9, 
   3.6006927953393803`*^9}, 3.60069793733356*^9, {3.601635240217836*^9, 
   3.6016352409042683`*^9}, {3.6028325303399353`*^9, 3.602832599687418*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["x",
     FontWeight->"Bold"], "i"], TraditionalForm]]],
 " is an input "
}], "Subitem",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
   3.600691416961458*^9, 3.600691442326303*^9}, {3.600691542092374*^9, 
   3.600691545991539*^9}, {3.600691632442828*^9, 3.6006916324486103`*^9}, {
   3.600691807355426*^9, 3.600691869939301*^9}, {3.600692790864078*^9, 
   3.6006927953393803`*^9}, 3.60069793733356*^9, {3.601635240217836*^9, 
   3.6016352409042683`*^9}, {3.6028325303399353`*^9, 3.602832584736742*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["y", "i"], "InlineFormula"], TraditionalForm]]],
 " is the assiciated desired output"
}], "Subitem",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
   3.600691416961458*^9, 3.600691442326303*^9}, {3.600691542092374*^9, 
   3.600691545991539*^9}, {3.600691632442828*^9, 3.6006916324486103`*^9}, {
   3.600691807355426*^9, 3.600691869939301*^9}, {3.600692790864078*^9, 
   3.6006927953393803`*^9}, 3.60069793733356*^9, {3.601635240217836*^9, 
   3.6016352409042683`*^9}, {3.6028325303399353`*^9, 3.602832568583557*^9}, {
   3.602840506047079*^9, 3.602840508775571*^9}}]
}, Open  ]],

Cell[TextData[{
 "the mapping ",
 StyleBox["y=f(x) is unknown",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
  3.600691416961458*^9, 3.600691416970848*^9}, {3.6006916721450863`*^9, 
  3.6006917085186243`*^9}, {3.600692239478088*^9, 3.600692243954526*^9}, {
  3.600697914922864*^9, 3.600697916290251*^9}, {3.601635192617364*^9, 
  3.601635202364621*^9}, {3.601708636642313*^9, 3.601708636880061*^9}, {
  3.6027763050797253`*^9, 3.602776325341304*^9}, {3.6028326291305113`*^9, 
  3.602832643971405*^9}}],

Cell[TextData[{
 StyleBox["GOAL",
  FontWeight->"Bold"],
 ": learn a mathematical model able to ",
 StyleBox["predict the outputs based on the inputs",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
   3.600691416961458*^9, 3.600691442326303*^9}, {3.600691542092374*^9, 
   3.600691545991539*^9}, {3.600691632442828*^9, 3.600691644908279*^9}, {
   3.6006917109390717`*^9, 3.6006917126604156`*^9}, 3.60069795226665*^9, 
   3.6016352833483152`*^9, {3.6027761905415697`*^9, 3.602776217906986*^9}, {
   3.6027762731229153`*^9, 3.602776286168992*^9}, {3.6027763535713387`*^9, 
   3.602776365788487*^9}, {3.602776456767445*^9, 3.60277648100725*^9}}],

Cell[TextData[StyleBox["FOCUS: binary classification",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.600691035295644*^9, 3.6006910590038137`*^9}, {
   3.600691416961458*^9, 3.600691442326303*^9}, {3.600691542092374*^9, 
   3.600691545991539*^9}, {3.600691632442828*^9, 3.600691644908279*^9}, {
   3.6006917109390717`*^9, 3.6006917126604156`*^9}, 3.60069795226665*^9, 
   3.6016352833483152`*^9, {3.6027761905415697`*^9, 3.602776217906986*^9}, {
   3.6027762731229153`*^9, 3.602776286168992*^9}, {3.6027763535713387`*^9, 
   3.602776365788487*^9}, {3.602776456767445*^9, 3.60277650561543*^9}, {
   3.602776584275758*^9, 3.602776617059803*^9}, {3.60284104319666*^9, 
   3.602841077717063*^9}, {3.6028412544000998`*^9, 3.6028412576698236`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Outline of the presentation", "Subsection",
 CellChangeTimes->{{3.6006923187470083`*^9, 3.600692326550268*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Section\[NonBreakingSpace]",
 
 CounterBox["Section", "linear_classifiers"],
 ": Linear classifiers"
}], "Item",
 CellChangeTimes->{
  3.6006923529360733`*^9, {3.6006923856532907`*^9, 3.600692440599605*^9}, {
   3.600692475311504*^9, 3.600692475478177*^9}, {3.6017081572095823`*^9, 
   3.601708160598741*^9}, 3.602776634528859*^9}],

Cell[TextData[{
 "Section\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:max_margin"],
 ": Max-margin classifier"
}], "Item",
 CellChangeTimes->{
  3.6006923529360733`*^9, {3.6006923856532907`*^9, 3.600692414872574*^9}, {
   3.600692446636619*^9, 3.600692473456605*^9}, {3.600692569799159*^9, 
   3.600692578020899*^9}, {3.600693464745072*^9, 3.600693475570516*^9}, {
   3.600696809144759*^9, 3.600696822320163*^9}, 3.600698109102962*^9, 
   3.60277665761578*^9, {3.602834870093317*^9, 3.602834870104401*^9}}],

Cell[TextData[{
 "Section\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:svm"],
 ": Support Vector Machines"
}], "Item",
 CellChangeTimes->{
  3.6006923529360733`*^9, {3.6006923856532907`*^9, 3.600692419192486*^9}, {
   3.600692455345196*^9, 3.60069248807292*^9}, 3.601723763431426*^9, {
   3.602776661083089*^9, 3.602776661472879*^9}}],

Cell[TextData[{
 "Section\[NonBreakingSpace]",
 
 CounterBox["Section", "sec:kernel_svm"],
 ": Kernel functions for non-linear learning using SVMs"
}], "Item",
 CellChangeTimes->{
  3.6006923529360733`*^9, {3.6006923856532907`*^9, 3.600692426330317*^9}, {
   3.600692496542182*^9, 3.600692563151301*^9}, {3.601723767891143*^9, 
   3.60172379602101*^9}}],

Cell[TextData[{
 "Section ",
 
 CounterBox["Section", "conclusions"],
 ": Conclusions"
}], "Item",
 CellChangeTimes->{
  3.6006923529360733`*^9, {3.6006923856532907`*^9, 3.600692426294999*^9}, {
   3.600692537728339*^9, 3.600692559325818*^9}, 3.6006925980771437`*^9}]
}, Open  ]],

Cell[TextData[{
 "\n\n\n",
 StyleBox["NOTE: this presentation skips most of the theory covered in the \
MathSVM Notebook (and several algorithms too)",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.60172427800696*^9, 3.601724316443626*^9}, {
   3.601728012432742*^9, 3.601728028713523*^9}, 3.602851638416898*^9, {
   3.6028557898079233`*^9, 3.602855803894197*^9}, {3.637590472527237*^9, 
   3.637590501978148*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tIntroduction: linear Classifiers"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.59989587689098*^9, 3.599895892048147*^9}, {3.599895942273438*^9, 
  3.599895956106649*^9}, {3.599983213882422*^9, 3.599983223053462*^9}, {
  3.5999952940499563`*^9, 3.59999533593959*^9}, {3.600001907096558*^9, 
  3.600001907988482*^9}, {3.601708193100074*^9, 3.601708196653446*^9}},
 CellTags->"linear_classifiers"],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider a ",
 StyleBox["set of ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" training examples",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["S", "InlineFormula"], 
    StyleBox["\[Congruent]", "InlineFormula"], 
    RowBox[{
     StyleBox["{", "InlineFormula"], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         StyleBox[
          SubscriptBox["x", 
           StyleBox["i",
            FontWeight->"Plain"]],
          FontWeight->"Bold"], ",", 
         SubscriptBox["y", "i"]}], ")"}], "InlineFormula"], 
      StyleBox[",", "InlineFormula"], 
      StyleBox[" ", "InlineFormula"], 
      StyleBox[
       RowBox[{"i", "=", "1"}], "InlineFormula"], 
      StyleBox[",", "InlineFormula"], "\[Ellipsis]", ",", "n"}], "}"}]}], 
   TraditionalForm]]],
 ", where:"
}], "Item",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvcGHLTrn0itHvbrVMSB6aVtFGoi+k7I9A0TfWLsg
F0TLqOV1gWiB3ZrrQDRXSS6YNlv/ehtYvfbP3SB634nP+0H0lF35R0C0XHTe
CRBd+iLrMohusfC+BaLnWMwC02GNq+6BaIvS9gcg+t71W99A9PoDT8B0Q/FJ
tlwwfQ9MtyxSdi4C0gnZ1q4g+kyv2jIQPYs1ZC2Idm9W3QSinxb82AmiJ/g0
HQbRC16fPAqilTesugeivRx774PodYGaO49dfuX46eymQyC6xOTRzG1XXzm+
3qE4C0TbhM+/tA9I15ScvwyiAYcfs04=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    RowBox[{
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], "\[Element]", "X", "\[Subset]", " ", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "d"]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "\[Element]", " ", "Y"}], ";"}]}], 
   "InlineFormula"], TraditionalForm]], "Subitem",
 CellChangeTimes->{{3.5999966697937927`*^9, 3.599996715715584*^9}, {
   3.600000424125843*^9, 3.600000430480761*^9}, 3.6006927481014214`*^9}],

Cell[TextData[{
 "X is called the ",
 StyleBox["input space",
  FontWeight->"Bold"]
}], "Subitem",
 CellChangeTimes->{{3.5999966697937927`*^9, 3.599996714110073*^9}, 
   3.6006927481042433`*^9, 3.601708274741589*^9}],

Cell[TextData[{
 "Y is called the ",
 StyleBox["output space",
  FontWeight->"Bold"]
}], "Subitem",
 CellChangeTimes->{{3.5999966697937927`*^9, 3.5999967110155077`*^9}, 
   3.600692748105809*^9, {3.601708242947916*^9, 3.60170827247535*^9}, {
   3.6027724568020573`*^9, 3.6027724589874573`*^9}}]
}, Open  ]],

Cell[TextData[{
 "in ",
 StyleBox["binary classification",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " problems"
}], "Item",
 CellChangeTimes->{{3.6006928151366577`*^9, 3.600692817218007*^9}, {
   3.600698252553135*^9, 3.600698321818305*^9}, 3.601635401572073*^9, {
   3.601725067436133*^9, 3.601725096477265*^9}, {3.601725195437952*^9, 
   3.60172519583081*^9}, {3.6027724632481194`*^9, 3.602772464570839*^9}, {
   3.602776732237693*^9, 3.602776755237873*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  FormBox[
   RowBox[{"Y", "\[Congruent]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}],
   TraditionalForm], " "}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6006928151366577`*^9, 3.600692817218007*^9}, {
   3.600698252553135*^9, 3.600698321818305*^9}, 3.601635401572073*^9, {
   3.601725067436133*^9, 3.601725096477265*^9}, {3.601725195437952*^9, 
   3.60172519583081*^9}, {3.6027724632481194`*^9, 3.602772464570839*^9}, {
   3.602776732237693*^9, 3.602776752200883*^9}}],

Cell[TextData[{
 StyleBox["linear scoring function",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], 
       StyleBox[",",
        FontWeight->"Plain"], 
       StyleBox["b",
        FontWeight->"Plain"]}]], ":", "X"}], "\[Rule]", 
    "\[DoubleStruckCapitalR]"}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.6006928151366577`*^9, 3.600692834764703*^9}, {
  3.601725142625929*^9, 3.601725234562155*^9}, {3.6027767703081627`*^9, 
  3.602776777495714*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    RowBox[{"(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"]}], " ", "+", "b"}]}],
  FontSize->36]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.599984726788556*^9, 3.5999847764296103`*^9}, {
   3.5999848163245077`*^9, 3.599984820955571*^9}, 3.599995450163426*^9, {
   3.600698341478332*^9, 3.600698345339155*^9}, 3.602832498133836*^9}],

Cell[TextData[StyleBox["decision function",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.6006928151366577`*^9, 3.600692817218007*^9}, {
  3.600698252553135*^9, 3.600698302994471*^9}, {3.601708290610085*^9, 
  3.601708291079908*^9}, {3.6027768042904377`*^9, 3.6027768117187357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["y", "^"], "i"], 
   RowBox[{"(", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}], ")"}]}], "=", 
  RowBox[{
   RowBox[{"sign", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], ",", "b"}]], 
      RowBox[{"(", 
       StyleBox[
        SubscriptBox["x", 
         StyleBox["i",
          FontWeight->"Plain"]],
        FontWeight->"Bold"], ")"}]}], ")"}]}], "=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"1", ","}], 
          RowBox[{
           RowBox[{
            SubscriptBox["f", 
             RowBox[{
              StyleBox["w",
               FontWeight->"Bold"], ",", "b"}]], 
            RowBox[{"(", 
             StyleBox[
              SubscriptBox["x", 
               StyleBox["i",
                FontWeight->"Plain"]],
              FontWeight->"Bold"], ")"}]}], "\[GreaterEqual]", "0"}]},
         {
          RowBox[{
           RowBox[{"-", "1"}], ","}], 
          RowBox[{
           RowBox[{
            SubscriptBox["f", 
             RowBox[{
              StyleBox["w",
               FontWeight->"Bold"], ",", "b"}]], 
            RowBox[{"(", 
             StyleBox[
              SubscriptBox["x", 
               StyleBox["i",
                FontWeight->"Plain"]],
              FontWeight->"Bold"], ")"}]}], "<", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.599984391909471*^9, 3.599984400633883*^9}, {
   3.599984585296199*^9, 3.599984662219262*^9}, {3.599984803758453*^9, 
   3.599984813777051*^9}, 3.5999954402745743`*^9, {3.602776848123788*^9, 
   3.602776891609701*^9}, {3.602832732926731*^9, 3.60283273570111*^9}, {
   3.602832768089835*^9, 3.602832830791657*^9}, {3.602833764241459*^9, 
   3.602833778512067*^9}, {3.637589611789291*^9, 3.637589612971375*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Geometry", "Subsection",
 CellChangeTimes->{{3.600693046073572*^9, 3.600693047889851*^9}}],

Cell["the equation ", "Item",
 CellChangeTimes->{{3.5999848374383993`*^9, 3.599984853455332*^9}, {
   3.599984885735837*^9, 3.599985006272943*^9}, 3.599992786541381*^9, {
   3.599992831736384*^9, 3.599992906070362*^9}, 3.5999929741867743`*^9, 
   3.599993588724721*^9, {3.599993630655571*^9, 3.599993638290903*^9}, {
   3.5999938017619667`*^9, 3.59999385156149*^9}, {3.599993899101679*^9, 
   3.599993967704577*^9}, {3.599994078570162*^9, 3.599994083576499*^9}, {
   3.599994142489312*^9, 3.599994222918152*^9}, {3.599994259188177*^9, 
   3.599994278147274*^9}, {3.599995387200259*^9, 3.599995394053111*^9}, {
   3.599995470257247*^9, 3.5999954848046083`*^9}, {3.599998898143688*^9, 
   3.599998898467804*^9}, {3.600676141246665*^9, 3.60067615059121*^9}, 
   3.6006930542153473`*^9, {3.6006930872430477`*^9, 3.600693088297955*^9}, {
   3.600698359996076*^9, 3.600698384901675*^9}, 3.60277695427815*^9, {
   3.602832414341155*^9, 3.6028324232549047`*^9}, 3.602832464630005*^9}],

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], "+", "b"}], "=", "0"}],
   FontSize->36], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.602832442988544*^9, 3.602832460463674*^9}}],

Cell["\<\
defines an hyperplane which separates the positively classified points from \
the negative ones\
\>", "Item",
 CellChangeTimes->{{3.5999848374383993`*^9, 3.599984853455332*^9}, {
   3.599984885735837*^9, 3.599985006272943*^9}, 3.599992786541381*^9, {
   3.599992831736384*^9, 3.599992906070362*^9}, 3.5999929741867743`*^9, 
   3.599993588724721*^9, {3.599993630655571*^9, 3.599993638290903*^9}, {
   3.5999938017619667`*^9, 3.59999385156149*^9}, {3.599993899101679*^9, 
   3.599993967704577*^9}, {3.599994078570162*^9, 3.599994083576499*^9}, {
   3.599994142489312*^9, 3.599994222918152*^9}, {3.599994259188177*^9, 
   3.599994278147274*^9}, {3.599995387200259*^9, 3.599995394053111*^9}, {
   3.599995470257247*^9, 3.5999954848046083`*^9}, {3.599998898143688*^9, 
   3.599998898467804*^9}, {3.600676141246665*^9, 3.60067615059121*^9}, 
   3.6006930542153473`*^9, {3.6006930872430477`*^9, 3.600693088297955*^9}, {
   3.600698359996076*^9, 3.600698384901675*^9}, 3.60277695427815*^9, {
   3.602832414341155*^9, 3.602832428136026*^9}, {3.602847648154222*^9, 
   3.602847650829047*^9}}],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
2b6+vrVq1Tpw4MD169c15U4WH02HDh1q1aoVJXbK9tJflbz++uv0egrq3LQu
iV1+nC6lkeEBAABAK2tg57vzt0ppqKcFeHBHjhyxsbGR9nYVJ/OCgoJXXnmF
x5nhuvfatWvTY7169Xbt2iUXy/RitXQNByMAAAAwXXdUhASAijl58mStWrX2
798va3g0GG5+FxTRvby8ZJRIivq8MGLEiJSUFG51l+iuIbcDAADA7aQWFyEB
oAJu3bp1+vTpBg0a+Pr6aqX9SdVDiZc5k/OLP/zwQ66TkQFnOMl/9tlnUjDD
jyhaAwAAAFFQUJCWlqZrFQSA+1dSUhIWFtayZcuQkBCpUb/7VXBqaurIkSN1
48wQHx8fbrSXnE+/jX8VH6TSFI+6dwAACyOdm1SGZxNdebOGkglrQmEgKytL
HUkGTXwAD+rChQvNmzc/d+7cfb6ej7Lt27c3bdpU2ttlzJkJEyZcu3ZNU+6F
0es5t2PIVgAAy6N+w2tlX/KGo4XcKZwjt1uVgoICXkALHkDFREdHu7i4BAcH
S66+y/WvWjlz5cqVd999l0M7z7LKkzQ5ODh89913Wll7u/rbdF/vAABgAdT2
c+32kUOEmtN0rwfrIZ87GvEAKiYhIaF9+/ZpaWn89J6hWr5v6ZGOu7CwsG7d
ulF6p7jOAZ6WbWxsnnzyydDQUHk9vVJK2vB1DQBgSW6VkXAus3vw97/6MvUF
YD04Xej2ELTjATyopKSkxx577D7vWMkhJgv8PfzTTz85Oztzq7ug9D558uTC
wkJ+JX914xIbAMCSqAMaSLcmXSy/U0rnMwhKZayBNOLpBoQ04iYBmKO4uLge
PXpo991vVNfJVM3hr732mmF/VVdX1x07dqhNMYjuAACWR77buZcTZ3VuupF/
opzGQw0baRvB+NDSDvAwEhISfHx8NIO7V3fCJevqyDNSA1NcXBwaGtqzZ09u
eKcM7+joyEl+4MCBGRkZOFoBACyP2gu1oKDgwIEDc+fO/eijj+bNm7ds2bKr
V68GBQXNmTPn7bffnjVrVn5+PkYCBPRLBagAitCJiYnc3l7uzU0d9UAr96Ar
KfXZZ5/ZlNK1vc+fP5/bYQAAwDLwWYNb1HkksYiIiObNm/NoY4MGDdJKZ+6j
p7Vq1XrrrbcKCwvVSktuC0J7jjXApOoAD4m+LWNjYzt16lQpv40PSW5IoV87
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
euaZZ2i5bdu2a9eu1Up3RfVTAwAAAKgUFB2TkpJ69+599epVzTy71OlKjsmh
Q4coR3Xt2lXWpKWlcZv26NGjtdLmbvU3VFsdsuFgj7QmIiLiqaeeos2jbeYB
3tmf/vSns2fPyuapVxxgXGPGjOHP6Oeff6ZP8K9//Sst85j8ajcE1LcDAABA
5UpPT6fczrFQN+mnueCwxGmclps2bUo5ys/PT1ZSuFq9ejVnLQ7D3CJabX+p
lMdoSuG9+m7/+uuvdevWlZoZmWv1iy++UAv1wRTQweLu7k6f0dChQw8fPkwf
2S+//KKWu9+p9B0AAADgYaSkpHh4eCQkJJhpaNf1M92+fTunX/q7+AWce+Pj
47kKZezYsbzeKINelju/Eud5SoMzZsyQ9nYZKPLRRx89ePBgdW4k3NOGDRv4
Csve3v65555Th99Xhx4FAAAAqERJSUlt27al3G5YcGJ2aMtfe+01jruZmZlc
Vc4J6sqVK/Xq1aP13bt3l9jM434Y/e9VLz18fX29vb3VJnfOh2+++ebly5fV
Qia146p2e+dcs7v4MhfqoKMU17nKfffu3fIRyCsxbqc50l1QG/2bAQAAQCc5
Ofmxxx5TG9vNcbxBKVmfNGkSt1RzvbEoLCz08PCwt7enRw7zpvNnyiDt/CnQ
pn711VcODg48xSr9LVz3Xr9+/TVr1ugmitK17hpOLAWViC+O+PPas2cPX1j9
9a9/lReog/Dj/TdHN8rINRo+RwAAMBFFRUUpKSl9+/bVDEZTNBfq1tLZdunS
pZymAgICrpfSysJt27ZtbW1t//SnP+n+TCO2TnO6lg2gqw/pzEjLL774Iv8t
jo6OUj8zYMCAM2fOaMqg9PzjlPb53oG0yaPVvSpwQzq9vX369KHdia4E6XHH
jh2aQbduvP/mSL3teKuMcTcJAABApKWl+fj4UBox0/p2JjE1Li6O8+2bb77J
/8Qn4tzcXB4N8tdff9Vun4nJFP5kXfueRIWwsLAePXpIkztFRG6Bnzp1qtr5
0TBaYDCTqiA9oP/1r3/RZ3Hq1KlOnTrRx9GqVaucnBwNLe0WgY4stQjNFL4f
AAAAWEJCQteuXeU8ZV4lnerWcgEJ/SGDBw/mfp3x8fGSz//3v//Z29u3bNny
2rVrmmlkda10+2VLDOt2eOPpBZ999lmtWrXU/qoUGikrbtiwQV5MYVJtftdM
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
tHXrVt0MXPfcK9RdKyUlhX8hXQXwv/IoNwAAAFCJTpw40aVLF57sntcgxVkS
+jTVme5nzZp1/PhxzWDmSgz6YWHu0tBNGXvUqFEcs7n0nZP8sGHDzpw5c5+D
wXJjPv8vtF+98sor3Ok1NTWV/4nds90eAAAA7hOdUoOCgh5//HF+Sukdod3C
6DoPSojiZlKpdsB4fdZAPnR63LNnT6tWrXhiJhlzhoL3v/71r3v+HrVlnh4P
Hz7Mv2fJkiWyF8mFA/YrAACAyhIVFeXj46MpLWM4z1oY3Zh++HyFWtHNOVOO
Aqks4noPiykeU7udpqWlffDBB9LezkPBkG7dum3bto1fo9tb1B1Jkrm3tzf9
Bjc3t2r5CwAAAKwUnZTDw8O7du1q7A2BKsTDcWsWFD4rkZRhG745uj7altRl
Wy5PKHvHxMQMGzaMh4iU6G5jYzN48GB1eFi1F7OmFNJs3bqVS25+++23av87
AAAArEtUVFSPHj2kpR31EpZEZtI5e/bsuXPnNDS2367cKC59LWlBSrUto37s
LoVwq1atcnZ2lv6qjo6OPMz7V199RW+CvCe6aqucnJy6detS2n/mmWeq7a8A
AACwWhcuXOjTpw/inAW7du1aixYtvvzyS2NviClS70S8//77o0aNev755/v2
7Tt8+PDTp0/zCyxsaBSZGVm3/tKlS5MnT5Ymd657p6deXl7h4eHys2p7+4wZ
M/jFkZGRlnFpAwAAYMpiYmIGDBhg7K2AKvTRRx917NhRZsNEvlJxCk1OTm7d
ujVl1J9++snf33/t2rXc7Dx79mx+mdQamTV1ZCFZyVFc/sBdu3Y9+uijMkok
V7+Tt956q7i4WO5E0EJsbCy9jP7pww8/NMqfAwAAYG0iIiIGDhyoKb0XLamO
FyhrURA9f/48P0WJu4qrwkiXLl0ooB48eJDfHzoE1q1bZ1tq06ZN/GILyO2a
UjolT9Uwz8uXL1+eN2+eNLlLeq9Xr97OnTu1sku/oUOH0vpGjRpxB1VMsQQA
AFClKIqcPHmyZ8+eGEnGUqnjtyNZlWv58uWUz729vTUl1tJC165dKZe6urqq
pd0WQw3w8idrpVd2/D2QkJDQt29fHhySB5zhuvfhw4fn5OT8/PPPPPXqypUr
MUg7AABA9Th06FDnzp11Y0SAZZDBDNVYhYgleIfv1asX5c9Ro0bxU7nx9PXX
X3O5yO7duy0jtKsfvW5+ZL71ILdj5F9/+OGHOnXq8PugNr9zGfzQoUOr9y8A
AACwXnR2PnXqVKdOnS5fvqyVndaR68yOesFl2DjMg6LISCD4fHV4HJWXXnpJ
bXYmR44c4aS6YsUK67yk5X0pPT199OjR0uQuY844ODhMnz5dLvl1XQCwvwEA
AFQuOqWeOHGiR48eam4HsyMNxTJ5ED1u2bJl4cKFulmE8BGr6H2jd4anDe3d
uzevpMDJb1dQUBCtr1279pw5c4y6mcZUUFDAC/RF0b9/f2lpp9DOGX7s2LG5
ubny+ltlLLK4CAAAwLgOHTr0xBNP8JkXoc58qbXK9DlmZ2d37Nhx3rx5nOTV
3I4opaL3p3PnzjY2No0aNVL3f8qrISEhnE43b96sWeXRIX+y7EUrVqzguM7v
jKOjIz02bNjw66+/ltdLNwq10ysAAAA8vO3bt/fr1y8rK0uzymRiGbiFU43u
R44cGT58OCcotWIBH7FKNwh5TEyMpnTMXLNmDa1s3bq13M4w7tYahfRr5rs5
9BgWFjZkyBAeYUYCPF34dO/enUe8Z9dLaegNDQAAUHl+/fXXxx///9g77/go
qi7uP6SCCIr0BJUQCEIoIfQWQAFFQdEHRQQsFBuCgkpRbGABVBBQUQSlWpBe
jBQpgkSkg/QWCB1CII0EH5n3vDnvnvdkZncTAsm23/eP/czOzszenZ177++e
e+45TU6dOmXKYw48Dvb64G1ZYCgxt+UYF5TMjaGbc+TIkeDgYHZx1w//Pffc
Q9J03Lhxhq/6e/DdsOu4vmzZspIlS+ookRw286233kpMTDSU75aLyg4AAAB4
IVOnTm3QoMHZs2dFmaCr9Ti0IZ02eCGqowOAIM/8nDlzWH++//77NNJJTU0d
MGAAvX3uueckortLS+oy+IfL0I82xNWKblT//v05K5MsVqXXChUqLFiwgA7I
yMjAgwcAAADcQL777jvS7cnJyehePRe7qpI9Z+RV9iP1kkaClq9evbpZs2aF
Cxdu3LhxTExM3bp1x4wZo4/x8QpCN8H65NCjdfz48Tp16vzHwhNPPHH69GlD
aX4AAAAAXCdTpkxp2LAh98g+rkw8GlZHly9fXrRo0aVLl3inyffJlCsTGGrt
JL/Gx8evX79+27ZtOouoz9YOJ0+LlvH0vNHwv3jx4hxqhqDhD72WLl16xIgR
BVVYAAAAwPuZP39+y5YtDVsfbbLNAndDJ/Q0lOzk1X+ff/55vXr1eP2ga8sJ
vB7tA0MaPjU1tXPnzqzbOe49y/ioqCgaCukTJaGAXS8aPLrXgwy19GhUg+kP
AADwXKiLjI2NjYmJMXzYg9eD0P+R9f9KSUkJCwubPn26oy4bgBuCxCbSi2LY
/L5y5cpGjRrxSlX2eOeYMy+88AJPA5l0I53FtgLEO7ohHDhw4OzZs6zeOSsH
jeKtDQLUOwAAeCKcd6lp06auLgjIFdwdZ2Rk6J2SWYk+XbhwoRwJ3Q7yCUms
bJXZHEXzk08+4dDuot5po1ixYkuWLDFsD6d42pjCvOO5zTPnzp3r1KlTmTJl
7rzzThrCv/LKK7SzR48e5cuXL1eu3MCBA6np4LsNfzkAAPBQdu7c2ahRI94W
L2iXlgjkCu5/RTjpbdLw+BOBC6HHjxqW7t2760CRHHamadOmHCjSpPnZeg97
+3WSlJRUs2ZNvuGzZs2iPSNHjgwICHj66adTUlIMuCEBAICHc+jQofr16/M2
dLubY1pEaahQJ9rL3bDE3AYg/xDJzVZcWcZLrFq1KiQkREJEysLVd999l881
tTZ4aK8H9n45d+5cYGBgcHDwww8/nJGRER4eXq1aNdN9xnwcAAB4ItRLHjly
pE6dOq4uCLg2RL2zUNf55WUGHBII5BMm27h2TTc5TvOD+t577+k4Myzjy5Yt
O3v2bD6MH13TAwyuFWkWvvnmG77JkZGR/v7+nAjYsA2pkMEWAAA8FNbttWvX
NiDzPAG9DFBEOymlPn36pKamSiwga94lAG4sJqd07a/1vyxEwHN0owsXLjRt
2lRWqop6f+KJJ+Lj4w1lpS/wn+Jt8J1v1qxZQEAAifZPP/1UD6ZkbYLLygcA
AOA6oE6Tdbt4XKBJd1usCYCoR54wYUJ0dLQ+wEC8CJD/mOzthsXpRa9/5Afy
xx9/LFKkiISIZI93kpfDhw+XOLQF+hu8C6n1dOc3bdrE46MBAwbITsP2r5nW
tgMAAPAUDhw4UK1aNUM5t8Pv0W0xKXbeePfdd5cvX67NlRDtwA3hxzIpKemp
p55iSUnqnSO9E7Vr196wYYMsqbY+6lrS8zbHUCron+HGSNNNt4WGQnxvaXC0
aNEi3s+thH4FAADgWRw6dKhmzZquLgXILabEWOyEIPH0RM+4rHwA2IN9uvhB
pad06dKl4eHhYnKXaDOPPfYYRx03Odukp6cbyrBv1fDAsOl2uiH79u0rVKhQ
7969IyIiaKNatWpyJ9mJDjcNAAA8lMOHD0dFRfE2GnOPgHtesUyKaNez5AZc
WIG7wk4a9Hy+8cYbbBPmVw75XrRo0a+++koO5kbJrlc2P/AYpWpofEQNwu23
3166dGl6S+Mjns744IMP+O6JmR32dgAA8ET27dtXs2ZN7hyh99wckSimPldC
8BmIAAncDwlgoj1eeG11QkLCAw88ILmZJFxkw4YNN2zYYGQ9z6Ylq7QBrW4X
vrGDBg2i27hq1Soj68536dKFh0VbtmzhrFgGUjwAAIBnQm34tm3bSLcjmIOn
IF4x8fHxx44dM2kYWZ6AvxK4FfTQytBSz+vx5NHSpUtLliwphnfxfu/fvz8f
xiKfnWcMNbukfWkA3aXPPvuMbl3Lli3pbVpaGr0uW7aM72fx4sXXr1/PR0K0
AwCAhxIXFxcdHS1+p64uDnCG/EHnz5+///7758yZw9b1f7IwpUx1XTEByAY1
L6b0vv+zYdhmiy5evNivXz/tMMPbZcqUWbJkiUww2V24ChgayDdp0qRUqVIP
P/wwLxOguzRy5MjIyMhq1aqFhYX16NEjMzNT3OBdXV4AAADXzK+//lq7du30
9PR/baBDdH/mz5//6KOPpqWlWTtfeBEAN0RaFdGNhvKfkSCQa9asIYUpot3f
358jRj722GP0VMvKDiQXswvdjbNnz6ampiYmJho2lzl65VW9hgr/COd2AADw
RKhJ//HHHyMiIpKSktAVegQcUmPLli0HDhzgPToZkz4SIZqBmyCrSuVZ1fYB
HZaQW6HRo0eXKlVKHGbEeWbkyJE6HAqSTVjRawd4jx4xGVmjHtw0AADwUKht
//DDDyMjI3lSFV7u7oaWN6ZkqYayUrqqeADkB6QtqUXq2LGjLFPlDaJhw4a7
d+82smdolbMMe8HeAQAAAK/ho48+uuuuuy5cuGDYekAsWXI5euikTWccvN00
sIJEAd7Kzz//fOedd/IaVS3g+/TpIz4zhvL6EJ95QznhAAAAAN4B9XFDhgy5
/fbbz549a0roA1wL/R2cU8m0X2t4A4Ms4KXQky9e2R9++CEb22XJKhEWFrZ8
+XLDJt11ZdG5DAAAAACvgTq4oUOHhoeHp6amwtjuPmijOtvbeU9sbOzLL7+s
M9FgtAW8EtMs0q5du+655x6W7kRwcDCb3++99959+/ZZ3cZQKQAAAHglH3zw
QUREhCnVJnATOGa1vG3VqtUbb7xhqBypLisZAPmG6HBeWy0rrBcsWHDzzTdz
eiZ2mOGAM59++qmefmIXGtQOAAAAXgavSw0JCUlLS4OFyq0wGdJTUlIOHDjw
0EMPJScnG8p3F+IEeB+S/1fsCRzdlB57qgg9evQoXLjwf7JTq1atNWvWoBED
AADg3Xz++eehoaE6ZiD6PvdBB2MnJUOiRVxoEOYReDF6HYcenPLbU6dOVa9e
nQO8i/mdePrpp5OSkvhIhCgHAADgfXz77bdhYWEyMQ3R7iZYwy+b4l0j6SHw
YqyPvaw2vWpj2rRpZcqU4WgzrOHp9dZbb/3www8h2gEAAHgf1BUuWrSoRIkS
iJnmbojw0KlqXFccANwLrg6nTp164YUXRLqL33t0dPS2bdtE4Rsq95O+iGSs
QAonAAAAHkFsbGyZMmU4iR73XNCHLkece/kf2bt3LwZWAPybhWlncnLyqlWr
oqKiAgMDZbEqR57p2bNnfHy8kT2jnI7xjrYOAACAZ0FdXlhYmN4Du5M7wMGr
6b9YsmTJ7bfffvLkSVeXCAB3gR1mdLQlUuYfffQRu8qwaGcLfLFixagGcZum
reuGbfUrXQrRmQAAAHgE1G0tX76cdTu6LfdBD52qVq06ePBgLD0AwLDkdDZ5
vxw+fLhDhw4i2jnLakBAQIsWLfbt28fHWAO8Y54RAACAR0Ad1sqVKyMiIgyb
Vwb8PN0EFuqkJWbOnGlg/SkAWYiXyz9Z6LAzsiRk4cKFpUqVYl93Eu3iPDNk
yBC5Dp9Ip/AG8qsCAADwCNauXRsZGWkoyxV0u3sC6Q6AYQnwyNmE9adERkYG
qXSW7oGBgZJotWrVquvWrRNHdz5Fe7wDAAAAbgt1eUuXLg0PDzcgC90SPXeP
8RTwcXQbZWqvOEeqqY7s27evadOmrNiDg4Ml4MyTTz55/PhxPkuug/oFAADA
/Vm2bBnpdklQCPXuDmiHW36FqADAUCFlrC2VXl4q8Zeo4nz++ec333yz2N55
o0iRIiNGjOBj0OgBAADwFL799tuqVasaNg9P+HkWMDoCpw5PN3jw4C1btuj4
dQCAa0Xc1znMu4maNWuuX79eH48F4AAAANwWkoUTJ06sWLGiAaOTKxDjoWlZ
wZw5c0qXLn3kyBHTwQVcPAA8Gm7TxAH+t99+q1GjhtVt5vnnn09ISDCyu8rz
tkxEAgAAAO7AzJkz2U+G38LWVJBoKa79Ybp169avXz/en5mZaTfdDADAOSy5
edIqIyPDyKplY8eOlQxNIt1vvfXWJUuWWMPCAwAAAG7F9OnTb7/99rS0NMNm
/oVELGBYJ4hPu6RJ1WHu8KcAkGe4folR4vTp0zExMYULFxbDO8d7f+CBB7Zu
3WpkSX2qfRJw0pVFBwAAAGyQGpw0aVL58uUTExMNGNtdgVYFTqLHmILdAQBy
Ay9QFYcZQ0V6nz17dlBQkClQJPHBBx/oc6HbAQAAuA9ff/11hQoVzpw54+qC
+CgSxkdEOzvG8DZP7ktwDABAntH1iKU7vfbu3Vv7zHCepqioqF9//dWAaAcA
AOBOkD787LPPQkNDExIS4IlR8IgbLfspXbx48cKFC7yHFbuRZXhnvQF7OwB5
w26KJaliq1evrlevHkt3emWfGeLFF1/ksPAAAACAmzB27NiwsLATJ05Atxc8
2vuFxPnrr78+aNAg6zGmDQBAbqDKJWFh7C69l9SrdNjw4cOLFi0qJnd+DQ0N
nTFjhguKDgAAANhjwoQJNWrUOHXqFPIGugoW5GvWrClWrNjatWtdXRwAfJTz
588/++yz2mGGbe8xMTE7d+7kFlIHipShNO1kjxoEogEAAJCvfP3117Vq1Tp7
9qzug1xbJJ+C7YHU3W/YsGHatGmuLg4APg1VRg6xJctUOWgkCfg333zz0qVL
RnY/eVPQSDSeAAAA8pVJkyZFR0cnJSXJHnQ9BYYpOSMLePjDAOAqJNj7W2+9
xSZ3f39/Mb+XL1+eA0XqbAvshIMVrAAAAAqAqVOnNmjQIDU11dUF8WnYZCcL
5QAAroK94mmDJPoDDzwg3jIcNLJQoUJPPPGEDsAl6t1lJQYAAOAzfP/9902a
NEGkQZfA8sAULgYusgC4BD3bJXnQpk+fXqRIEZ2kiSPPjB071mRj53MxXwYA
ACD/mDVrVvPmzWEschW7du0aOnSo5IXBHwGAC2E/GTG5szJPSkrq3r37fxT+
/v4BAQFRUVHr1q1j9zaTzxsAAACQH8yZM6dFixauLoWPQiKhffv2jz/+OMsD
TLgD4EJ4+Gw3ZjvJ+P3799eoUUNWqorre48ePTjtAtdiOLoDAADIP+bNm9ey
ZUvehmIsYPbt2xceHp6QkGDYbr4ElAYAFDAmXzVZcMr7eeO9997Thnd2fS9d
uvT48eNdWXQAAAC+werVq1u1amXAOTP/YU0u5jjSAMnJySTa9X44twPgbphy
nx05cqRfv36s2wvZoO3atWsfOHDAULVYL2CRPTwKEF96NLkAAAByT1xc3N13
3y1vYXLPD0wZWwxlV5dJeT4GXrIAuCEm75cLFy4sWbKkbNmyOkkTL1x96aWX
0tPTRavL0hWq8pDoAAAArpPNmzdr3Q7yCS3dOd4jKwGkuwLA/ZF6KoKcdfir
r74q8SHZ6k6UKFFi3rx5+kQep5tm02T1KwAAAJAbqNfYunVrTEyMGIVcXSLv
hJMqct/NN/nkyZOG0up6RSoEPABuhbWeam+3w4cPN2nSRNxm/LOg7Yceeujo
0aNGdtHOwWfkggghBQAAIPdAtxcM2s5GPf6mTZtq1qxJ0t1ul41/AQB3498s
jOwaXoeB+uKLL7TDDAl4Pz8/EvCjRo0ybN7sWqVDsQMAAMgD8JMpAEyxYh5+
+OEHH3zQUNnSodUBcFuoemoDu2yIFOdP9+3b16FDB9btHCuSDe916tTZtm2b
nKXlOpvfC/bXAAAA8GCwLrVg0G6xffr0OXHiBL+VmXfpvvEXAOCesMOb3cXj
VMG5Cv/111+VK1f28/Njv3cJ9t63b9+UlBQ+mBoBVHMAAAB5AHEgCwa2zmnb
Gm9b7XgAADfEiWcLj8qlLtORr732mg7wzktWQ0NDp06davKaQ8UHAACQe379
9VfOl2ry3gQ3EOtdxfgIAO8mPj6+Y8eO4vHOAt7f379du3Z79+7lY8R3TvvP
oBEGAADgiAULFtSrV093H5CU+YFOuWggGToA3oueWZs1a1a5cuVYsbN0ZwYN
GnT+/HkjS7rrGO98FuzwAAAArGRkZFC3Eh0dnZqaCnt7fjNlypQ9e/bIW4yP
APBW2HOGBfnZs2ffeuut/yhYwJctW3bZsmWGrSnQbjYGhvYAAADsMW/evKZN
m6alpfFb6PZ84s8//wwLC1uxYoWBVWkAeDUsuTn2o+xct27dHXfcoXU7L1nt
3bv36dOnZd26gUlPAAAAjpk2bVpUVNSZM2e4p+BoCa4ulLdB/fiYMWOog+a3
EO0AeD3isi5uMCTOv/zyS39//+DgYC3daXvcuHE6s6qBVgIAAIA9vv3224YN
GyYmJrq6IF7OiRMnuEfOyMjgPRgfAeCtcO2WOi5qnDhz5sz999+vV6qyEb5p
06YbNmwwbE0EdDsAAAArkydPvvvuu1NSUqiLyczMlLSA4MbCvTD3yNSJ62lx
AICXQc2pdlDnbar1osZ/+eUXdpsR3c5K/qWXXkpKSjKyS30AAACAmTBhQsuW
LcW/3cB6yXxGbi/s7QB4N5JKVcOCnD6iVvf1118Xw7u4zURERMyaNcsV5QUA
AODWkHSkDqJp06aSyM85GRkZIjslxzfmcwXrkIfuMFvPAABA4GF7Zmbm7t27
mzdvzmHe6ZUzNJGSb9myJX0kDaw0szrsjG57YW8BAABfYO7cuY0bN05NTeXo
B85DGVy+fFmsxJDrdpH5cb6Nr7zyyqBBg1xdKACAu6AXqxo255mxY8cWLVrU
5DZDjB49Oj093cjuMG8V8wZ0OwAA+Abz5s2rW7cuG9JzlOLatcNu3wEYvlFH
jx4NCQmZPn26q4sDAHAvdG4m5tKlS7169WJ7Owt41vBhYWHr16+nA7SAN5QD
PDzuAADAR6AGf8GCBTVr1syDreaqDdh5NDyK4UHQpk2bPvroI1eXCADgRoih
g6U7IcvV6ZUajaioKG1yL1KkSFBQUM+ePSXql7jK0KUwAQoAAD7FypUra9So
kfvj4dDuBImBz2//ycKlJQIAuBdWS7thy69q2MK8T5o0KTg4uFChQrxSlZes
FitWbPTo0XIFU35VAAAAvsCWLVtYt+dykSl0e46Y4rQj5CMAQCNOibot1cN8
2jh16lSbNm3+kx1/f//mzZufOHFCFtGItwxMBAAA4Avs37+/Zs2aRp6cJCWk
TD6Uy1NhlW6S7gAAQG2s3ajsHBNA3rIfOzNz5szq1av7+fmJ3zsHjXz11Vcv
XbpkQK4DAIAvQZL72LFjUVFRhnLMdnI8z8+KUIft3S7U7Y4ZM4a3cX8AAIIT
8wi3vSzstbzPzMx86qmndIB3lu6hoaHz5s0zssJ8GfCWAQAA3yA+Pr5JkyaG
rUNB458H9OJc2u7UqVPjxo316jPXFc3jIQGjl/oatqEQmxlhbATejTQjcXFx
7dq1Y1cZsb3TRkxMzJEjR/TBOs6MthtIVdI1CAAAgAdBWmjfvn3169c3EEws
T5iymVOHeODAgbvuumvjxo28h01h4HpgdyzeNrkZ8AQQRkbAK+G2RZKu0sak
SZOKFy9Oct3Pz08EPL2OGjVKn5iZmck1xdqq06VQXwAAwHPZs2dPo0aN9B64
duQS7a0qU9Xp6elnz541bM7tWnOCa0XfOlm1xzt1UA5IEeCtyEMuT/ilS5ee
e+45WakaHBzMzjN33nlnXFycrghSU6hJp5bK9BHaeeChWB9duOwCn2Lt2rX1
6tVzdSk8DG1jpw6R+1brKlSIyeuH1/lqmSExq023F+028DIks6pVvW/durVm
zZo61Aw7vfft2/fkyZOmswQdr6aAfgMANxq7TT3af+AjUC8wZ84c9pMxoDOv
BW3jpf5RB3vUdmAXlMy7MEl06yOKOHjA69GDVtlJD/yMGTNuvfVWXq8qPjNB
QUEjRoyQYwxVNaj66JxNBfcDAAAA3CC+/PLLBg0a8DYmm64HVpi8RlWcru2G
fQPXREZGBt9Mnu5fsmTJuHHjPv7449jY2NOnTxtQIMBLMfm3iOrW+d0yMzO7
dOmiTe78GhMT8/vvvxu22qHbdjRNwAtAsw98E+oFhgwZUqtWLWnVURdyg+49
2dJ+4sSJTp067dixQ3xK9ZEgb4i0YB+kadOmVa1aNSoq6s0332zfvn1gYKC/
vz/tdGkZAch3rB4vaWlphlpEs27dusjISDG5S7SZzp07UyXiw6Rth2IHng6P
YRFMA/gmL7/8MuddspplgBNYkKemphpZvedrr71WqVKlc+fOpaSk/Pnnn/Hx
8QZu5g2CZcaqVatIqEdERNA955u/dOlSNi1KtHwAvAzt4iKL3HW8R5YuvD1i
xAhZrEqvQUFB9FqyZMnZs2ezdJe4NC76NQDcGNg3VUKbGniqgS/Rt2/fqlWr
it0GUjM3aKdr3mYBWatWrdKlS/v7+//3v/81EEzmupH7TBvly5enO/zHH3+I
PxJBTy/tLFKkyPnz5zG1AXwcqikHDx5s1aoVq3dqiHSY93379hnKRM+niEef
bs2AO4NYQEbWQHX37t3nzp0zoNiBj0Gt9GuvvRYZGSmxUFAFconkNCG5SBsT
Jkxo1qyZzFD36tVL4syA64Ru48yZM+mulilThic45Mb++uuvbFT88ssvXVpG
AFyPWF1+/PHH4sWLS35V2Rg0aJBeQS/b2nMG419PgQQ8/YPsMeVT8BhTcqMg
hQfwNd59913S7SkpKYaKsAdyRE9YG7amIzQ0NCiLlStXypG4pdcDS4tnn32W
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
tGSno+Ll319j/YrcfJejY+w2lY7sJKa6bPepyOWeXBbSebvh6CJXVUNk6toc
ncUPodyNHJ83+S5TH62/0foHXbXXUxg5PZx2nyv9LxhOb7v1wdYXMf1qvZ8q
rLWns+6xu6FvgrVhN5VEn8Lbq1ataty4scR45/WqRN++fTMyMuTg3Pg/262Y
0hbJcMPuX2C3aucG000w3QfrXyZ/hOl4Rw2vk0ohukiXxLDcB9126cP06MY6
FDVd09H+q5b2U+80lZz+RFPXwH/rX3/9NXz48Hbt2rVs2bJTp07Dhg3jGC9G
dqcpU1Flf45rKxYuXEhP1Lhx4+htVFTUE088wadcvnyZC0DX1KmXcv8k6Gpi
91YYju+hYe+pu2qLZm/6B60jKcNeK3fVMdZTrI+u9Wp2f4L1kdOLi53/WOtO
u4ra+aNoGstcVaOb3Ndfu/fHWk5Hd9LuFzna6eiRMOkKuwfnHrkPpsfpqhLq
+tXJc2LYezhzU4Acj5e+5mr2uvM/G7rwTq7mRKnmplQ5PiqObov+1PlZjr6I
RwF2v+WqrUpa++6r1zItZThoHBzpPVP7L8Vw8nsd3QE9lDM9Tna/2npNRzc8
xxZGhhiSEMTJ7XI+2LGLbnMcjYb0D5EjtQHW0XOlz9WF18fYLbP1HlrLYD3M
yOmW5v622P26vJ2l3+bmanKLHA0qTSrd+khftYwdGJOA4VbrX9uElLVG65KY
yu/8uXX0HDr6+Xb/R+s8juy/ausUrJ86Ko/dL9I6XILvjRw5Urxl6DUwMDAg
ICAkJOS7774z1MDfGuDd7veaTCWOjnSO6fnXFc10zdw8YLlvcq9aOl+5gukB
s3tjpcDOTcFGdutKjo+WtUJd6y8ylfmfLAxbLeBKkZqaumDBgocffrhixYp1
69b99NNPd+zYwZauf5ULOr3ymE5bhJwUYNeuXfRElS9fvlmzZgMHDtRPoJGV
O9X5FfLWiTi6iKMOJced1maHN3IZMdXUF9i1FVjL7KgX+NdmSrX7RboR+9fe
OMj0u/SGtRnPsZyOCm+61ayX7DZxebi+nGWaDbGWXO+xHub8+narnt2SO+p9
eEObi53fz9zcB7u/JZefWo+8qnSj84ad74aTdShX7ZmbHN15Rx85wVGtt3sp
/ej+a5k1y0MBclMXcvO38j00VQS5bzmWMw81UU4x/TtO1LX+uqv2hJlUZ0cF
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
g6Cpvzm0Wtpq2VFqeUuzPb+vsTucBYSOAwzdFhOaO7nNhYIM7+bW236ta9nj
rnlm0v1750vFzRn3722/e2ouC3R0vpyzr7GZWDu5zjR/u9Sy21sr+a3zVzC1
kva3JtpHgopZL/qlQpazfq2gsFZ7oK3qev0nS1V7G2iufTU511d61sdCIM2l
dXp+rkBnlpjqdaGOzt/vRHkW07Iatn379h07duzcuVO6a9cu1X/66aeoipLo
qZ1f95TqWWQLB3VVpEe+/teM/S59ZHmT8ixaZlnvxx9/3NUJOmNFXJTVwvDJ
92rCnKSKOGQJMSvVUSWf5dAsrNUek6mNin4p4fBPLQpzCvZV74axJU13dN4e
yUcYtm7dmhazDIvJtm3b4sy6XxxmZTWswpaSZKQ0ZPW1Jk9JljRrh0D6JWva
UUsnyWhIPk1EJvbG5N+qL2vF0ujJEne8B1n9pjOFyYDWN2/eHD9v2rRpy5Yt
WU9ev369RsNTxY0bN2aVmwz5rDMrzKp4VlkJZG2cfLov68k0kFEeL4VSRhdz
4sbYCNFPMvSyy7C5E1mBjwzgkI2JL7/8MrsM9Rr+mjVr8MniPKC3du1akspX
rFiRhX21Vq1alerLli2Tl1m+fLmS1atXM00TKjYbldHounXr0hfcqDC7OdHz
UQVN0IMPJVlOzx/BZEH76wqoLl68eP78+dlVnDVr1rRp0+bNm7dw4cJFixY5
hWQ2mD6rkHx2N7LFkMySJUu0GMO16HDp0qWYKJGm6dDIkn7cmxHF7ToLf9oo
yabY+++/P3v27DfffDPbbSsqYK7TeQ9/KXu1lW2aqVOnTpgwYcyYMWPHjpWZ
NGmSkuyNzpw5MztZ0uwrZXtu7ty5CqULFizI/tfjjz9+9NFHJ4AXyc+ZMyf7
dFjFdhzWVP/gk05hV9yenaPsLXLgxIkTEUBj8uTJaEyfPl1D2f/iljiWJBqE
X61Q779nJTZ70MGIESMcZitt/PjxjGJRvb+WLVctjhs3ju3OZucxu67ZvGOj
5tiCZ/qLOcYGi0I7jsq+8KhRo7J3P2jQoEceeWT48OHZYc/+KXM0ly1OzTk7
ePDggQMHhnkWllNxyJAhpg/ZBB86dCgDhw0bxpaRI0dm3zl7yq+88golCukf
PXp0ziphMhrqZvd2ypQpWtfRdWcxKuaTR09z2sorIlnSFOr369cvS83mMgMG
DMDw0Qp5iyDb9w4Rznsj5hEidnOZrCKK280KE7GL3k0P8en4G16VKSgoKCgo
KCgo+P+GiVXfvn379OkjOEzJ3/j+ecGhhuZCXLMTm0s9LauvdUVzsfvvv79r
167HHHNM7969TTqUtHzSv6CgoKCgoKCg4I9Fds069vdmeMHhgubeZUrq/frf
Oj8HWp/KCxibN28eO3bs7bff3qtXr7POOqtbt24PPvjgunXr8tuQJsp4KCgo
KCgoKCj4w1F/0Cz4/QBfqys4xNH+GmrHAb7Q9e23344ePfraa6897rjjxOr9
+/cXvW/btq3jf39ysIyEgoKCgoKCgoJDDS3fjC04fFG/KlOvrte/CxOZjxkz
5qabburRo0eXLl369u07bdq0PXv21D+pO8j7UWW9vaCgoKCgoKDgkEL7f1EV
HC6oP6jS/F7Ehg0b5syZc99993Xv3r1nz559+vR58sknV65c2XGAz3S0fHSi
DIOCgoKCgoKCgkMKLf8nWKK1wxR1x+3du3fGjBl33HHHmWeeeeyxx95yyy3T
p09v/rFX3d0km5+h2++6esvXDgsKCgoKCgoKCv4Q7Peb0n8Ik4L/CxJ415+h
vvfee6+77roJEybs3r27+c3hWn6/vVwvs//e+KvcgoKCgoKCgoKCQwHt/9XS
Ud5nPpyRt2XqV9bb/82nLml5LepAi+olgC8oKCgoKCgoKCg4XPA/j0CbrQ==

     "], {{0, 601}, {1000, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{621., Automatic},
   ImageSizeRaw->{1000, 601},
   PlotRange->{{0, 1000}, {0, 601}}]], "Input",ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
eJyFnQncdVVV/y/3PuM7ggwqKZiaiGAKipSQogkVqWiOmEIIKGao4QAJYZqS
IablkJIBKpqKmlqopYYmhaZpg1EO9do8jzb+e5/n/Pd37fXbe+19zn27n8/z
nHvPsPfaa695rb3Po857wUUXXnzeC551/nl3+65LznveRc86//l3O+O5l6RT
i4Nms/nFs9lBL7zbjO/DbKZ/9vlf/q0M29vbs4WdSN84zJ5i/1ft99bWlh11
bW3i/jn/53ZhNm5ZLXDnk/Od//u//5ua58LrXve64VWvetXwH//xH/xOt/PQ
6rB///7YrZ2dc8cidLOff9aBdX52BWOPNf7Hf/zHw/XXXz9cdNFFw/Of//zh
He94x/Cbv/mb1hkNqxPu5XsBOozC0cBlv8XueErumq8HMxxrQ8evfe1rw/Oe
97zhO7/zO63f3/7t3x7+8R//0RoI2NDxoFGfa02fYRp8iOlsQCx4y8PeZSBw
7q//+q+HT33qU8OrX/1qG/4P/dAPDa9//euHf/qnf4ogeNerfF/vZjZPRPq/
WsfazrudC5PfPjvvrq7FqxGI3PRKczl9llLabKXH4NxboNHQyqLO6GrTem1O
IOaxDP7Jty8d1BjW/tYC5do0wEuGnGHdHMEaZro0v6tjr9JgGEo+Z2MsrDM1
nraVjQOMO/LlgSZ/4TQKPTodZ2IK93HOaLmy8BRm7Vq6K4uNReGiQvaLcsti
+H//7/8tvc+aSqMLMHF/YVvH8CJSFNd0j9qe+2jE8uoojyd3/j//8z/2XDqm
c+lbwAVQGK26nAvt29O5/fXRrKu/3BotL9SHnXPguLBaGlQHGZD//u//ztCs
2FMBEwbeSmiVaxkaIN1TJJKeCT3TbPNbR4MnXZzttcf+67/+yy5xO9//8z//
047IY33nWvyeQUhPOfAZwBZdnFspT3gPc04koaPO1NE3vvGN4V//9V/nw7/8
y7+kltJX9ZdaSt/m3DHbYRf+7d/+TffbUb8DgLmbXeWU0PHv//7vdmvqZfjn
f/5ne5RmfNxzYEm0yG2cRj38/d///fC3f/u3w9/8zd8M//AP/8C5NS4mKGmF
25L4nmXIV02U67xjMN2Z2s8I2TAw6JYbafvv/u7vrG0eSucjCEDKbdzyl3/5
l8Of//mfD3/xF3/B9zm6ZA5giQgAiyYAk3sdzOEP//APhwsvvHB46lOfas9y
jVE74jKSVgv+BVFqKg0ndZQQSLdoLZoDQo7qjib/9E//dPiTP/kTU65Jsc+H
ffv2pWn6+te/bpd59K/+6q9GR66lphfW1+EN4ADnuDBgOc8jQEJvmA9f/vKX
7chvzqtpoKLrr3zlK2kEX/3qV+fcmoaYvnLSwOQGoJzz+Hz4sz/7syTbOQlq
aTGOKV21HjJO0ugTSdMLvXEt3TMf/uAP/iCd/tKXvjT87u/+7nD77bdzZm5Q
7BZmCgi///u/P/zO7/yOmR8f/ehHhyc84QnD3e9+9+G8884b3vnOd9Lz7CCT
NVnfZcE//OIv/uLwMz/zM8NP/MRPmPnwmte8Zvipn/opzs2HN73pTbPjzWJ7
xSteMbzsZS8bfuzHfmx46UtfOvz4j//48KM/+qPDS17ykuHyyy8fnvvc5w5X
XHHFcOWVV9r1V77ylcNVV101XH311XYf52iDc7RDd6997WuHN7zhDcMb3/jG
4ed//ueHt7/97cO73vUuO/7cz/2cgcL9L3/5y61dnr/kkkvs90/+5E9a2/T5
whe+0Pp/1rOeNTz72c+e82N27PCc5zzHbv/hH/5hM4iwzfiOrfaCF7zAfr/4
xS8eLrvsMmueZmnuR37kR6zbCy64wMC89tprh7e+9a0GEkbVT//0T9v9PEfX
tENfGF4cL774YusDcPhO33DL93//9w9PfOITh/PPP3945jOfyf1p6tPVJPyf
8Yxn2D3xmR/8wR+0kcwZxeww6w9UXnrppcOLXvSigmrQAFygku/ATztM/Nln
nz08+clPHp72tKdZ/49//OOH7/3e7x2+7/u+b86F2R3KLVx6zGMeMzzucY8b
HvvYxw6PetSjhu/5nu+xY7rdzj3pSU+y+2F80AOIdJV+z4enP/3psyMNC4we
CIGYyQarQA6mgOqcc84ZHvnIR1qzHE855RQ70hXHM88807r+7u/+7uG7vuu7
htNPP92u0f2jH/1oSHs+POUpT0mIY2BAf9ZZZxnF8xsQfuAHfiAhLqE6MRDI
BeHpHH/59MIAZ/7A7pyhJL0FdAwUyIDg1FNPHb7jO75jeOhDHzqcccYZBgXQ
PeIRjxhOO+204SEPeYhde/jDH57aSB5AwgDXuAeQuF+gMWr6ZG5BnpAIWIyM
39zD74RLGwZYBEboCrrhPibpYQ972Hz49m//9oSBk046aXjAAx4wnHzyyYZI
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
uTlrdPzhnAQK9uioWZqCB4IROG52dtD/B2xYQLQ=\
\>"]],
 "\nGeometry of a linear classifier (Adapted from ",
 ButtonBox[Cell["[1]", "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", " ", 
       RowBox[{"and", " ", "Nello", " ", 
         RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", "methods", " ", 
         "for", " ", "pattern", " ", 
         RowBox[{"analysis", ".", " ", "Cambridge"}], " ", "university", " ", 
         "press"}], ",", " ", "2004"}]}],
  BaseStyle->"Hyperlink",
  ButtonData->"00004F53"],
 ")"
}], "Text",
 CellChangeTimes->{{3.637659491383601*^9, 3.6376595473154373`*^9}, {
  3.637661219707361*^9, 3.637661220531207*^9}},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tMax-margin classifiers"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.59989587689098*^9, 3.599895892048147*^9}, {3.599895942273438*^9, 
  3.599895956106649*^9}, {3.599997812882894*^9, 3.5999978173844213`*^9}, {
  3.600001523801238*^9, 3.6000015293877583`*^9}, {3.600001797005638*^9, 
  3.600001802768417*^9}, {3.602770524342156*^9, 3.6027705436074953`*^9}, {
  3.6028435328260803`*^9, 3.60284353369987*^9}},
 CellTags->"sec:max_margin"],

Cell[TextData[{
 "The ",
 StyleBox["functional margin",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of a linear classifier over an example ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox[
      SubscriptBox["x", 
       StyleBox["i",
        FontWeight->"Plain"]],
      FontWeight->"Bold"], ",", 
     SubscriptBox["y", "i"]}], ")"}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.599994302797205*^9, 3.5999943241344013`*^9}, {
   3.599994362972232*^9, 3.5999944444415607`*^9}, {3.599995241059703*^9, 
   3.5999952572511787`*^9}, {3.599995618292294*^9, 3.599995667540577*^9}, {
   3.599995727457095*^9, 3.599995748864458*^9}, {3.599995787655945*^9, 
   3.599995912903537*^9}, {3.599995962020927*^9, 3.599996010283751*^9}, {
   3.599996073913365*^9, 3.599996074383387*^9}, {3.599997644131403*^9, 
   3.599997654536499*^9}, 3.599999465685328*^9, {3.599999741572907*^9, 
   3.5999997654585238`*^9}, {3.6000013609599867`*^9, 3.600001361172513*^9}, {
   3.600001563186242*^9, 3.600001626437427*^9}, {3.600676347164753*^9, 
   3.600676371773777*^9}, {3.60069356825977*^9, 3.600693569569931*^9}, 
   3.600693696604993*^9, {3.601635551476302*^9, 3.601635555786669*^9}, {
   3.602777199282949*^9, 3.6027772045179787`*^9}, {3.6028418629796*^9, 
   3.602841866382635*^9}, {3.602841920775631*^9, 3.6028419223792343`*^9}, {
   3.602843648374442*^9, 3.602843651381263*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{" ", 
   FormBox[
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], 
      RowBox[{
       SubscriptBox["f", 
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold"], ",", "b"}]], "(", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], ")"}]}], "=", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}],
    TraditionalForm]}],
  FontSize->36]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.5999959493023653`*^9, 3.599995953719469*^9}, {
   3.599996014195363*^9, 3.599996034756254*^9}, {3.599999769055859*^9, 
   3.599999772772359*^9}, {3.600001653935862*^9, 3.60000165485928*^9}, {
   3.600091396276722*^9, 3.600091400954399*^9}, 3.600693698472801*^9, {
   3.600711391465179*^9, 3.600711411577902*^9}, {3.601635573982376*^9, 
   3.601635577807312*^9}, {3.601635637072851*^9, 3.601635655872739*^9}, {
   3.602777187392568*^9, 3.6027771960108423`*^9}, {3.602841750844227*^9, 
   3.602841792353339*^9}, {3.6028418755863743`*^9, 3.6028419102135973`*^9}, 
   3.6028422373900433`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], ",", "b"}]], "(", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"], ")"}]}], ">", "0"}], TraditionalForm]]],
 ", the sample ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " is correcty classified"
}], "Subitem",
 CellChangeTimes->{{3.599996048918401*^9, 3.599996060837015*^9}, {
  3.59999618849629*^9, 3.59999619102376*^9}, {3.59999771033974*^9, 
  3.599997750823564*^9}, {3.5999977831216793`*^9, 3.5999978863941708`*^9}, {
  3.599997995922997*^9, 3.599997999004837*^9}, {3.599999476675037*^9, 
  3.5999995251109858`*^9}, {3.599999778635126*^9, 3.5999997804083443`*^9}, {
  3.6000016490258417`*^9, 3.600001673828826*^9}, {3.600693595354073*^9, 
  3.600693617229074*^9}, {3.6028493626741943`*^9, 3.6028493963898*^9}}],

Cell[TextData[{
 "if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{
      SubscriptBox["f", 
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], ",", "b"}]], "(", 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"], ")"}]}], "<", "0"}], TraditionalForm]]],
 " the sample is missclassified. "
}], "Subitem",
 CellChangeTimes->{{3.599996048918401*^9, 3.599996060837015*^9}, {
  3.59999618849629*^9, 3.59999619102376*^9}, {3.59999771033974*^9, 
  3.599997750823564*^9}, {3.5999977831216793`*^9, 3.5999978863941708`*^9}, {
  3.599997995922997*^9, 3.599997999004837*^9}, {3.599999476675037*^9, 
  3.5999995251109858`*^9}, {3.599999778635126*^9, 3.5999997804083443`*^9}, {
  3.6000016490258417`*^9, 3.600001673828826*^9}, {3.600693595354073*^9, 
  3.6006936093552437`*^9}, {3.6028494075790987`*^9, 3.602849407579384*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["geometric margin",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600003890158615*^9, 3.600003985352055*^9}, {3.6000040321305656`*^9, 
   3.600004039560442*^9}, {3.6000041559777946`*^9, 3.6000041562825823`*^9}, {
   3.60000430175905*^9, 3.600004305570751*^9}, {3.6000043479521923`*^9, 
   3.600004368649261*^9}, {3.6000046815200167`*^9, 3.600004766017064*^9}, {
   3.60000484512918*^9, 3.600004863437471*^9}, {3.600693845299605*^9, 
   3.600693856667398*^9}, {3.600693888883692*^9, 3.600693957118722*^9}, {
   3.600694001679183*^9, 3.600694032993487*^9}, 3.6006941851308403`*^9, {
   3.602778077665237*^9, 3.602778102965083*^9}, {3.6027783112035217`*^9, 
   3.602778312916588*^9}, {3.6027789277936583`*^9, 3.6027789303584547`*^9}, 
   3.6028419551504917`*^9, 3.60284226499516*^9}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["\[Gamma]", "i"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
    SubscriptBox["y", "i"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}],
  FontSize->36]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60000405249175*^9, 3.600004093162671*^9}, {
   3.60000413469939*^9, 3.600004162886248*^9}, {3.6000042185678997`*^9, 
   3.6000042203326073`*^9}, {3.600004436032797*^9, 3.600004463584036*^9}, {
   3.600004545307625*^9, 3.6000045933056927`*^9}, {3.600004705129046*^9, 
   3.600004716759162*^9}, {3.6000048170476103`*^9, 3.600004829213614*^9}, {
   3.60000499390374*^9, 3.6000049958444643`*^9}, {3.600694037582768*^9, 
   3.600694063712804*^9}, {3.601710290277568*^9, 3.601710299286626*^9}, {
   3.6027780005577803`*^9, 3.602778000858964*^9}, {3.6027782063525953`*^9, 
   3.602778207874455*^9}, {3.6027782403528757`*^9, 3.602778241055873*^9}, {
   3.602779849994437*^9, 3.6027798512465687`*^9}, {3.602779931604527*^9, 
   3.602779933887808*^9}, 3.602842062877841*^9, {3.602842168127059*^9, 
   3.602842170432918*^9}, 3.60284224395522*^9}],

Cell[TextData[StyleBox["Minimal geometric margin ",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.600000213585745*^9, 3.600000221727106*^9}, {
  3.600000261689476*^9, 3.600000292450082*^9}, {3.600000520930485*^9, 
  3.6000006628593903`*^9}, {3.600000859861929*^9, 3.600001272563404*^9}, {
  3.6000013728450623`*^9, 3.600001439133802*^9}, {3.600001709608714*^9, 
  3.6000017098448877`*^9}, {3.600001781941401*^9, 3.600001783769779*^9}, {
  3.6006764429267817`*^9, 3.600676445095525*^9}, {3.600693728416833*^9, 
  3.60069377582591*^9}, {3.6007116261904078`*^9, 3.6007116440335493`*^9}, {
  3.6016356777501163`*^9, 3.601635688756959*^9}, {3.602777512580627*^9, 
  3.602777544781403*^9}, {3.60277787610751*^9, 3.602777893537545*^9}, {
  3.602779007365385*^9, 3.6027790118628597`*^9}, {3.6028298176233397`*^9, 
  3.602829818040395*^9}, {3.602842134231049*^9, 3.602842137715104*^9}, {
  3.602842367207553*^9, 3.6028424218400908`*^9}, {3.602842460431306*^9, 
  3.602842461339127*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubscriptBox["g", "s"], 
    RowBox[{"(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["min", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
    SubscriptBox["\[Gamma]", "i"]}]}],
  FontSize->36]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.60284247036057*^9, {3.602843002713603*^9, 3.602843011853401*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier", "Subsection",
 CellChangeTimes->{{3.6000018233736467`*^9, 3.6000018292632837`*^9}, {
  3.600511116033592*^9, 3.600511153981496*^9}, {3.60277737133342*^9, 
  3.602777371619178*^9}, {3.602777438332345*^9, 3.602777444807498*^9}, {
  3.602777559192567*^9, 3.6027775615670357`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
h6d9sC5T59fJsrIyWpOVlfXKK69IXK9bt640nGndunV0dDR/Cz3SzhMPWarc
eQdyZbs8QK4FSzEncjsA2Jnkdhn/oU+dFsbYvO8BAPg8epXjOpmgoKCxY8ea
073u6SuS9EgJ4bz+6NGjd911F9fM6JtVKcY/+OCDBQUFtfzXeCg9KZWu+ddl
MLwnpVaztLQ0ISEhPj6eFuT8yC0bDwDgdvqO/pUrV0ZGRm7btu3gwYO8ftOm
Td9///20adPi4uLcupkAALWIX/GioqI4Xb/77ruWuyadPv60fU7mzZvXvHlz
/pkhISFcPEMfmzVrRq+rtfXHeDYZFNKXdE3l9vgyWS1/NT09fe/evampqdnZ
2RhEAgB7srwwLlq0KDQ0lAsy6W2FXiTpVbRp06Z8X9WAAQPcvb0AALWFXw9j
YmI4Y48fP96c8609HEGzsrLefPNNPUOTTNj0wAMPZGZmyuP1uQA7ceKELiax
4f2YOtvn5+f/8MMP9Fbl+AC9bPmv6XobAADvRS9lfL1S6gaHDx8ubys7duyg
NVzq2a9fv5ycHHdvLwBALaKAd/DgQQ7VH330UfV+CEVrx+H3oqKinTt3/uUv
f6GsLjUz3C6SjB49Wt+JKe3KLT+2etvjG2SfFBYW7t69m06vjCrv5PcyS0tJ
qZ8HAPAlupqdXgbvuusueSuJjIykhbvvvlvfKwQA4HukeIPT9YgRI87xFkhL
K11eM2rUKAnt0iWStGzZcteuXUZNdSfjzJLYLc3MbUJ37JFCmpycnOPHj2/f
vp0+8ld5z+jieYapAwHAx1he1nbs2CEXc7kgk0fa8boHAD6M03VpaWmLFi3o
pW/YsGHVG+KWqng9QSov8A+Mjo6+5ZZb5DWW0zsPwvfv37+4uFj/XqezDtmN
/OE6ltNO3rBhw549e/geVUuRvHyK/jMA4GP0eA5fdhw4cCBFd574b+7cuTZv
VgYA9iF1MsOHD6/2D5FSmZPldNG1pMp58+bxhKpci0gLderUoY/nn3/+4sWL
TeX8afPJ73TpkSnfM7onpOwW2WOOvX0AAHyAvKHoKncus2zWrBkPAS1durSK
KTAAAHwDx7/Y2Fi+Y/Ttt98259D/1mkfXamZ4Wx54MCBu+++W9+pKiU0Dz74
YFpamqkcWe05iQbvOm5Q7HgLqqh659iwvggAfI9lIEIGKOgFsE2bNjwW1L59
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
j6U73vBryocO3LBZAAAA3kbGwa699loKG6+99pp7twfczlIPc/To0QULFugv
GYfpMn2M4924kreLiopMRebUzWH27t1777336oIZHoSnGE/PqaysLPkuGw4p
Wyapt1x34N3IdwHYs98OAADAGZIWyldeeSUljeHDh/twHoPq4UOipKQkLy/P
cmeltArBYUM7YdGiRdwoku9alVtWmzdv/ttvvzn2cndaRQ+FhYWRkZFHjhzh
T/UFIObbp40AHohe+eW8W59fyzsCGmcBuBjldn9//3fffdfdGwIeRzr1FRUV
VVHpYdsopfcJ7aI+ffr4KfS04ntXX331VX7Ls0zgbioXkABJT08fPnz4lClT
9G0Fxt73CAC4iwR1faO9FFVK/SSemwC1TdqvEe4D+eKLLyI/gIXUdTuWMXAN
iR7/tGcJt6n8bJo+fTrfryoNZwIDAynAt23bduXKlfIG5zirOxh1bwXl9tGj
R2/YsEEK4PWO4roa2x5vAK5huZecPuqrrpb7fVy/eQD2VFhYyDfWPf744zhl
BgvHRohCdzh36TZ5Ht3ekPPkyy+/zKGdPkqrGQrwt9xyy+7du03lbiqgyc78
4Ycfnn322VmzZlkKtPAyBeB6+vVKnqT0LuBYzAYAtUFGSnNzczlgdO/eHafM
YGG5r1DLz8+XLzkdkLcJfv+SFuWmIrpv3rz5+uuv5yp3ie6c3t955x1T5TkR
8F4tKChYu3btunXrsrKy5DxR8gNOfABqFb+wW86U9Xk0PwcR3QFcrFGjRpQr
3nzzTXdvCHguy2syfUq53dIJxLY5yunbFpfETJ48WUplpNsMad++fU5OjsE8
qg7kKNJ7Ji4uLjs725IfbHu8AbiGZYw9MjKybdu2999/f8eOHXv37p2amkrr
n3766RtvvLF169YzZsxw35YC2AW/D15zzTUUJN566y13bw54Ex5mpxf2rKws
jqB2LmBw2qjclO+T2NjYNm3a8JA753a+wkVrpkyZgoY8GueE0tJS/tRyO4Cp
qGzHHgNwAf28o4+7du264IIL6LWrTp069DE6OppW8itbYGBgeHi4O7cVwB44
et1yyy3c8kLPhwLAqui8x+v37t37008/JSUluXa7PILlcoPcxmvphULrx44d
K01meIpV9ve//z0jI8Nd2++ZpIuRqVypZecTQwB30UWAO3fu5Nnl6HVs9erV
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
4Ycfptm5Q4cO1rqwAn9FOy3Q7R0XF3fgwAH+CNXEGL5D0dHR9erVkyyRNDJI
0sguXbpwfVXGyOcDGL6vqHPOnj0bGxvLwQUcWyFfcbpO3IEAAACuEK3bn3rq
KZqd33//feh24H9IPkPeStptRorm2Cw+3bkxp02bduONN7JuZ/M7x6vefPPN
q1atMk7GuCHou4jutIULF44fPz4pKUm/5YFcBwAAcBWI/Yd0O03KPXv29LpF
AFxHjOqfTpaIcidasQ3JD6lzvFP/xMbGvvXWW5IiMjg4WNxmOnXqlJyc7GRF
DXjbeN9EnNhTU1OXLFmyYMGCEydOcJp3WULaebMBAAC4akS3P/vsszQXd+/e
3esWAXBdMJK6izQ1knvYaQh159iR9I/01bx582644QYt2qVg0/jx450rTshp
GxezkI8jR44cPnz46dOnjWSSAAAAwJWg66rUqVOHJuJ3333XTt0C/BtdTdUo
nOpkadRjWdjp7CGd4OTM6KiTZEZERLDHO6t39pnhdJF169aNj4/3qO0+iuFE
JLccrYDCwsJOnjzprucLAAAAXB6dvY0mX5qRK1eu7G2TAMhj5BGIjIw8c+bM
xYsX3dnIDeM8I6lUjJSSjr84e2thydutW7dWrFhR3GbE/H7TTTfNmDGDr1pi
B9xGeP/olqtG/LI2bNhw+PBhQ7ezX42RGF8P0bCoAAAAcLKmA5pqX3rpJZp/
a9SogRIqwBLE5qkTvC9YsGD37t1Otv406qtqXxr9pNA+ay3a+pkFVb+qcLK8
tbt16yYpIjnBO5vfq1WrRgsfPk0CgZ2cyt+x26+b7zT2cndUr+ZaytZxvRuy
tt8AAAA4OWvNNGjQgGbeFi1aeNskAPISFttanMfExJD4nDJlSmhoKB8xhKuT
MxETIX9EH8yrK7iOGIkKSVtyCCrHq3IGqoIFC5JuFws8jSGk6qW+qpPTT553
5IgHl+Q1hhuSlusSYUELRukiw95urCIBAABYCE8WtWrVosm3ffv2XjcHAG8g
USqiaOvWrR988MG8efOcLEElQlSEltiQ5Yh4g7stpfkdyTPDSxK55JCQEB2s
KvGqZcuWXblyJb/Ic3Iak0W3W4jh8aLXL/Hx8dTJfJuJ/wyEOgAAADc8tz78
8MM04b711luYJoBVaFnuKLM5PRekpgxju+H7odH5z3W2yfyLkWTG8Nlg2blj
x44KFSqwaOfaTJzpnejRo4ej3lZo/21rnfG0/Vwv9JKTk3fu3LlixQp2oTFM
8QAAAICTM4ME6fbAwMBXX30V8wWwBENaG77uYmSWcEv2hxEFS4pLUpenp6fz
Dgta//CTYaRD5D2C23H9l19+KVmy5P8pWL2XLl2atGiuKl0nSLQK1uTiTCU7
tHj88ccfZ8yYIfeSJtfwZwAAABbCE8fjjz9O8+yLL77oT5IDgMugXa/FLYG/
EqnpFkvizCDnnDp1avTo0WvXrtUBmH6gr2Qhw0sVI14yOTlZX2NSUtIbb7yh
E0WK80zbtm3j4uKcrK7Tix3byHVoNQqBRUVFTZw4cerUqXRcl1Xl+1Ob6wEA
ANiGnovr1q0bEBBQu3Zt6HZgD7k6tGjDu5Fne968ebNmzRK37dWrVz/yyCO3
3XYbC9Ty5cvTt05Od4h8jbtCkF6w6ATvfMmLFi0qUqQIjSTsM8NbokSJEnPn
znXUy4u8vxbfQW4qeemgfd3T09N3794dHh6empqaa0JIAAAANsPTbr169QoU
KPDggw963RwAfJeDBw9+8sknU6dOXb9+fdu2bUmg3n777YsXL96zZ0/z5s1Z
ozZp0sTxC3v71XH+/Hku4iaO7uI5U7Vq1cjISD5NhKskUfGy0b4Er4yoQ+im
2rZtm5PTN8lwmJGoCmvvNwAAsAc94Ddu3Jgm1ooVK8K/HYBckbqi8+fPl7zl
nOyd3T/q1q3LjiJTpkzxurEeIP7/tA0NDb3xxhvFYSYwC/749ddfOzlz4LNH
t7XBqm5YjWdmZkZHR+vMmfKC4z9Z6J9AtwMAgFW8++67NLE+8cQTXjcEAN9F
EpizCi1cuHBkZKTYQvfv38/HS5UqlZKS4mlLvSE1NdXJlu7nzp178803tcm9
YMGC7PT+2GOPbdq0yVH+ISw7+ee2kavjOn+U4l9O1rLIyGsk6h1LHgAAsAdO
btCqVSuaT5988knYbQDIFY5ITU9Pj4qKCg4ODggIqFKlyvjx4xcuXCjSnZ4g
eo6KFSu2Zs0aL9vqHZzJUGIEDh8+zH0ibjNFihThnZYtW0pwq3abB4wMxbpn
JK+RoyIL8JIUAABsgIPyeHZ4//33aSYlHWJtfjYA/hBWShMnTmTlyXXKtm/f
Pm/evMwsBg8ezF/NmDHD68bmNfwywp3rnsYZ6p877rhDIlUl1Uzp0qWXLl3q
5BYAC6gnjd6gZc6WLVtOnjxpJOd0LM6rCQAAdtKuXbvAwEDS7V43BADfhXXU
Rx99xAbkDz/8kI+npqayS0NISEjRokXp288++8zLhnqBpCJ3lIwUy0BaWlqT
Jk2kpqqkmiHee++9+Ph4J1v5W45+48m2dB2XeubMmf79+4eGhvL9xltdOAwA
AIAfw7MqTQ2cDaNixYpetwgAH0XcjAcMGMC6/fXXXzfOId3OX02YMMGLNnoM
jyfuNPiyM27cOFrXBAYGUhex1Z39Z8qWLTtv3jxHlXmyFkO3844kLGWHIurG
Ll26rF27lr/FSwoAALABbR9j3V6+fHn4twNwKdi8uWrVKnb2KFOmjDhy86M0
duxYzl7+ww8/eNzWPEcPHTq1u/6Wj7/33nviLaMzvT/33HNbt27N84Z7jKG6
L+MypDNAHj169J133vn44485Gw/GbQAAsARW7z169KB5s0KFCl43BwDfhdQR
e4A89NBDbDRevXq1PqF69epsQJ46deqePXuSk5P1t9Yak436s7T8iYiIeOKJ
J8RVJigoSHLO9OzZk0/+bzbydyTNu2HYtwq5i6g3Nm3atGLFinXr1umiq45a
Jf1PwSdI1ScnZ21fa29OAADIR8gA/umnn5LeqFy5MkZvAHJFq0RSSqwzX3zx
RTm4c+dOPjhz5kz6uHv3bto5dOiQ/gt2Pl/a34N3SHPSwbFjx4qjuyR4J6pW
rbp//35tQ+YM+cYfkapDFiJeW9Qt0dHR7OLu9qtx/0R/dCefhN0eAAB8GbFZ
dezYkabLhx56yE5dAcCVIKWXiG7duhUuXJiemrZt254+fXrLli233XYbf5Tz
o6Kivvvuu++///7MmTM2KyJtDTbUeGRk5Msvv0zqXUzuIuC7du0qCfPlJ0aW
FZt7VeDXEO6U77xOdPssMdrqjmEfAADyC2yw+vDDDzk6zOvmAODT6Ezjffv2
LZCFGIoljYwWQlOmTBk5ciQb3u0USNqnhQPhtVakHVrakG4PyEYKrVasWHHO
nDmiMLWfDP0v2Jl/Rud1531Dk4t0d2eAZ78jfRPKb2VNen1bDwAA4GrRo327
du0KFixYvHhxD9sDgC9jqCPWQhcvXlywYEGbNm26desWFxfHB7XDMJ1AH0lK
LVq0yMKgSyFXo652Xz99+nT9+vUlyUxwcLAkjXz22Wd37tyZq5ndzrzlbrku
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
GW8VIs5l9aeL1TLsmiU3mOUeWQAw9ETwbCX2dgAAsAce99auXRsYGBgUFDRv
3jw+Tlpi4sSJJLdIej388MMsIexEi3MnS7336NFjw4YNNvcJY2TRZJ9tEp+d
O3dmF3dW77T0Ewf4oUOHZmRkOGqZY6GVTGfs4R19L1HP8KqQOHLkyJo1a5KS
kozTrPUvAhbCxnY92tAIQ3PTgAEDLBw9AAA2I4a+GjVqcAY/R0XMEQ888AB7
O+zfv9/LhnqHtudwz9CRxMRECVO11tnDQHyKuEO2bt3K8ao6RSRTpUqVmTNn
8q9SUlK8bLRH6OAI8V0XKW68vhk/fnyLFi3mzp3LH3nVA4A9aN8wHmk/++wz
mpXg3w4AsBCSB0lJScWLF6dh8I033tDHnWznGaJnz552SlOdr08jlk93sj6r
0L4uevbkzA/fffedhKky4jbTvn17Wv44ti55jEpMjqv3nGwHNto/dOjQv//9
76FDh8bExBi/AsDv0UUQnKyx99tvv6VhhGuW6SrYDjQ8AMDfoVHu8OHDrKne
fPNNPigydfv27Sy0ypcvD6mg0Sk+uLvYdKzT4DvQV44TFxfXtGlTDlAVzxn2
oilRooT4ZRmzrbFQchvcbIMu/+eff65Tp87o0aMdVyfkmvUdAL/BGGyXLl1K
44m2Jlmb7gwAYBucopxNoC+88ILIUXZUJtHFQqt48eJet9S3MKzrsbGxAwcO
3LNnj6NEO2OnjuJpVCbTxYsXk0rnqkwSrMrOM6+99lp8fDyfpk1nuSZ7t5xd
u3a1atXq008/TUtLc6dwN8JXAfAbpIwI397bt2+ntX/fvn3poKSWdXDzAwD8
HR7x9u7dy2qKdJQoKB4AU1JS2BRfp04dDIm5IgL+5MmT06ZNmzRp0pkzZ0Rz
2txpIrl5IUMd1aZNm//LCSeNLFWq1OTJk52cqyEpbq5NapDxTla+1rZt22Zm
Zuo1jl5xe91AAK498g6O7vCtW7fS6NG7d28n5w1veRVmAIAl0ED3j3/8g0XU
77//rqVmREQE5wNZuXKlhy30NXhq0HpSJostW7Z88sknixcvpm60NuEMrwd1
iU8xBW/cuLFKlSqGw4ysDSVRpJPTA1wMy9YuhViiS/72jCz4K13/y7sGAnDd
kaFg3759NFu98sorxreOrXFGAAB74FGOK+YQffr04eNsIx00aBAfT0hIsFaF
XgqtJ52sHuPO3LlzZ+fOnfv16xcTEwMpZcSU8RGJdxafGXnjM2TIEPbRcnJ6
HNlsRjZCVo0nUSquOpDuwB+Rd0my/N+1axeNFdWrV+c6ZfJuzuOGAgBAnkCD
4blz54oVK8Z5trdt28YDIKmmRx99lA2hXrfRt9DpC/6ThXECdenChQsbNmw4
ZcqUPG+d90giFP4o9nYdbXr06NHKlStLhhkS7WJ7f/LJJw8ePCg/0SkTdQZF
q3BnNDLqNNmcDx9YBU1MO3fupIGiY8eOjhpnUDIVAOD36HmfdCarpocffjg5
OTkzM7Nly5YcPLhly5b09HQP2+mbaLku+7pI/aFDh2bPnu1By3wAra51lkia
c+U9Bd1j3bp1oxtMTO5FixalbVAWP/zwg/Zo1Ql8bMOolMo5NvkI71BH0Z02
ffr08+fPe9VIAK4fUi+Db/j4+HgaKL766isn24oiwR2Q7gAA/0brK5r377vv
PjZ+3n777VyJaeXKlYa/MdCdprMZuD9qy7w9yCXLbOvO9iD7e/furVWrltvj
ncT8vffeayx8LOxMJ+eSx8nOiul29Z85c2bDhg3nz5/vTSsBuD7ogGvenjt3
joaIzz77TGeIdSyOf7EKYxa4zP+4cXsA4B8Y5Sri4uJ+++23ESNGDBgwYOHC
hampqY7L7QFcHUa0pqNGFV131R1dxWZnP5asdO0jR44sXbq0uM2IxzvRvHlz
mqadnMa0XLvRQuTlBW8PHDjQqFGjFi1aHD16VJ/jZPWYfivkx7cT8DPchqNj
x47RAv/TTz81zrR2HLAZ/KcDq9DWCRkVjYL1uSol8KeQ1B/79u1r1apVZGSk
jrTSs5LR57Ru0trek8bnAXxp6enpjRs3ZpO7jlcNDg4uUaLEzJkz+WQjFtjm
vM36qiU6le6ZUaNGVa5cefz48U528kydc8ZQ7HiuQX6BZyW61TkP5CeffMLH
kf7RZuwc/IHNaN3uvv9hlLuGcGf+8MMPr7zyCm3pI8lOklivv/56+fLla9eu
3alTp7CwMD45OTlZ/9a/ZyWejvn2mz9//j333MM+MwWyENv7o48+un37dsfV
G5bnf+OlH7v+ygMbHR3duXPnjh07Hj16VBaD8oDLGzRrOw3kR2SRznkgmzVr
JiYRRocXAduw+cUrsArjjTm/TJdk0XIOBsO/jkRZHjhwoEmTJhUqVChcuDDJ
0YceemjAgAGlS5dmjUqTkfbkFGdmL5ueV8hbnj59+rCjO/UJa3gurko9xkY2
nq/F98OS/nFjzFNGkpnQ0NB169Y56t6TBxlFrEB+wR1tevr0aRof3n77bT1J
GTvANqDbgQ1c3trG5jhOvpdnTfJLpJ/FOjRjxgxJfjhy5Eg+WKNGDbYtt27d
mrs910R/folYg3nsvXDhwsmTJ2le5g7hDKVCmTJlpk2bpm9La9eV2r1N6n9p
ce5kRwc7ud1CmOlAfoHvVbql6VaPi4ujcaBt27b8leX5pmzjf9kYB71qDwB5
iS5JqfW53kdJl2uCIaV69uzJBuRnn332wQcfnDVrFh0/d+5ciRIl2Oq+fv16
Pt9Q7/5Kru79xObNmytWrMhyvWAWot4bNmy4f/9+R1W8sg22Q+opLNenVSJW
+KPoH7+PmwD+SnJyMo0AjRo14rpL+is7hwLLMWogAuDfuGdtzOPXHO5SnY38
rrvuonmnZMmS9DEmJqZbt26DBw+mGYcDM4kOHTpI4SH+uR+PS+68mv9TVUHp
yOjRo3WSGd4JCgqiNc6HH37IxQUsnK/lltArHYl3dpQzjDzUw4cP//LLLw8d
OuTgSQf5B1mi8seEhAQaAVq2bMkfcSfbDFshdHFt/RXuDeB/yOtFHaQmZs9c
hQG4CnhU4W48evQoe27/7W9/c7Jfdhw8eJD258yZw8kPX331Ve3W7veDj+HC
aqhN+nj8+PGGDRvq+qq0LVKkCG0rV668c+dOb9rtA0hfGSVT3e+R6YS0tLT+
/fu/+OKLoaGh+mQAfBbDd522rNtfeOEFOQ7/duDkfOGYq00SSh4AcCUYBvON
Gzeyv8f999/PR0TV83xElC5d2smp9vVAxApNW1b9EiPhycWLF0eOHMnxqtyB
QUFBvE8yvmvXrrrQgHSak91FYpCxJ87XDV/4rl27GjVq1KNHj8jISPlKO884
qtiT/jmmPOAhhm6vUqWKvJVzslWZH4+H4A9hO6SIc9omJiZCqwMA/iyiJPlV
76FDhzgt+Y033pienq7VeExMjKQu52JDTk6dqfczMjIs0Z/ayT8uLq5t27ZS
WVXcZuhjmTJl5syZ4+Rc0RiLHZvhPkxLS3OyVjTjxo2rXbt2nz59DDcb9xyH
5DPAF9BijB75p59+WnsPolgqEMTscObMGeTWAAD8WbRipAEkOTm5WLFibC7e
t2+fPvPw4cOsQsuVKzdo0KANGzY4OV8Ti01J1gJ+PFUZelLypRBr16594IEH
WLrTCkj8Z2j7+uuvR0dHOyqgIDMz0x2waaeMF1nOhsq9e/fSIuj999/fvXu3
XhLyt+564n4cZAF8Frd7Q1JSEj3pL730kpzgUdOAD6FvA9mnoQy6HQDwZ5G3
t6wk09PTSXOyzpw/fz6LcI4/HTVqFB8fPnx4fHx8//79W7VqFRUVJTVVZfzh
YEz/Ho7ckReGG/yYMWPYYYalu/jPkJ7/8ccftRCVlPh4Z+rkDByg7YQJE956
662YmBhHJY2UE/z7HgO+j+HYRh9Jt9Nj/txzzxk5kfBoW06udwLGfADA1cGj
B7scjBs3jnXmE088oc+pWrUqHbz11ls50zud3Ldv32eeeWbSpEkiqIy0kP49
IuVqQmElzyJ86dKld9xxB7+8YHd3caF58cUXt23bxj8x8lFo072F6Ah07hMS
Qk7OxEfiKWr8FiZ3kPcY7xzZT6ZKlSpGMLt/D4bgStBGCVjaAQB/BS14aN55
8sknuZxQjx49OPpv4sSJbGwPCQlxVBb9iIiIRo0akaTn2pdOzozc/p3dXdft
dZSrhrgJ0bfUe127duWuC8xCfGZo+80332hHd5tndtY8km1Gx5zyqpC3+u6i
k+k0WXLCcgU8wbCjpqam0tNduXJleajxYgg42XdCrtYeAAC4ckR5SmITHkye
e+45dvD45z//2aJFC3bz+Oqrr3QWFN6neWrlypWvvfbatGnT5M/6t2J3lFuL
e+xlPSkfqa+2b98uBWelSBNL97vuukuWPPwrv++6yyM3pPShUXGSjm/btk3K
+wqQRsATdD1lJ+v+LFSoUIUKFfgGNgKIvGok8BGMKQPWBgDAn0Wcq52cGp4Y
M2ZMnTp1OEz12WefXbx4MX/rlu60f+zYsYkTJ8bHx//PlazbLzEGWykoIMeN
jDG08+OPP7LJXddpYvXerFkznRzSQoz0odpriHfkLUZaWlrnzp0//PDDHTt2
ODlVE2ZAkMfoegS8PX/+PD3XNWvWdN+NuD8B8AOMV2yieYzM/Db7u4L8hdy3
bDf+n8oP78cy/g/hHqB1zdtvv22Idt7ec889v/32mwT58q9grLsUo0ePpkXl
pEmTnEsEGjgqZhBdB643vH68cOFCeHg4Pc61atXyukUAgGuMUW5SG4t0JVDM
OCC/4PYboVnMfQ9be1eLP/y0adPKli3L6r1AFmKEb968eWpqqpMtA3TOGTs7
7TIcOnSoffv2rVq1YsO7rHE4u5o+09q3GOB6I07LskKMiIigB/n555+XEzxt
IADgGmPY27W7gg43hr0d+D56vXnx4sWlS5dWq1Zt8+bNbr8aO5GiQk5W8G+H
Dh3+LycctVq4cOEhQ4boH8qA4EmzfRMJR6Ub7N133+3evTutd4zwXr4PIZzA
9cN9d7GfzHPPPXepEwAA+RTtBizJzfgj7dCzL3OQ5XFqIF+grcEckJWQkNCv
X7+6deuGhITwEZtFuxGkxrGr27dvf/zxx8VhhuGAggoVKtC3UOyXQvdJXFxc
796969WrN2XKFAmv5q+0mxYA1xzDnZU+njt3jp7fp556Cj5aAPgfOiOxkzW5
0CPfrl27Rx999KabbnrkkUeaN28eGxv7v5yVHQDwQYz4VhHqMTExkydP7tSp
0/Lly53st0jWClG+fM6Tz0fo8e/Tp4+u0MSZ3tl/pnv37loYQH9qjKXQkiVL
vv76a30CnIvA9cbwk6GdyMhIzt9uxKoAAPI7MgWzbqene8+ePTxxN2jQoF+/
fuXKlaPZvHjx4lu3bsWzD/IFsgjVXl6ZmZkHDhxo1qzZ22+/TetQ71rnJe70
Mk7OV2xNmzY14lV5/5Zbbpk4caID0e6Coyfko07tLrn0HQgnkIdo3a59X5Hs
CAA/wMi8t3//fjayTZ06Vc55+umn2euVZI83rQTgytAiSrwUtF2d9gcMGFCt
WrW+ffta6/ql1buOXuHjP/3000033cRyXRdXpfV7u3bt4uLiPGy5r3GZTDtS
tomke3p6ugNHI3DdcOeBjI+Pp+f3qaeekhMuVegBAJDvkOmG5pdGjRrRBF2j
Rg0xVNJjvnjxYra81a1b19OWAvDHaOdtw7lLvpo1a1aVKlVIoHrQPh/A7fKq
O4r2k5KSOFGkmNxlp1ChQlysFji5GTD/q+ATRo8e/eWXX1KXetRGYAXGsjEx
MZGe1oceesjJLVkcACD/Il6+9ETHxMTw1Ny9e3cjCeQDDzzAX9Eqnr7S2d0x
FIB8hMxu6enp4i1z8eJFbQvVmUB0Wr88bKY36JpN1CcrVqwoU6aMGN5JsYuG
r1WrVnh4OP/KiL5kjEVB3l2D7xEZGdm3b9/OnTsvX77cSNKl5T2frD2X4FoD
rhwdPE53zsmTJ+lRLV++vON6AC1/HgHwG+hZ3rNnT1BQEM3R3bp1c7LnFJ5i
WrduzVP2hg0bnKzBQQe14f0v8HFEHbldkTX6iCGlHAvuc0mVyb1EvUGavHfv
3vzsFyxYkBQ7jQ+BgYGs5Fu0aOHuMfqJ7jq/77RcEYOGGEC2bdvWqVOn7777
7tSpU3zEWCqK4oKsAlcB32lSWo792ytUqCAnwMgGgH+gZcxvv/3GE3SfPn2c
nHXkhwwZwrkmPvzwQz3diO0dgPyCYRYWO9WBAwciIiK43pC7grB/CyrD111W
5bxNTEysVq2a4TBDAwIJ+KJFiy5atMi9AtKpLfL0SnwPHcm7evXqdu3aDRw4
MCUlxXHFBTP6lsvbloJ8jBFyfvr0aXpU//GPf/BHPIYA+A36zXhYWBhPx506
dTIm4pEjR7KFrWPHjnwE8ekg/2Kk5uP9w4cPP/PMM1999ZU+aNTQ8W+0VuQs
0E52P9BA8f333xcuXNhQ70zVqlWPHTsmQe76ZZydsP3ceO/AfRIVFdW2bdvG
jRuvWLHCyTawi5mUzxfXIwCuBPcAlZaWRg/p/9/eeYdZUWT9fxQYwisSVBbz
79VdVBQJrmAARVBJ6oKI8qKoSx4QUJKICCpJARcBMRAEXXJYQAUlLxKHHESR
IJJFYMgMsyv07/vc88x5zq3qO7ou8d7v54/71K2urq46Ffp09anThQsXdvwd
JbL/W0LiBh3UuKFky5YNenuZMmUcE9+PPvpIVPqpU6cGmcvsviEBIectVle3
HwQPov0ptW7dumrVqlOmTLHnOovwcYlq6Y7KjcGun/uEDtC+fXvHz4wEMDn0
6dPHZgWpOp9ySyjUg4dW3/afefPmvfLKK3PmzLGn6D6LhHpaJP89tsNIx8NQ
xcC85pprnL7ETkVI3IDhnJ6eLvtPk5OT16xZY/dGPfPMM7LCtm3btiAhlyJJ
HBC6CCy6pe3GAwcOvPfee1999dWdO3eqkYO48otjtKbyUPPvCBKjzziyDrxg
wYK77rpLNPZcuXKp9g7VvVChQuPGjQsSXk/QuVE272u8SNLZ44wEGoP0Gk7M
5x3yu7F+Yw4fPowhef3119tDhJA4wK5A4rd3796XXnopxnudOnVUOYc+X7hw
Ydyd69atq4k5D5D4wFqGqKaKu17//v1r1Kjx1ltviR6VCF+9dJTMINqxieP1
Hc81qrHLQz1+ZRdMy5YtDxw4ECSw5uno6vav/cpVEC2iY8eOBQksNPLf4Gwn
2bt378UXX1ygQAFMX/Z+nQjzGCFxj/NmtlatWvKpxIEDB0pM/fr1EXPttdfK
vdjZS8V5gJz/WLOuwHMRY+26reeZ9evXP//883369HFOjz/8FWAngX0roar7
0aNHmzRpYm3dNVywYMHevXv7LvQTCmc7szXNcsSC8PLly7t37757924996yX
l1zYOG/A8+fPn5ycnJ6e7vQlfvKYkAsdHdQynHEHr1evntyCy5Yte9NNNyF8
yy23bNmy5VyWkpCzi2hcx48f37Rpky65yyHrfzvwfKckiB8V3bo+efLkUqVK
iZt3620GvxUqVNi7d28Q/bCftXPyuJdbLNDHevbsWa1atUGDBgXmq2GJ44aU
/G78Xfb4zZcvHx6f7ZcCEvYJmpB4wllnE/tVRC5btqx9+/Z169Z98sknx4wZ
E/fGvYRYrPYoLvsC7wOsqrg6X2h1HHfHJdZ1TBDZt/vmm29a1V30dpA3b95O
nTqlpaWJuPz3GrpIqI7fE1N1l140b968m2++uV69erJOEmq2lJjyIVng22WB
AgUK/OEPf4iVjBBy4WKXwtLT060LMt2JFtA1GUk87Mq56uEyUtRTii5nOTsx
1QdLXOLbF4FDhw499NBD1j9kjhw5JHD55ZfPnTvXz8cRUcKuB9pOtW/fvq5d
u5YvX75du3aBt7TCJRSSNTpr5cuXL0+ePHim1idiu7BACLlwcVzhBZnb0+w2
PZuSkARBXB+rA/MgU8/87LPPUlNTrb2Hs24c9yPF2SxgN7ROnjz5qquuUi+R
F2WC8NNPPw2lNAiz7tZw3G8liIXzyYxdu3Y9//zzlStX/vHHH60zSVrLkFjY
cYRZKDk5+eqrr46VgBBygWJNdgU/Db+iQhIN2+H9XV1QsaZPnz5w4MB169ZZ
m3bnlPg2lfFRIaSnp7du3VqsZdTZu1jOFCxY8N1331U93/o2jzX/JA7iflMV
ePxFH3v22WffeOMN+Y5GItsRkSyQB2HrHe7o0aMy3OT2neA7xAmJJ07F+IC7
riXaRUWOepIgOPsBHX1JbMZ2797dpk2boUOHIrEYM6gj7sS5RaqlkGCf8WfP
nn3NNdeo0q5OI0HFihUXLlyop6gpSGI+7wTeXmY73+7du3fq1KnOzmhCLNYA
RgJ4ds6RI8ell15qR1PoIgMh5ILDt9F1XoJzmJMERB9pHYMx+zWigwcP/u1v
fxszZsyuXbsOHTpkT4/7UePskbRrfXbpr3Pnzrrkbj1GQpPv1KmTri1bhT/u
RReKbosIMk2P9JA+DAaeuTshgbcvVQIFCxbMkyePGLcrAd/XEBIXWOXc3hes
6Xti3kxJImMdxQTR9ztr7p6WltaqVSso8OLzMHTPZvzhfLJNai1icSz/Fy5c
WKZMGVHXRYdXnzPlypWbM2eOzTP09V/c4++Atu53uJ2Q/CrSQ+ycU6RIEfHf
rgmCBJiXCCGEkF8lIyOjY8eOS5YsCTyb7SDzWTjBtxa+8847orpDl7CuZkBK
Sorjrkc1f98xfkIhVbY6PHraoEGDGjdufODAAV+Td5waCYnZ3xIZsdwrWLAg
HpOPHj0qkXzuI4QQQhQxeldFS99VOevSjtuQBEFW+VauXFmhQgVrMCP+3vF7
yy23jB071qZXbVNV+gRUPKzKLbtWg0hPGz9+fM2aNXv37n38+HG7j9UmdrYe
kDhG9uA4TuEuueQSDLHDhw8HxuEVIYQQQgRoUHb/oH7ywFkuTkxtCkqFCGT2
7NlFihSxZjPiNBIKfO3atX/++WdJxhf6QZi6pU8xK1asgLiefvppPA0F5nnQ
2Z2UsH41ExDnxYro7fLZOOrthBBCiGJ3EepKe58+fZYvXy5r7/a7Jwlot6A6
g/g5xNNNnTp1rIcZkDNnTvxeddVV06dPT09P172Z4hI/SNTnHeskJDBbAEQa
0N6bNm3avn37Y8eO6Sn/jnCuCkzOFY5mftlll1k7mVjJCCGEkMTEuprBzTE1
NfWNN94YMmRIYiqcFtXA9ZkFqvusWbPKlCkjX2VSc3dx816yZElxFGnNihJT
37DbJTRS1HiR6vHjx1955ZUaNWp88cUXoT0tMeWWUIRu6L7xxht1vZ0QQggh
FsdwXb9cP3z48NatW8+YMUPiE9b8I9RgA5EDBw684oor1GZGdq2KDXzHjh1F
VlBNz0WRzz2heyLsX92y+t133w0ePHjr1q1Hjx61X+WwPjlJHON8Kg5/S5Uq
pfbthBBCCFHs5lNddc/IyJDwunXrKleu3K1bt23btiXs4qd1qum4lj106FBK
Soqaysjae+7cufH7pz/96YsvvggSddHY+fiX4y3fHg2MQZE9lJhyS0C0D2iL
P/DAA/6+1IRdNyCEEEIUx4bBxoj/ZNxVP/vssx49emzfvj0B75sqE/uVtyB6
kXDcuHH58+eX9XYxfZffiy66qG3btidOnEhMFdRqYlaAQaY5ll1a1/hQ6xoS
xzhPavgtVaoUxs7Bgwc1PmH9qRJCCCG/BbXoFnuGffv2paSk9O3b1/ct49xM
rbVq3KteWvddu3a1b98+KYyrrrpKvtBkv3ilXxd1XCBKIAH3/woiHAhzyJAh
si3RftEpiHYIT+KJXzJBuFatWhg46uc/ceYTQggh5Pcht0jRncRFJFSmWbNm
WbVctCnVqXx35XGsf6pGoTbbBw8eXLhw4ZVXXpktWzZde1fPM+IoMoiI0eqi
vg1AYiql9vMB6G+NGzeG8jZt2rTAPOlIGjqciSfUbsoa7DVp0gRDJi0tzdHb
CSGEEBKK3Ct1yd3+tcYMorWG6udxrLRbxDZbFQyEX375ZX+zqnibee2116yB
t6O063qjGnsnFFJr6WwQyLx58ypUqNCiRYuNGzdqGsc8nsQN+mUuDIGXXnop
dL2dEEIIIbFwFjYd1yi4mW7bti0tLc1GQq2C3iXKZ9zr7X4FVQNfunSp7K2z
H2nKlSsXfm+//fbU1FQ9RZfr415cvwXrjzSIvMLo2bPngw8+OGLEiCCi1PEr
PPGH/4KpQYMGGCm+fTubnhBCCMkaqFJ6uxRbBb3PDhw48Nlnn920aVMQpnbG
vb2H7qz0PRZCGpDbsGHDChYsqJ9VVbcz2bNnf/PNNx0dlQTRlswaXrRoUd26
dZs3b75hw4aAylvcgYFghwCezkqXLs19qYQQQshvx/nM5b8i2ASidi5fvrx9
+/ZQ4H/66acg2oQmAe2Q7fdAxRvPnj17qlWrpqq7epuBWlKiRIl169aJuFRW
Cbvqro+HdsuAfXEzZsyYNm3aQIc/h4Ukpx37FKad/5577hE7GScNH9kIIYSQ
LLCbJXXnYOAZYI8ePbpp06Zr165VRSsR1scc34ZBmPW1KOR4rsmbN6+YuCvi
7L1OnTorVqwIjKwSVjmxHiCdPc7yNLR9+/YNGzYk7KNNXOL4VpWGvummm2jf
TgghhPx2rO8O9SHjaOOiuErk999//84777zwwgurV68OEmDd2NEl/E8LqUov
8enp6ZUrVxZbd2B1+GzZsg0ZMiQIc8iTUNgHwyBaoxMcR0YkPtBXVOo4qFKl
ShdddNH+/fs1QZCog4IQQgg5E4gqNXz48Lp1644ePTowqvtv0bLi/qP2onV8
/fXX1apVg06im1WV4sWLz507NzCu3YNolYbfi/TRrwwEnmt3+0qIKt95i2Mn
I83XvHlz6u2EEELIWWDr1q3Q2zdv3hyYW62u3qtaJfbMjnuQONZLpWqiTOLp
pkCBAmoqAxVFdfjq1asH0S87EtMn5K+ib3m6du26cOFCu00A0lPf+PQ/c0Gg
bmblUxEvvfQS9XZCCCHkzGG/WS9bMu2HQa3Ng/+R0AT55JBqlUHkk6ApKSnW
VEbV+Ouvv37q1KnON4ZEvM7W4ERGtbj58+fXrFnzww8/lG+EBebxUB554rtT
xQF+x27Xrh31dkIIIeSM4tu06web1OQ71okJolypQIJMB/i33nqrqOtq8S5W
NE888cTevXslJc25fawd0aZNm5o1a9agQYOPP/7Y9jfqexcQ+mSK2eCVV16h
3k4IIYScaURfkpfdqoqnpaV17tx50qRJgXEZIR4jrSFNItyXrSd8/dutWzdr
6C56uwTefvttKxZ5kUEUtYfJyMhYvHjxc889V6NGjfnz58tR3TedCF3rAiX0
gb1Lly7U2wkhhJAzh39v1dV13Jo//vjjunXrDh48eN++fc5ZieOcWU1fHO0d
v3jSqV+/PnQVce2uljMI33nnnfJlKxrJWKzRkdjDiFR79OgB1X3IkCEQKfW9
CwK7DUGe6LneTgghhJxpdPEziPbFHUQWio8cOTJu3Li+ffvKKqhut3RSxiv2
8USRz6oGmW8o+vfvf8kll0BdT05OliV32a+Kv/Xq1Ytv+fwO/J4mwtyzZ0+r
Vq0kkiZG5z/WfE4exLp160a9nRBCCDnTWHMXZ7epxO/YsSM1NbVPnz4bN260
y6RBvKtYvtbhxEj18fvoo486SruECxcuvGTJkrNX4gsB6UKi+Dk27XZBPu6/
JnDhYt896YzRq1cv9Hn5BLMmS5AtMIQQQsg5RFQmuTvr2vLf//73atWqzZ49
W5PhpmxNvhNnp6rgyGf8+PG5c+cWvV3N3WX7auvWrXfu3KmnqJSsI0QhoQRI
LlycjoqO3b17d3T1Xbt22UiutxNCCCFnBzWhUdV08eLFLVq0+PjjjwOz5ibK
p786GvcqqNquiyggH1S5c+fOYugOjV3M3eVvcnLysGHDgkzrGlVp1OUmF5nJ
BYS1b8/IyEDvlfX27du3O2nOXRkJIYSQhMBZFsZ9WfVJqJ3r1q0TTf6XCPZE
iYn7+7XzlU+nviNHjrziiivUZiZXrlzqMfLBBx9csGCBk5v9rNVZKT4hpxPp
wAMGDEAP//HHHzU+vicBQggh5HzDqqa6H1NQZd6mkUDcLxpb836rdYvlNh5t
EB47diz0dllyF6VdbGYQ8/rrr9vc7Jet4v6Rh8QBzgOmjPdOnTqhe4sbJW5K
JYQQQs4magTiKOHOV1ODiCcQcSLx7whBYtyvVXUJ1WGCiHAglvLly6v2rhtX
L7roovvuu2/ZsmX62iKI9pFIyPmPPMsHkQ6cnp7epEkTdO/169cH0Xp7IswG
hBBCyDnE6qJyd5ZvhqofSOsGZO7cucOHD9+yZYtzg45jFdRxlCH7c53NubJy
DolNnjxZ1HX17i7gb9u2be3GXjkxjuVG4gndlCG0bt0a3XvdunUBP31LCCGE
nAvs94Y0JsjcXKmBtLQ0qO7Dhg374YcfgsidWhPEMVBOYi226wOOSG///v3i
KFL9zOhHmooWLTplyhRdt6TSTs5/nHdwMgrwEIruvXbt2oB6OyGEEHIWcfal
6v3XiXdYvXp1586dBw8efOTIkSySxQHWHAi/jmMZ6wxfVuZFz5k5c2aZMmVE
YxcFXtX4kiVLisIT91sDSBzgfy4ZD6ovvvgi+vP8+fM1GV0kEUIIIecnslac
np4+dOjQ9u3bz5kzR/R8vXc7X0W3Z2n4XBX+LKC1btq0qf1Ck2jvsnH1ww8/
dM6KtdWXnmfIOUc9xEovFX8yixYtcuIJIYQQcn4iK8/ff//9yy+//MEHH8jf
48ePy9FYzlIS5/4u+syWLVuqVKmSFE3OnDnxW6xYMdF81O7dauzOer798BMh
Zw2nB8oDaa9evXLkyLF06dJzWTJCCCGE/BrW6F1+cSufMGGCmLsHxh4epKen
B56urmt0cYlUTSquCvn7779/0UUXJScnq4tIMZvJli1bgwYNjh49GmRKScKq
wKug1D6HkLOM8wIoIyPjr3/9K3rvrFmzJEYf0hPnqZwQQgi5gLAG7dYdovx1
/BzqPT2+zWME61RTnPPIX8ikVatWUNcvjqBmM/i94oorBgwYYDUfK1IraupF
5Owjlm/6Fx2yUaNG6LczZszQmKy3wxBCCCHkXKEeUUQ/t+4NJWwXh62uftJw
lst8NkH1xV2k/LVPMatWrSpWrJh6mMmePbvq8OXKlZszZ06Q+cLCyo2L7eTc
Yl2e4vftt99OTk52PgecCE/lhBBCyIWFY+/qrLOJb3P8jhkzZuXKlfYs3zFF
XOI4nFFDF/XxfvTo0Z49e+bMmVO/0JQrVy41fW/UqJFmBQXeLrz7jjoJOdNI
D7RfDcZvv3790FdnzpwpDpS42E4IIYSct4j+6Xt+s+Gffvqpffv2DRs23Lp1
q6TUzxXFvfLpWwrZBXNRv3fs2FGlShX5JJMq7aLA33DDDaNGjRK38NbShpCz
T+gX1rp164aOOmXKFBvpJyaEEELIuUWtXOTVue/vXdffEJgwYUKzZs2c9+mJ
gFVgRAO3bxz0QWbMmDFXXnnlxRdfrN7dZdcqeOKJJzZv3mwTn4NqEJKJ7E+R
3vjiiy+ii44dO1YdwForGkIIIYRcoBw/frx79+6vvvrq6tWrrQ18YJbp9L6f
mK/aGzZsaJV2cfAO8ufPP3r0aGuooHqRmNBrDtSXyBnC341y4sSJ+vXro6/i
qfNclYoQQgghZwJRO6dMmZKSktK3b19ZfLaagNrPOG4rEopZs2aVKFHCfqFJ
F97vuOOO5cuXB94nKfVlhwqQkDOBDk8dtmLfPmjQIN2TnphP3IQQQkj8Ic7M
Dx8+PHz48BUrVsgLd1HglTj26J411ps91CExd4fSrg7eJdC2bdvA7HWVLasi
SSrt5IxiHxVFUZ8wYQK65bBhwwLzJijWp9YIIYQQcqFgb+X6nSb5q6q7Kq6J
rL0fOXIEgZUrV9aqVUt3qorSLpYzt956Kx58gjCrGLrgI2cO36UM+mFycvLI
kSMD0/fsgjwhhBBC4gBdaZdbvCrqCXvHlwVzZ1vfhAkTLrnkErWZUQU+R44c
5cuX//bbb4PIxoFzWW6SYFg3pJ988gl648CBAwPzfeSEHcKEEEJI3KD72pyP
Mcky3e7du1etWiVLzY7lTEIhfnhsYN++fU2bNlUvkdZdZHJycrdu3exHr6gy
kTOEHZW6eXzYsGF4kOzTp0/APdGEEEJIPCL7KPXWL2zatKlWrVqNGjUS1T2R
8T9eAwUe8qlUqZLq7bICD70dvw8//PCKFSuC6IVQQs4E6stUHionTpyIrti1
a1fHtSn7ISGEEHJBI+q6KqX2zi4rxtAE+vfv/+STT37++eeJed/3TYasHPC3
R48eulNVfkWBz549e5s2bY4dO5aYciNnHxnLixYtQvfr0KFDgnxJjRBCCElw
1I+K2MeuX7/+9ddfHzRo0A8//CAJ7Av60I82BvG+j1VqB7Vcfp944gn1Dykf
WhUd/vrrr58zZ06Q6bfHcethv9nKRVHynxLanZYvX46+161btyD6ywK01yKE
EELiHlHRoZp+9dVXlSpVGjlypLyOR7yz+JxoOqdIRhRyyKdXr15iJJMzZ067
XxW/tWrVOnDgQBBt8W6/bCUBxzcIIb+KdRQjajyeE9HrevfuHURbyFBvJ4QQ
QuISUSAd2+wTJ05s3bq1SZMmXbp00U+6SDLr6jBxnEWrsw5BHGi3aNFCF96t
z5mCBQuOGDEiiIjL6u2aiciQLt/Jf4SjjaPzfPnll+hvYt9OXZ0QQghJENTb
DFTNw4cPS2RGRsaOHTugbeqHGp2zRPOMb9Xd14jUDAa/06ZNK168uP0wk/yC
atWqrVq1Ksh0TeOYEsWxxMiZwNkoLYFZs2bJt8DsMju7FiGEEJII6B3/X//6
l9XVHRN3RwWN748NORt41ZemFcKAAQNkvV28zajqjkCHDh1UPqLwq+/N+N4U
QM4Q1ubq888/Rzdr2bKlHa3sV4QQQki8YrVuNaDVtXfRAURvd2xp9MRE0BNQ
WbEXsjbGau6C3zVr1pQqVUrVdbF7hxqfPXv2u+66a/ny5b4ZA4RpfekTkjXy
6sc+XE+bNg3drF27dhIjfYz2V4QQQkgco6/XHS+RzkK6JHvxxRcnTJhgXdAE
cb0PLtSPhz7XWCUKv59++mnevHlVe5fl99y5c+O3YcOG8vgjv0ePHj37dSEX
Lo4qLr1o8+bN6FqdOnWKb1s1QgghhAjOIp7V3iXG8YiydOnSunXrtmjR4rvv
vpOY+LaTCaJ9v8gDS6ixsX5ftWbNmlDas2fPnhRNwYIFx40bFxiH+dS1yG/E
2q5rt1m2bNnFF1/cpk2bgJ5kCCGEEBIGFM4ZM2a88MIL/fr1k5hQncE+C0gg
Efy9S9XGjx9/7bXXiqmMmL6r0fujjz66fv36WKfH/UMQ+X3I87UdYhkZGdOn
T0ePat68uU0WUHsnhBBCSAQ1yT548GD//v1btmz5xRdf6NFYH2YK/RuviIoF
BT4lJUV0dajuorfrInz37t11l6tu9ZVf2jyQUNQuS+3YFy1ahAdDdDMnZYIM
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
Xz3LGfKazJ+UdNhKu9hRbG9VOgk4BbN/rfS01prAtoU/jdvctABo01hzV+jY
Vwdf2ty2U9nr2lrHml1lCtVr2bBKRj/GF1oep1TaFjaT0KbX+3uSaTK9lnZ1
p+TSgqpa2GvZKmj+jmBtz3RudnYI+5O8E++0r9V/nKLaSBW7TBFJZjTZYaVX
0WTOiLN6XVJ0P0+Kbvck05q2qydFj3SpjpVqkmkFrYhcV2SoPce5pVrJ+B3G
9gpbGDthCnaKSIru51IM7So6HmVGdZpVZz+/bE7/SYrubP4ErjqPM4S16bU6
KjdnKnDuXypz1T+tBqKV9XUJ6+UvKWzatMVTvUsi7b1DLiSlde4OWjVtbltO
R5JWmHpucgRNo4W005H90KczYdpKQTPxK+gMQOdmmhTdk52wry0nRffGJDO4
/Fldx6ykzx5Bwipev/M7N52kTGmHalySxhn4WTS03qCt0qhzGi4hBdMYKzH/
c6t6lgZs906KnqKTooenUx2rZjgDJymzMzh3jaQY974ko4PZBM6solfRCcqZ
J/UWL/M2ULVW70f2md22kZyolcWIkHUGWQ3QR84kcydKMtoCRJ2SkvL77GSC
zPfO33333ebNm3/66afvv/9+y5Yt8oLy22+/XbVq1TfffCOvw5Bm/fr1OPTj
jz9u27Zt+/bt+N25c6ccxe+6detw9MCBA3gcwKE9e/YgLDYbEj5x4gRSHjx4
EDmsXLly79696enp8+bNGz9+/OrVq9PS0nbt2oUrrl27NiMjY/jw4R988MHX
X3/dr1+/YcOGIf3x48cPHz6M9LNmzUpNTV2wYMHYsWOnTp2Kc3Hp5cuXL1q0
6J///OeyZctQZpREckPkmjVrVqxYgUD37t2ffPLJa6+9tkKFCo888kjp0qUr
V66MwB133FG+fPmKFSvef//9iOnVq9eECRMaNGhQpUqVGjVqfPnllyIrEXLN
mjVtV8TjP0584IEHbrvtNuSMPO+++2482+LB4a677nr88cerVq364IMPVq9e
/dlnn61Tp87DDz987733Is2dd95ZpkwZXLpUqVLIpEiRInh6QqB48eLXXXdd
iRIl8HTfsmXLpk2b1q5dGwFZzJe3G/jbuHHjp59+eujQoXiUQCHfeOONSZMm
ff755/IKD+GZM2dCUG+++WbXrl2/+uorSAxHkX7w4MEQae/evQcMGDB69OjJ
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
t9vJ/H9NeMRF
      "], {{0, 654}, {1000, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
     Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {1000, 654}, PlotRange -> {{0, 1000}, {0, 654}}],RowBox[{
     RowBox[{
      "Visualization", " ", "of", " ", "the", " ", "Margin", " ", "for", " ", 
       "a", " ", "max"}], "-", 
     RowBox[{"margin", " ", "classifier", " ", 
       RowBox[{"(", 
         RowBox[{"Adapted", " ", "from", " ", 
           ButtonBox[
            Cell[
            "[1]", "Citation", Editable -> False, 
             TaggingRules -> {NoteData -> RowBox[{
                  RowBox[{"Shawe", "-", "Taylor"}], ",", " ", "John", ",", 
                  " ", 
                  RowBox[{"and", " ", "Nello", " ", 
                    RowBox[{"Cristianini", ".", " ", "Kernel"}], " ", 
                    "methods", " ", "for", " ", "pattern", " ", 
                    RowBox[{"analysis", ".", " ", "Cambridge"}], " ", 
                    "university", " ", "press"}], ",", " ", "2004"}]}], 
            BaseStyle -> "Hyperlink", ButtonData -> "00004F53"]}], ")"}]}]}]},
  
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline, ImageSize -> 560], DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"ImageSize", "\[Rule]", "560"}], "}"}]}], "]"}]& )]], "Text",\

 CellGroupingRules->"NormalGrouping",
 CellChangeTimes->{
  3.60282932443465*^9, 3.602829459585412*^9, {3.602829615830469*^9, 
   3.6028296800535097`*^9}, 3.602829776759707*^9, 3.602829878809217*^9, 
   3.602829946833767*^9, 3.6028302436945143`*^9, 3.602831647992091*^9, 
   3.602832320556579*^9, 3.6028424523869753`*^9, 3.6028474678887873`*^9, {
   3.602847550314584*^9, 3.6028475546451273`*^9}, {3.637661292976716*^9, 
   3.6376613178604107`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 StyleBox["Max-margin classifiers select ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}], ")"}], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" maximizing the minimal margin",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.602777670431033*^9, 3.602777770938829*^9}, {
   3.602779018150324*^9, 3.6027790184155617`*^9}, {3.602829844113287*^9, 
   3.602829851636424*^9}, {3.6028328907170763`*^9, 3.6028328919613237`*^9}, 
   3.6028424299513197`*^9, {3.602847506635034*^9, 3.6028475141755257`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubscriptBox["max", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    SubscriptBox["g", "S"], 
    RowBox[{"(", 
     SubscriptBox["f", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["max", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    SubscriptBox["min", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"], ",", 
        SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
    FractionBox["1", 
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
    SubscriptBox["y", "i"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}],
  FontSize->36]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.602779364326687*^9, 3.602829927512095*^9, {3.6028430195327997`*^9, 
   3.6028430383299103`*^9}, {3.602847501308712*^9, 3.602847504224352*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: hard margin", "Subsection",
 CellChangeTimes->{{3.6000018233736467`*^9, 3.6000018292632837`*^9}, {
   3.600511116033592*^9, 3.600511153981496*^9}, {3.6006944219201727`*^9, 
   3.6006944244358273`*^9}, 3.600715886410987*^9, {3.6027799698393373`*^9, 
   3.602779978171513*^9}}],

Cell[TextData[{
 "we rescale ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]]],
 " until: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["min", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold"], "i"], ",", 
         SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]], 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "=", "1"}], 
   TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.600006296152946*^9, 3.600006338062229*^9}, {3.60000639992452*^9, 
   3.6000064036079407`*^9}, {3.600006887328807*^9, 3.600006926233221*^9}, {
   3.600676541491768*^9, 3.600676547884078*^9}, {3.600694211443815*^9, 
   3.6006942163401327`*^9}, {3.600694298117321*^9, 3.600694382885421*^9}, {
   3.600694645185343*^9, 3.600694651248549*^9}, {3.6007117973416147`*^9, 
   3.600711803007615*^9}, {3.6016401587486763`*^9, 3.6016401600606127`*^9}, {
   3.60171018218371*^9, 3.601710227189*^9}, {3.60171045042937*^9, 
   3.6017104846224413`*^9}, {3.602779230665099*^9, 3.6027792306652603`*^9}, {
   3.602842791275796*^9, 3.6028428168335323`*^9}, {3.6028429745133963`*^9, 
   3.602842977092854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   SubscriptBox["g", "S"], 
   RowBox[{"(", 
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], ")"}]}], "=", 
  RowBox[{
   SubscriptBox["max", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   " "}]}]], "DisplayFormula",
 CellChangeTimes->{
  3.602779586496174*^9, {3.602779871064268*^9, 3.602779911523912*^9}, {
   3.6028300482619057`*^9, 3.602830070437084*^9}, {3.602830170496189*^9, 
   3.6028301738986273`*^9}, 3.602833823355976*^9, {3.6028426980011683`*^9, 
   3.6028427096567783`*^9}, 3.602842739765107*^9, 3.6028433423021507`*^9}],

Cell[TextData[{
 "instead of maximizing of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]], 
   TraditionalForm]]],
 ", we can ",
 "minimize ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftDoubleBracketingBar]", 
     StyleBox["w",
      FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"], 
   TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006949860783*^9, 3.6000069561934233`*^9}, {3.600694704309061*^9, 
   3.6006947628516483`*^9}, 3.602832288074873*^9, 3.602842820302107*^9, {
   3.602842924513113*^9, 3.602842926658386*^9}, 3.602843388313611*^9, {
   3.6028476029525642`*^9, 3.6028476111889467`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\[LineSeparator]",
   FontSize->36], 
  RowBox[{
   StyleBox[
    RowBox[{
     SubscriptBox["min", 
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], ",", "b"}]], " ", 
     StyleBox[
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold"], "\[CenterDot]", 
       StyleBox["w",
        FontWeight->"Bold"]}],
      FontColor->RGBColor[1, 0, 0]]}],
    FontSize->36], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", ".", "t", ".", " ", 
         StyleBox[
          SubscriptBox["y", "i"],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}],
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox["\[GreaterEqual]",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["1",
        FontColor->RGBColor[0, 0, 1]]}], ",", "   ", 
      RowBox[{"\[ForAll]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], 
           RowBox[{"i", ","}]], 
          SubscriptBox["y", "i"]}], ")"}], "\[Element]", "S"}]}]}], 
     "\[LineSeparator]"}],
    FontSize->36]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60000667883209*^9, 3.6000067752439413`*^9}, {
   3.6000070814275303`*^9, 3.600007111840486*^9}, {3.600007427356236*^9, 
   3.600007427719923*^9}, 3.600523071368231*^9, {3.602832292410371*^9, 
   3.602832292998781*^9}, {3.602843117797524*^9, 3.602843122721136*^9}, 
   3.602843317988234*^9, {3.602843385966074*^9, 3.602843391240788*^9}, {
   3.6028434427793303`*^9, 3.602843445486044*^9}},
 CellTags->"eq:max_margin_hard"],

Cell[CellGroupData[{

Cell[TextData[{
 "a ",
 StyleBox["quadratic objective",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["function",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ", with ",
 StyleBox["linear constraints",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[": ",
  FontWeight->"Bold"],
 StyleBox["Quadratic Programming (QP)",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, {
   3.600694808728223*^9, 3.600694817587091*^9}, {3.600711841081717*^9, 
   3.600711856272368*^9}, {3.601710669482737*^9, 3.601710670177889*^9}, 
   3.601714869511649*^9, {3.60277961531678*^9, 3.602779657191567*^9}, {
   3.602779727098364*^9, 3.602779728195608*^9}, {3.602843588043498*^9, 
   3.6028436045046673`*^9}}],

Cell[TextData[{
 "it can readily be ",
 StyleBox["solved using the ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" QP solver",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, {
   3.600694808728223*^9, 3.600694828096983*^9}, {3.601710682464815*^9, 
   3.601710690980811*^9}, {3.6027796427552347`*^9, 3.602779646230175*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: hard margin (code)", "Subsection",
 CellChangeTimes->{{3.6000018233736467`*^9, 3.6000018292632837`*^9}, {
   3.600511116033592*^9, 3.600511153981496*^9}, {3.6006944219201727`*^9, 
   3.6006944244358273`*^9}, 3.60071588303222*^9, {3.602779982788898*^9, 
   3.602779987974244*^9}}],

Cell[TextData[{
 " implemented in Mathematica using just a ",
 StyleBox["few lines of code",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600523190135332*^9, 3.600523306766039*^9}, {
  3.6005234114043703`*^9, 3.600523464140204*^9}, {3.6005235065280943`*^9, 
  3.600523538476019*^9}, {3.600676656209612*^9, 3.600676761650674*^9}, {
  3.600694867666514*^9, 3.600694867677504*^9}, {3.600694900439609*^9, 
  3.6006949045153646`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainMaxMargin", "[", 
    RowBox[{"fTr_List", ",", "yTr_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "nTr", ",", "fTr2", ",", 
       "d", ",", "w", ",", "v", ",", "b", ",", "i", ",", "sol", ",", 
       "cnstr"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"cnstr", "=", 
       RowBox[{"And", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "<=", "0"}], "&"}], "/@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fTr", ".", "w"}], "+", "b"}], ")"}], "yTr"}]}], 
            ")"}]}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"w", ".", "w"}], ",", "cnstr"}], "}"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"w", ",", 
           RowBox[{"{", "b", "}"}]}], "]"}], ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\n", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600523181274065*^9, 3.6005232173178873`*^9}, 
   3.601626930898904*^9, {3.601635822601293*^9, 3.601635836154146*^9}, {
   3.60172080281886*^9, 3.6017208112794313`*^9}, {3.602844579517969*^9, 
   3.602844582012361*^9}, {3.602852606599763*^9, 3.602852610421029*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testMaxMargin", "[", 
    RowBox[{"model_", ",", "feats_", ",", "labels_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "b", ",", "nTe", ",", "d", ",", "pred", ",", "acc", ",", 
       "score"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTe", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "feats", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"model", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{"model", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"score", "=", 
       RowBox[{
        RowBox[{"feats", ".", "w"}], "+", "b"}]}], ";", "\n", 
      RowBox[{"pred", "=", 
       RowBox[{
        RowBox[{"Sign", "[", "score", "]"}], "//", "N"}]}], ";", "\n", 
      RowBox[{"acc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", ">", "0"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"pred", " ", 
              RowBox[{"labels", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
           "True"}], "]"}], "/", 
         RowBox[{"Length", "[", "labels", "]"}]}], "//", "N"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{"acc", ",", "pred", ",", "score"}], "}"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.6017110038019657`*^9, 3.601711010652872*^9}, {
  3.601714627707264*^9, 3.6017146410338793`*^9}, {3.601724230057878*^9, 
  3.601724230922812*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: hard margin (demo)", "Subsection",
 CellChangeTimes->{{3.6000018233736467`*^9, 3.6000018292632837`*^9}, {
   3.600511116033592*^9, 3.600511153981496*^9}, {3.6006944219201727`*^9, 
   3.6006944244358273`*^9}, 3.600715881279356*^9, {3.602779999777031*^9, 
   3.602780005312848*^9}, {3.602831256737609*^9, 3.602831258486665*^9}}],

Cell[TextData[{
 "use the function ",
 StyleBox["createData", "Code"],
 " to draw an arbitrary training set as you wish"
}], "Item",
 CellChangeTimes->{{3.600523190135332*^9, 3.600523306766039*^9}, {
   3.6005234114043703`*^9, 3.600523464140204*^9}, {3.6005235065280943`*^9, 
   3.600523538476019*^9}, {3.600676656209612*^9, 3.600676761650674*^9}, {
   3.600694867666514*^9, 3.6006948945188427`*^9}, {3.600695054620736*^9, 
   3.6006950654690847`*^9}, 3.600696255093216*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.599821879624202*^9, 3.599821882910767*^9}, {
   3.5998374136334047`*^9, 3.599837414563703*^9}, {3.600524449261044*^9, 
   3.600524449764729*^9}, 3.6005251182019*^9, {3.600696206358996*^9, 
   3.6006962513542147`*^9}, {3.600696861707651*^9, 3.600696883919842*^9}, {
   3.6007155785163383`*^9, 3.60071557980232*^9}, {3.602771076500245*^9, 
   3.602771102576363*^9}, {3.602780065209391*^9, 3.602780074277628*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$635 = MousePosition["Graphics"]; 
     Private`p$635 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$635], 2], 
          Union[
           Partition[Private`pt$635, 2]]}, 1]]; 
     If[Private`s$635 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$635}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$635}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$635 = {}; 
     Private`s$635 = Private`s$635 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.600020789808509*^9, 3.600020856659668*^9, 3.600021064090733*^9, 
   3.600021134472349*^9, 3.600025702389955*^9, 3.600026032842807*^9, 
   3.600026264079362*^9, 3.600026352841942*^9, 3.6000264126599073`*^9, 
   3.6000266007209597`*^9, 3.600027976298297*^9, 3.600028028405682*^9, 
   3.600176728446885*^9, 3.600181734032493*^9, {3.6001820217877293`*^9, 
   3.6001820304202747`*^9}, 3.600183345188478*^9, 3.600193136661227*^9, 
   3.60019316869851*^9, {3.600193335742634*^9, 3.600193344481193*^9}, 
   3.600438694419705*^9, {3.600439402461076*^9, 3.6004394069642553`*^9}, 
   3.600439466620039*^9, {3.60044152359057*^9, 3.600441528715617*^9}, 
   3.600450816131914*^9, 3.600451015125469*^9, {3.6005233399931498`*^9, 
   3.6005233509012213`*^9}, {3.600523680628913*^9, 3.600523704957892*^9}, 
   3.600524451211219*^9, 3.6005249111054897`*^9, 3.600524941735911*^9, {
   3.6005251156066513`*^9, 3.6005251187154427`*^9}, 3.600525168965639*^9, 
   3.600525292059767*^9, {3.600525322085216*^9, 3.600525330520967*^9}, 
   3.600526153903242*^9, 3.600526235268276*^9, 3.600526277068296*^9, {
   3.600526507556377*^9, 3.6005265656547403`*^9}, 3.600527230231511*^9, 
   3.600527878259603*^9, 3.60052839679093*^9, 3.600528963692533*^9, 
   3.60054517201192*^9, 3.6005464231918573`*^9, 3.600547776709139*^9, 
   3.600602781421591*^9, 3.600603522757304*^9, 3.600603576649341*^9, 
   3.600603945564912*^9, 3.6006129983382263`*^9, 3.6006138118956957`*^9, 
   3.6006326440948353`*^9, {3.600671117185631*^9, 3.600671117554494*^9}, {
   3.600671642124771*^9, 3.600671642372834*^9}, {3.600671803610708*^9, 
   3.600671803934524*^9}, 3.600671901390617*^9, 3.600672265372055*^9, {
   3.600672525750431*^9, 3.600672526281946*^9}, 3.600694914187879*^9, 
   3.600694949331822*^9, {3.600696062301775*^9, 3.60069606868992*^9}, {
   3.600696850376553*^9, 3.600696870878538*^9}, 3.600710907345627*^9, 
   3.600715589352305*^9, {3.600717122309847*^9, 3.600717123582593*^9}, 
   3.600717168322547*^9, {3.6007173415129013`*^9, 3.600717342740521*^9}, {
   3.600717447544421*^9, 3.600717447830474*^9}, {3.60163618190201*^9, 
   3.6016361833588057`*^9}, 3.601636533871214*^9, {3.601638066308416*^9, 
   3.601638174974532*^9}, 3.601638233935257*^9, {3.601645629414345*^9, 
   3.6016456297673264`*^9}, {3.6017090050377703`*^9, 3.601709005534792*^9}, {
   3.6017220722744837`*^9, 3.601722072720339*^9}, 3.601725798431281*^9, {
   3.602768713748472*^9, 3.602768714273127*^9}, {3.602769064457111*^9, 
   3.602769064871573*^9}, {3.602769133751384*^9, 3.602769135089284*^9}, {
   3.6027691901271544`*^9, 3.6027691905286293`*^9}, {3.602771059094983*^9, 
   3.602771097115547*^9}, 3.60277123113449*^9, {3.6027712629682627`*^9, 
   3.602771291570218*^9}, {3.602772987031597*^9, 3.602772987458036*^9}, 
   3.60278007533943*^9, 3.602831647490899*^9, {3.6028447602527*^9, 
   3.60284476062035*^9}, 3.602849775528521*^9, 3.60285276441978*^9, 
   3.60285595634044*^9, 3.620019099529943*^9, {3.637589670412879*^9, 
   3.637589670818719*^9}, 3.637590405110794*^9, {3.637590581659368*^9, 
   3.637590618275344*^9}, {3.637661437821149*^9, 3.6376614382220716`*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"createData", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot", ",", "p", ",", "clr", ",", "s", ",", "pt"}], "}"}], ",",
      "\n", 
     RowBox[{
      RowBox[{"xPos", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"xNeg", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"plot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"clr", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"s", "=", "1"}], ";", "\n", 
      RowBox[{"EventHandler", "[", "\n", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"plot", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Dynamic", "[", "xPos", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
               RowBox[{"Point", "[", 
                RowBox[{"Dynamic", "[", "xNeg", "]"}], "]"}]}], "}"}]}], 
            "}"}]}]}], "]"}], ",", "\n", 
        RowBox[{"\"\<MouseDragged\>\"", ":>", 
         RowBox[{"(", "\n", 
          RowBox[{
           RowBox[{"pt", "=", 
            RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}]}], ";", 
           "\n", 
           RowBox[{"p", "=", 
            RowBox[{"Union", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "p", "]"}], ",", "2"}], "]"}], ",", 
                 RowBox[{"Union", "@", 
                  RowBox[{"Partition", "[", 
                   RowBox[{"pt", ",", "2"}], "]"}]}]}], "}"}], ",", "1"}], 
              "]"}]}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"s", ">", "0"}], ",", 
             RowBox[{"xPos", "=", 
              RowBox[{"Union", "@", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"xPos", ",", "p"}], "}"}], ",", "1"}], "]"}]}]}], 
             ",", 
             RowBox[{"xNeg", "=", 
              RowBox[{"Union", "@", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"xNeg", ",", "p"}], "}"}], ",", "1"}], "]"}]}]}]}], 
            "]"}], ";"}], ")"}]}], ",", "\n", 
        RowBox[{"\"\<MouseClicked\>\"", ":>", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"{", "}"}]}], ";", " ", 
           RowBox[{"s", "=", 
            RowBox[{"s", "*", 
             RowBox[{"-", "1"}]}]}]}], ")"}]}]}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601708954005268*^9, 3.601708996960103*^9}, {
   3.601709845984437*^9, 3.6017098471362123`*^9}, {3.602768953711218*^9, 
   3.602768954682788*^9}, {3.602769246294796*^9, 3.6027692477001257`*^9}, 
   3.6027710268098392`*^9, {3.602771115245316*^9, 3.602771115383361*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getTrTeData[30]", "Code"],
 " to obtain the 2-d coordinates of the points: 30% training 70% testing"
}], "Item",
 CellChangeTimes->{{3.60069518516295*^9, 3.600695219766588*^9}, {
  3.600695256227803*^9, 3.6006952876801653`*^9}}],

Cell[TextData[{
 StyleBox["runMaxMarginExperiment[fTr,yTr,fTe,yTe]", "Code"],
 " to train and test the algorithm on the data"
}], "Item",
 CellChangeTimes->{{3.60069518516295*^9, 3.600695193321788*^9}, {
  3.6007110610349216`*^9, 3.600711065029958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"results", "=", 
  RowBox[{"runMaxMarginExperiment", "[", 
   RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", "trainMaxMargin"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, 3.6006004425513983`*^9, {3.600603595693391*^9, 
   3.6006035959711657`*^9}, {3.600671920796858*^9, 3.600671925004285*^9}, 
   3.601636231498809*^9, {3.637589909575707*^9, 3.637589909825876*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllHtIU3EUx9cws1pKBmYQ4Ts1ZqCpEMYZYrCsTFqZkrVhLbVkPpIRixY+
yPUYhJkwl5KPVjmTykdmk0uWNrNsmpLm2ubafJRtKrke0qhg5xfc/rhcPpzf
95zz+34v1z8jd7+QyWAwDvx5/r6tG/RJNUULVJxW0XBK3kW9V7ee70rUEzZ5
rYhz5g0Csk44sZReaSeM+iZ54q/V1wYB9cioR0Y9Mupbez/kP06wEj0y6pFR
j4x6buDlAodxjuiRUY+MemR9Ql/z3ooZanssNzSD30r6IZvECyzRZgvUuUu2
8Io/E6br6f7geZ6GE9Kz2065BdR/904vp1Jt2aVWwwwoQrgefrU2Mg/rqMc6
6rE/6sn9XPvgvl9jD5dJW9qoS2tK8sDTQOrIWKffh+TtYnp+dD36j4z79JYI
tu3w6ACNyuv6bLAZdM7F8C9GPShfT7bf0r0j/XA+nldPqpMuHJsmTO9P8nDp
kbE/8c/FEmV6maWxl+SD8/D7QJ7V9FwdGNdROB8Z/cc8cB76T8+T7h99H/QT
70Ofh/5hHc+jH3T/9vBPxvtXj8KNN3erV7p/hJ8RFk6usRnGvd+yU9NMUCNV
LsuRdkNOzkYZJ/U51S1yFDTGfAJmSsR8mnKa7BsWOCboWqf9L9/bvmwf1dAU
sBS7EkRVjyBE4KwWbTKDxCRvulnZDnEp+ceDwAwaZtSJQz9GwKeeVS5kDYMO
7P3ePrVUYaZEdiV8EvyCojx9q8Tke7GrxrNiss3Ez6XkZ8ltTAMshoZJeNMv
IOugZuLouT6Sjziav1yQOUINvDqrvWeww+nSmghp9BDlJS44oo23wRPHfHnH
qimYCxC1xM7fJ/4XDt8pE+5TwBmnG5tbbCV5dNrXPg0Wjf77H7nyqZi1VK2P
fAkXbey6rZGdJJ9RWUmRI2CM5MPI3vltwdgPDx+4ZdYG6eE3FDXM6Q==
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{56, 41, 32}, {40, 19, 15}, {72, 29, 62}, {22, 19, 12}, {
          41, 40, 32}, {34, 29, 8}, {41, 42, 11}, {24, 26, 16}, {78, 29, 
          61}, {28, 24, 16}, {31, 8, 12}, {35, 31, 11}, {52, 51, 29}, {19, 20,
           15}, {22, 24, 19}, {67, 38, 68}, {12, 19, 11}, {26, 24, 22}, {24, 
          20, 19}, {84, 35, 65}, {60, 35, 84}, {63, 32, 74}, {66, 56, 82}, {
          81, 55, 80}, {39, 55, 34}, {19, 40, 11}, {39, 34, 31}, {52, 53, 
          4}, {24, 28, 20}, {76, 50, 75}, {57, 50, 37}, {35, 39, 31}, {77, 52,
           79}, {11, 31, 12}, {42, 38, 11}, {38, 35, 11}, {37, 50, 32}, {31, 
          34, 8}, {29, 51, 8}, {51, 52, 4}, {61, 29, 72}, {40, 41, 11}, {32, 
          40, 15}, {37, 32, 15}}], 
         PolygonBox[{{69, 39, 35, 60}, {71, 42, 41, 70}, {62, 29, 34, 73}, {
          80, 55, 39, 69}, {65, 35, 38, 67}, {82, 56, 32, 63}, {79, 52, 29, 
          78}, {73, 34, 55, 81}, {75, 50, 57, 83}, {64, 53, 52, 77}, {70, 41, 
          56, 66}, {74, 32, 50, 76}, {68, 38, 42, 71}}]}]}, 
      {RGBColor[1., 0.9499999999999998, 0.7499999999999998], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{10, 5, 6}, {18, 17, 5}, {43, 6, 2}, {54, 45, 33}, {30, 
          10, 6}, {48, 47, 10}, {44, 43, 3}, {67, 30, 65}, {76, 48, 74}, {47, 
          13, 9}, {23, 21, 17}, {5, 10, 9}, {71, 36, 68}, {10, 47, 9}, {43, 
          44, 7}, {47, 48, 14}, {58, 30, 6}, {73, 46, 62}, {33, 45, 3}, {44, 
          46, 7}, {58, 43, 7}, {45, 44, 3}, {13, 47, 14}, {18, 23, 17}, {23, 
          25, 1}, {3, 43, 2}, {43, 58, 6}, {70, 36, 71}, {30, 36, 10}, {83, 
          14, 75}, {59, 58, 7}, {58, 59, 30}, {69, 7, 80}, {78, 54, 79}, {23, 
          27, 21}, {60, 7, 69}, {63, 49, 82}, {17, 21, 2}, {5, 17, 6}, {27, 
          23, 1}, {66, 36, 70}, {25, 23, 18}, {17, 2, 6}, {49, 48, 10}, {81, 
          46, 73}, {77, 33, 64}, {36, 49, 10}}], 
         PolygonBox[{{72, 44, 45, 61}, {68, 36, 30, 67}, {79, 54, 33, 77}, {
          62, 46, 44, 72}, {84, 59, 7, 60}, {61, 45, 54, 78}, {80, 7, 46, 
          81}, {82, 49, 36, 66}, {74, 48, 49, 63}, {75, 14, 48, 76}, {65, 30, 
          59, 84}}]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{64, 77, 79, 78, 61, 72, 62, 73, 81, 80, 69, 60, 84, 65, 67, 
          68, 71, 70, 66, 82, 63, 74, 76, 75, 83}]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.07948994252873565, 
       0.9179824150530227}}, {{0.008512931034482696, 0.9453216100353485}}, {{
       0.09651580459770104, 0.7758186011449284}}, {{0.14579741379310351`, 
       0.7512133256608352}}, {{0.2514008620689654, 0.7976899571307892}}, {{
       0.5118893678160918, 0.57624247777395}}, {{0.5189295977011494, 
       0.6145173507492061}}, {{0.5294899425287356, 0.3219879644383199}}, {{
       0.5294899425287356, 0.5680407192792523}}, {{0.5506106321839079, 
       0.4969588123252051}}, {{0.589331896551724, 0.2864470109612964}}, {{
       0.5963721264367816, 0.23723645999310988`}}, {{0.7054956896551723, 
       0.2946487694559941}}, {{0.7723778735632183, 0.9371198515406507}}, {{
       0.8216594827586206, 0.8086256351237194}}, {{0.8885416666666666, 
       0.7074706136891139}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.8539152298850574, 
       0.7238741306785095}}, {{-0.8292744252873563, 
       0.36299675691180866`}}, {{-0.5476652298850575, 
       0.7129384526855791}}, {{-0.45262212643678157`, 
       0.22903470149841215`}}, {{-0.4139008620689655, 
       0.1688884725372954}}, {{-0.3786997126436782, 
       0.6035816727562758}}, {{-0.2378951149425288, 
       0.6063155922545084}}, {{-0.18509339080459775`, 
       0.5735085582757175}}, {{-0.1287715517241379, 
       0.43954650286232094`}}, {{-0.10765086206896557`, 
       0.31378620594362217`}}, {{-0.07596982758620696, 
       0.17982415053022566`}}, {{-0.0020474137931034697`, 
       0.18255807002845825`}}, {{0.06483477011494254, 0.4149412273782277}}, {{
       0.06835488505747134, 0.22630078200017956`}}, {{0.08243534482758608, 
       0.1688884725372954}}, {{0.08947557471264367, 0.12787968006380662`}}, {{
       0.2126795977011493, -0.060760765314241516`}}}]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[2], PointBox[CompressedData["
1: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
SZPtOnT4B0Lg6xo=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[4], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxFlwtUzdkXx693QkIykkSDZjQVJUXsDKMQ8q4mKWNMiJokTYWSlAaTESmj
d0oppfSidurq/bp6P++9Pe7Vgx5EEv6/3/2vczpr3XXXZ53f73bO3t+9v7vF
R+z2/D6ew+F0Mx/2u3N+885gj0GMmb7lxI+nxPDm8ONXX1cPIK5sCvefI4Z1
f01Ou7V8jH3/PXRPdf4A1h6wb/qaIaJM9lfnOuxSse2nv+fZVKSVfqgfq92k
P4bndcKIke3dfzb3YUpfi1rRpjbQSij8oV26j76/MU5jborLWzwQneVhkyWE
lLOv1/w65S19/+qMdzfrE9+g5cz9c+rvjDHZ59mlynwR9WLlnV8LpfuzKJcv
bDm2W6oKTocfrVtW3IsPVgm8yp1EIF0zO9Qkvhd7XSfJHbcSwYMpL2xc/Hpx
6cMCw2ZPAWxaa7cy8kwvWndlftS6LqJMzusWUpL7Ua8XOQXaNudkO0G1QuA0
eK2HxsdKe73Ulr09yD8cnrExSEA5PeLhkLtmB+VzMiaawVoi+HKsp9JOpwfV
Zx1u2H6oA4ICmTW/B18X6G1POjPG83qLQoWpHaBTangkb7QbeZoy7avftgJz
unfyed3o2Fdz/Lx9MrR9tpDP3tWN2iF+Vw4biCHt1h/26z514TWzi5cftXdQ
JvcnTJ7flz9X7/fmLhwt25c1ciAJ+ofzxv2DXXi3ozR4QlcsHslz+17HeOz5
b0M/vjms0YVzZx997pXTDrFLDcLML71GL7O0aO/FzZCxJPraikExntXu3v7z
+k4Y9J6gdDFdjNu4S7FIJIIVrAAviGk+CxfJOI9aizHdw0S0MSEOlC7qCgam
iDChb65JpEcDZc0eblb03k7KfjO27zhaKYLMJFHMgp5O9CrZUXeX0wbFCTv8
e807MWGHkq8qr4hycLHRe8v7bXBMyARsQyd9P2SL6dvjEzvp/cQxC07eWNuB
XLk4HxnVBvgQdenA4dh2rPVyHM4R1kLJ+uuJzXvbab4nRnRt1FRox/FhQcZV
k0UQVhMgbf6ljcZng9SWKk9BG5o0aq5VP3UTG9e+vxefN7ZPmLxvPCk+e59J
G+oXBkaevJ6Fx7+53P6gIcSwqidDbs+qYKd/b+PmrQIaX/b4lzv5+N8isdrL
ch64Z237XBfHR1545GzDsg7IZPPhwKf5l+RDl4+mM6/rJFc3g5H4pyuOrS24
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
+vgfGmvK7g==
       "]]}, {}}, {}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"TRerr=0.% TEerr=9.38% Marg=0.126\"", FontSize -> 21, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{-1.1566451149425288`, 
   0.9871048850574713}, {-0.11543915527889309`, 1.0546783899646517`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.600525281598768*^9, 3.6005253136889677`*^9}, {
   3.6005253478571663`*^9, 3.600525371143449*^9}, 3.600525473291607*^9, {
   3.600525698422022*^9, 3.6005258048029137`*^9}, 3.6005259032103653`*^9, {
   3.6005261610614653`*^9, 3.600526281106331*^9}, 3.600526573182786*^9, 
   3.600526777281084*^9, {3.6005272235439568`*^9, 3.600527240872759*^9}, 
   3.600528404990016*^9, 3.600528509066758*^9, 3.6005289681701803`*^9, 
   3.600529089956275*^9, 3.600545179203183*^9, 3.600599486802042*^9, {
   3.600600439179556*^9, 3.600600443029963*^9}, {3.600603585410226*^9, 
   3.600603596615411*^9}, 3.600671168649715*^9, {3.600671657502849*^9, 
   3.6006716662418337`*^9}, 3.600671813286641*^9, {3.6006718972369537`*^9, 
   3.600671925372246*^9}, 3.600672554362094*^9, 3.600695303895421*^9, {
   3.6007171389420424`*^9, 3.600717161263688*^9}, {3.600717457530388*^9, 
   3.6007174714775763`*^9}, {3.6016362068950357`*^9, 3.6016362330158577`*^9}, 
   3.601636705768219*^9, 3.601638208757862*^9, 3.601638255915415*^9, 
   3.601645719844335*^9, 3.601722314641224*^9, 3.6017259600225277`*^9, 
   3.602768726821741*^9, 3.602771162053678*^9, {3.602771256768159*^9, 
   3.602771280815742*^9}, {3.602771310841058*^9, 3.6027713562826147`*^9}, 
   3.602773162747521*^9, 3.602844863180168*^9, 3.602849898668*^9, 
   3.6028529079220257`*^9, 3.602852995115316*^9, 3.602855982324177*^9, 
   3.637589803510166*^9, {3.63758986927636*^9, 3.637589910863146*^9}, {
   3.637590647281075*^9, 3.637590716078986*^9}, 3.637590772016396*^9, {
   3.637591278303883*^9, 3.63759128255857*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTrTeData", "[", "trPerc_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lab", ",", "feat", ",", "yTr", ",", "fTr", ",", "yTe", ",", "fTe", ",",
        "trSet", ",", "nSamp"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"lab", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", "1.", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Length", "[", "xPos", "]"}], "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"-", "1."}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Length", "[", "xNeg", "]"}], "}"}]}], "]"}]}], "}"}], 
         ",", "1"}], "]"}]}], ";", "\n", 
      RowBox[{"feat", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xPos", ",", "xNeg"}], "}"}], ",", "1"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"nSamp", "=", 
       RowBox[{"Length", "[", "lab", "]"}]}], ";", "\n", 
      RowBox[{"SeedRandom", "[", "12345", "]"}], ";", "\n", 
      RowBox[{"trSet", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], ">", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"100", "-", "trPerc"}], ")"}], "/", "100"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nSamp"}], "}"}]}], "]"}]}], ";", "\n", 
      
      RowBox[{"fTr", "=", 
       RowBox[{"feat", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{"trSet", ",", "1"}], "]"}]}], ",", "All"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"yTr", "=", 
       RowBox[{"lab", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"trSet", ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"fTe", "=", 
       RowBox[{"feat", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{"trSet", ",", "0"}], "]"}]}], ",", "All"}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"yTe", "=", 
       RowBox[{"lab", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"trSet", ",", "0"}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}]}]}], "\n", 
    "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601722255975412*^9, 3.60172225749997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"runMaxMarginExperiment", "[", 
    RowBox[{
    "fTr_List", ",", "yTr_List", ",", "fTe_List", ",", "yTe_List", ",", 
     "classifier_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[LineSeparator]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"model", ",", "margin", ",", "teResults", ",", "trResults"}], 
      "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}], "=", 
       RowBox[{"classifier", "[", 
        RowBox[{"fTr", ",", "yTr"}], "]"}]}], ";", "\n", 
      RowBox[{"trResults", "=", 
       RowBox[{"testMaxMargin", "[", 
        RowBox[{"model", ",", "fTr", ",", "yTr"}], "]"}]}], ";", "\n", 
      RowBox[{"teResults", "=", 
       RowBox[{"testMaxMargin", "[", 
        RowBox[{"model", ",", "fTe", ",", "yTe"}], "]"}]}], ";", "\n", 
      RowBox[{"plotLinearResults", "[", 
       RowBox[{
       "testMaxMargin", ",", "model", ",", "fTr", ",", "yTr", ",", "fTe", ",",
         "yTe", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"trResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", "100"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"teResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", "100"}], ",", 
        "margin"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.60171074170257*^9, 3.60171074592971*^9}, 
   3.601710785821866*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotLinearResults", "[", 
    RowBox[{
    "testFunc_", ",", "model_", ",", "fTr_List", ",", "yTr_List", ",", 
     "fTe_List", ",", "yTe_List", ",", "trErr_Real", ",", "teErr_Real", ",", 
     "margin_Real"}], "]"}], ":=", 
   RowBox[{"Module", " ", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "f1", ",", "f2", ",", "posTr", ",", "negTr", ",", "posTe", ",", "negTe",
        ",", "minP", ",", "maxP", ",", "a", ",", "b", ",", "c"}], "}"}], ",", 
     "\n", 
     RowBox[{
      RowBox[{"posTr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"yTr", ",", "1."}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"negTr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"yTr", ",", 
             RowBox[{"-", "1."}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"posTe", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"yTe", ",", "1."}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"negTe", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"yTe", ",", 
             RowBox[{"-", "1."}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"a", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fTr", "[", 
            RowBox[{"[", "negTr", "]"}], "]"}], ",", 
           RowBox[{"fTr", "[", 
            RowBox[{"[", "posTr", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", " ", "->", " ", "Full"}], ",", 
         RowBox[{"PlotMarkers", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "24"}], "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"c", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fTe", "[", 
            RowBox[{"[", "negTe", "]"}], "]"}], ",", 
           RowBox[{"fTe", "[", 
            RowBox[{"[", "posTe", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", " ", "->", " ", "Full"}]}], "]"}]}], ";", "\n", 
      
      RowBox[{"f1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"fTr", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"fTe", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"f2", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"fTr", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"fTe", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{"ContourPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"testFunc", "[", 
           RowBox[{"model", ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "1", "}"}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "f1", "]"}], ",", 
           RowBox[{"Max", "[", "f1", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"Min", "[", "f2", "]"}], ",", 
           RowBox[{"Max", "[", "f2", "]"}]}], "}"}], ",", 
         RowBox[{"Contours", "->", 
          RowBox[{"{", "0", "}"}]}], ",", 
         RowBox[{"PlotPoints", "->", "4"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Show", "[", 
       RowBox[{"b", ",", "a", ",", "c", ",", 
        RowBox[{"ImageSize", "->", "plotSize"}], ",", " ", 
        RowBox[{"PlotLabel", " ", "->", 
         RowBox[{"Style", "[", " ", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<TRerr=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"trErr", ",", "3"}], "]"}], "]"}], ",", 
              "\"\<% TEerr=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"teErr", ",", "3"}], "]"}], "]"}], ",", " ", 
              "\"\<% Marg=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"margin", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
           ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "21"}]}], "]"}]}]}], "]"}]}]}],
     "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.60171088062939*^9, 3.6017108934628*^9}, {
  3.6017109282397203`*^9, 3.601710937287734*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: soft margin", "Subsection",
 CellChangeTimes->{{3.6000689928004103`*^9, 3.6000690070043983`*^9}, {
  3.600511161175296*^9, 3.600511163195389*^9}, {3.60283126354408*^9, 
  3.6028312649247313`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "the ",
 StyleBox["max-margin formulation",
  FontWeight->"Bold"],
 " is ",
 StyleBox["for linearly separable problems only",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.6000690359654818`*^9, 3.600069616392734*^9}, {
   3.6000698086840277`*^9, 3.600069819840662*^9}, 3.6000698520984077`*^9, {
   3.600069946376136*^9, 3.6000699712854137`*^9}, {3.6000701256232224`*^9, 
   3.60007014793779*^9}, {3.600071495706664*^9, 3.60007150754605*^9}, 
   3.6006769472261*^9, {3.6006969438158007`*^9, 3.600696967031896*^9}, {
   3.600697004432231*^9, 3.600697010766618*^9}, {3.6016408896222973`*^9, 
   3.601640891222875*^9}}],

Cell[TextData[{
 "on ",
 StyleBox["non linearly-separable problems",
  FontWeight->"Bold"],
 ": ",
 StyleBox["no feasible solution",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.6000690359654818`*^9, 3.600069616392734*^9}, {
   3.6000698086840277`*^9, 3.600069819840662*^9}, 3.6000698520984077`*^9, {
   3.600069946376136*^9, 3.6000699712854137`*^9}, {3.6000701256232224`*^9, 
   3.60007014793779*^9}, {3.600071495706664*^9, 3.60007150754605*^9}, 
   3.6006769472261*^9, {3.6006969438158007`*^9, 3.600697024453825*^9}, {
   3.6006971929579773`*^9, 3.600697198886478*^9}, {3.601640905002974*^9, 
   3.601640906794964*^9}, {3.60277150415946*^9, 3.602771505864353*^9}, {
   3.602830325082114*^9, 3.602830358450646*^9}}],

Cell[TextData[{
 "idea: ",
 StyleBox["allow the algorithm to violate the constraints",
  FontWeight->"Bold"],
 " by an amount ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Xi]", "i"],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]]],
 ", ",
 StyleBox["as little as possible",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.6000690359654818`*^9, 3.600069616392734*^9}, {
   3.6000698086840277`*^9, 3.600069819840662*^9}, 3.6000698520984077`*^9, {
   3.600069946376136*^9, 3.6000699712854137`*^9}, {3.6000701256232224`*^9, 
   3.60007014793779*^9}, {3.600071495706664*^9, 3.60007150754605*^9}, 
   3.6006769472261*^9, {3.6006969438158007`*^9, 3.6006969997075453`*^9}, {
   3.6006970438749027`*^9, 3.6006970818260393`*^9}, {3.6006972106217613`*^9, 
   3.600697213988126*^9}}]
}, Open  ]],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    SubscriptBox["min", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b", ",", 
      StyleBox["\[Xi]",
       FontWeight->"Bold"]}]], " ", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], "\[CenterDot]", 
     StyleBox["w",
      FontWeight->"Bold"]}]}], " ", "+", 
   StyleBox[
    RowBox[{"C", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[Xi]", "i"]}]}],
    FontColor->RGBColor[1, 0, 0]]}],
  FontSize->36], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s", ".", "t", ".", " ", 
      SubscriptBox["y", "i"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}], "\[GreaterEqual]", 
    RowBox[{"1", 
     StyleBox["-",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      SubscriptBox["\[Xi]", "i"],
      FontColor->RGBColor[1, 0, 0]]}]}], ",", "   ", 
   RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]", ",", "n", ",", 
   "\[IndentingNewLine]", "          ", 
   StyleBox[
    RowBox[{
     SubscriptBox["\[Xi]", "i"], "\[GreaterEqual]", "0"}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["                                  ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{"i", "=", "1"}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["\[Ellipsis]",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["n",
    FontColor->RGBColor[1, 0, 0]]}],
  FontSize->36]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60000667883209*^9, 3.6000067752439413`*^9}, {
   3.6000070814275303`*^9, 3.600007111840486*^9}, {3.600007427356236*^9, 
   3.600007427719923*^9}, {3.600069619878358*^9, 3.6000696976499662`*^9}, {
   3.6000698340070744`*^9, 3.600069843688924*^9}, {3.6000703147873783`*^9, 
   3.600070318851357*^9}, 3.600070748774111*^9, {3.6004338335707273`*^9, 
   3.600433892615193*^9}, {3.6005188532159567`*^9, 3.6005188733822203`*^9}, 
   3.6006972237131147`*^9, {3.6007119170064*^9, 3.6007119285605373`*^9}, {
   3.601711285978549*^9, 3.6017112869719143`*^9}, {3.602843463536121*^9, 
   3.6028434722201023`*^9}, {3.637591297188538*^9, 3.637591299431579*^9}},
 CellTags->"eq:1norm_svm"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["C", TraditionalForm]],
  FontWeight->"Bold"],
 " is an ",
 StyleBox["Hyper-parameter of the function\[LineSeparator]it tunes the \
importance of the minimization of the ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["\[Xi]", "i"],
    FontWeight->"Bold"], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
   3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
   3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
   3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
   3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, {
   3.6006970926460953`*^9, 3.600697101827641*^9}, {3.600697229677726*^9, 
   3.600697229834483*^9}, 3.601640930061068*^9, {3.602833174020961*^9, 
   3.602833203612314*^9}, 3.602833256792295*^9, {3.60283399413939*^9, 
   3.602834029916862*^9}}],

Cell[TextData[{
 "big value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 " will force all the points to be correctly classified with margin 1 (if \
possible)"
}], "Item",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
  3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
  3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
  3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
  3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
  3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
  3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
  3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
  3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, {
  3.6006970926460953`*^9, 3.600697118404479*^9}, {3.60069723437099*^9, 
  3.6006972627548723`*^9}}],

Cell[TextData[{
 "low value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 " will allow for lower or even negative margin on some samples"
}], "Item",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
   3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
   3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
   3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
   3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
   3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
   3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
   3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
   3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, {
   3.6006970926460953`*^9, 3.6006971513409986`*^9}, 3.6006972729903173`*^9, 
   3.600711946115368*^9, {3.602834037761985*^9, 3.602834039175016*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: soft margin (code)", "Subsection",
 CellChangeTimes->{{3.6000689928004103`*^9, 3.6000690070043983`*^9}, {
  3.600511161175296*^9, 3.600511163195389*^9}, {3.6007158956923*^9, 
  3.600715897862685*^9}, {3.602831238934334*^9, 3.602831268238523*^9}}],

Cell["still a short QP ", "Item",
 CellChangeTimes->{{3.600069920637766*^9, 3.600069926661518*^9}, {
  3.6000707445299873`*^9, 3.600070773052685*^9}, {3.600070804101396*^9, 
  3.600070934762741*^9}, {3.600071131358141*^9, 3.6000713933531446`*^9}, {
  3.600071526059894*^9, 3.600071534814129*^9}, {3.6000719764203243`*^9, 
  3.6000719857932177`*^9}, {3.600090387921981*^9, 3.600090464055588*^9}, {
  3.6000905913737497`*^9, 3.6000906103354588`*^9}, {3.600090696746578*^9, 
  3.6000907045061502`*^9}, {3.6005295644428997`*^9, 3.600529577817708*^9}, {
  3.600529771801248*^9, 3.6005297753873158`*^9}, {3.600544039843444*^9, 
  3.600544087555781*^9}, {3.6006769921215057`*^9, 3.600677024230349*^9}, {
  3.6006970926460953`*^9, 3.600697160890579*^9}, {3.600697284488802*^9, 
  3.600697286344862*^9}, {3.600715746905385*^9, 3.6007157475312843`*^9}, {
  3.6016458668759813`*^9, 3.601645867057951*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainSoftMargin", "[", 
    RowBox[{"fTr_List", ",", "yTr_List", ",", "regC_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[LineSeparator]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "results", ",", "model", ",", "margin", ",", "nTr", ",", "fTr2", ",", 
       "d", ",", "w", ",", "v", ",", "b", ",", "xi", ",", "x", ",", "i", ",", 
       "sol", ",", "obj", ",", "cnstr"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"v", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "d"}], "}"}]}], "]"}]}], ";", "\n", 
      StyleBox[
       RowBox[{"xi", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}],
       FontColor->GrayLevel[0]], 
      StyleBox[";",
       FontColor->GrayLevel[0]], 
      StyleBox["\n",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"cnstr", "=", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "<=", "0"}], "&"}], "/@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"(", 
              RowBox[{"1", "-", "xi", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"fTr", ".", "w"}], "+", "b"}], ")"}], "yTr"}]}], 
              ")"}]}]}], ")"}]}], "\[LineSeparator]", 
         RowBox[{"&&", " ", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", ">=", "0"}], "&"}], "/@", 
             RowBox[{"Flatten", "@", "xi"}]}], ")"}]}]}]}]}],
       FontColor->GrayLevel[0]], 
      StyleBox[";",
       FontColor->GrayLevel[0]], "\n", 
      RowBox[{"obj", "=", 
       RowBox[{
        RowBox[{"w", ".", "w"}], "+", 
        RowBox[{"regC", " ", 
         RowBox[{"Total", "[", "xi", "]"}]}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obj", ",", "cnstr"}], "}"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"w", ",", 
           RowBox[{"{", "b", "}"}], ",", "xi"}], "]"}], ",", " ", 
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\[LineSeparator]", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"model", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"w", ",", "b", ",", "xi"}], "}"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Max", "[", 
           RowBox[{"model", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ")"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"model", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"results", "=", 
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600529613144619*^9, 3.60052963238398*^9}, {
   3.600603885117957*^9, 3.600603886505888*^9}, {3.6007157613208017`*^9, 
   3.60071577375546*^9}, {3.601636291288125*^9, 3.60163631746673*^9}, 
   3.601645908205928*^9, 3.601645951952405*^9, 3.601711322401435*^9, 
   3.6028341026034803`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Max-margin classifier: soft margin (demo)", "Subsection",
 CellChangeTimes->{{3.6000689928004103`*^9, 3.6000690070043983`*^9}, {
   3.600511161175296*^9, 3.600511163195389*^9}, 3.600715899600218*^9, {
   3.60283124552238*^9, 3.6028312725350847`*^9}}],

Cell[TextData[{
 "use the function ",
 StyleBox["createData", "Code"],
 " to draw an arbitrary training set as you wish"
}], "Item",
 CellChangeTimes->{{3.600523190135332*^9, 3.600523306766039*^9}, {
   3.6005234114043703`*^9, 3.600523464140204*^9}, {3.6005235065280943`*^9, 
   3.600523538476019*^9}, {3.600676656209612*^9, 3.600676761650674*^9}, {
   3.600694867666514*^9, 3.6006948945188427`*^9}, {3.600695054620736*^9, 
   3.6006950654690847`*^9}, 3.600696255093216*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6007104574867992`*^9, 3.600710458821796*^9}, {
  3.6007157881213617`*^9, 3.600715788444071*^9}, {3.620019219641346*^9, 
  3.620019224733307*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$582 = MousePosition["Graphics"]; 
     Private`p$582 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$582], 2], 
          Union[
           Partition[Private`pt$582, 2]]}, 1]]; 
     If[Private`s$582 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$582}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$582}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$582 = {}; 
     Private`s$582 = Private`s$582 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.600529782509405*^9, {3.600529990283494*^9, 3.600530002186282*^9}, 
   3.600530090211268*^9, 3.600530210238405*^9, {3.600530256815338*^9, 
   3.600530286011044*^9}, 3.600530410375724*^9, 3.6005304763736343`*^9, 
   3.6005441825365047`*^9, 3.600545003679199*^9, 3.600545595081881*^9, 
   3.6005462589772253`*^9, 3.600602781576613*^9, 3.6006030832068377`*^9, 
   3.6006033180255737`*^9, 3.600603522890913*^9, {3.6006039456108847`*^9, 
   3.600603945809247*^9}, 3.600612998413377*^9, 3.600613811986126*^9, 
   3.6006326441470413`*^9, 3.600671117240415*^9, 3.600671642169813*^9, 
   3.6006718036689577`*^9, {3.600672265428256*^9, 3.600672275933691*^9}, 
   3.600672525805505*^9, {3.600672575455937*^9, 3.600672628747901*^9}, 
   3.600672677987822*^9, 3.600672730325946*^9, 3.60067293990129*^9, 
   3.600673032365019*^9, 3.600673142949374*^9, {3.600710908420945*^9, 
   3.600710910190382*^9}, 3.6007171224634523`*^9, 3.600717341691435*^9, 
   3.600717447615634*^9, 3.600717501346039*^9, 3.60163618206218*^9, {
   3.6016365339456987`*^9, 3.601636534222808*^9}, 3.601645629479774*^9, 
   3.601709005289329*^9, 3.601722072466474*^9, 3.6017263175865*^9, 
   3.602768713858136*^9, 3.602769064540226*^9, 3.602769133914145*^9, 
   3.602769190207756*^9, 3.602771059382483*^9, 3.602771634318722*^9, 
   3.602772987127314*^9, 3.602831647548924*^9, 3.602844760331459*^9, {
   3.6028456256162987`*^9, 3.602845634148889*^9}, {3.620019099556245*^9, 
   3.620019129624476*^9}, 3.620019225251711*^9, {3.6200193197873774`*^9, 
   3.6200193745356283`*^9}, 3.637589670503537*^9, 3.6375905817935953`*^9, 
   3.637591010925602*^9, 3.637591046134726*^9, 3.6376614379171553`*^9},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 StyleBox["runMaxMarginExperiment[fTr,yTr,fTe,yTe]", "Code"],
 " to train and test the algorithm on the data"
}], "Item",
 CellChangeTimes->{{3.60069518516295*^9, 3.600695193321788*^9}, {
  3.600711050144219*^9, 3.6007110555747223`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runMaxMarginExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"trainSoftMargin", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "5", ",", ".2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, {
   3.600600462988875*^9, 3.600600490747484*^9}, {3.6006006023090973`*^9, 
   3.600600617351081*^9}, 3.600603164788883*^9, 3.600603990447899*^9, {
   3.600604112686928*^9, 3.6006041143637753`*^9}, {3.600671965092746*^9, 
   3.600671965294054*^9}, {3.600672656770911*^9, 3.600672658595111*^9}, {
   3.6007175603869467`*^9, 3.600717578503982*^9}, 3.601636429380548*^9, {
   3.601636597646694*^9, 3.601636611445261*^9}, 3.620019162901597*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 1.6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 5, 0.2}}, Typeset`size$$ = {
    288., {151., 152.06621362652027`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`c$872065$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$872065$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runMaxMarginExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`trainSoftMargin[#, #2, 10^$CellContext`c$$]& ], 
      "Specifications" :> {{$CellContext`c$$, 0, 5, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{324., {183., 186.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6016366657277822`*^9, 3.601646113129985*^9, 3.60164616685489*^9, 
   3.6017113366666527`*^9, 3.601722615512003*^9, 3.601726257936822*^9, 
   3.6017263466401587`*^9, 3.602771658349853*^9, 3.602773415333878*^9, 
   3.602780120903689*^9, {3.602845080568055*^9, 3.60284510425039*^9}, 
   3.6028456027999983`*^9, 3.6028456526099367`*^9, 3.60285010176035*^9, 
   3.602850134740903*^9, 3.602850170960148*^9, 3.6028531277113237`*^9, 
   3.602855994316437*^9, 3.6200191215065804`*^9, {3.620019160298684*^9, 
   3.620019164573765*^9}, 3.620019251089201*^9, 3.6200193088919497`*^9, 
   3.620019341231777*^9, 3.620019399131435*^9, {3.637589706113311*^9, 
   3.637589732316098*^9}, 3.637589763163808*^9, {3.637589827729141*^9, 
   3.637589843837139*^9}, 3.637589878381754*^9, 3.637591082684177*^9, {
   3.6375911161306562`*^9, 3.637591166272572*^9}, 3.6375913136238813`*^9},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<ML3_data.mat\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"fTr", ",", " ", "yTr", ",", " ", "fTe", ",", "yTe"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620022034343136*^9, 3.6200220695728197`*^9}}],

Cell[BoxData["\<\"ML3_data.mat\"\>"], "Output",
 CellChangeTimes->{{3.6200220503692303`*^9, 3.6200220702678137`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tSupport Vector Machines (SVM)"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.600154775042107*^9, 3.6001547788358383`*^9}, {
  3.602835159716124*^9, 3.602835161596848*^9}},
 CellTags->"sec:svm"],

Cell["", "Text"],

Cell["\<\
SVMs are max-margin classifiers, optimized in a different way\[LineSeparator]\
\
\>", "Item",
 CellChangeTimes->{{3.602835114400322*^9, 3.602835166661689*^9}, 
   3.6028352298136587`*^9, {3.602847710480744*^9, 3.602847711344162*^9}, {
   3.602848670537323*^9, 3.602848674021965*^9}}],

Cell[CellGroupData[{

Cell["Hard-margin SVM", "Subsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 3.6005128719736147`*^9}, {3.602831764390892*^9, 
  3.6028317698872137`*^9}, {3.602848878719673*^9, 3.602848893917912*^9}}],

Cell["Given the optimization problem for the max-margin classifier", "Item",
 CellChangeTimes->{{3.6007125958831587`*^9, 3.600712626870658*^9}, {
  3.60283523755658*^9, 3.602835242802927*^9}, {3.602850218927622*^9, 
  3.6028502325703917`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["min", 
   RowBox[{
    StyleBox["w",
     FontWeight->"Bold"], ",", "b"}]], " ", 
  RowBox[{
   StyleBox["w",
    FontWeight->"Bold"], "\[CenterDot]", 
   StyleBox["w",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", "1"}], "-", 
    RowBox[{
     SubscriptBox["y", "i"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], "\[LessEqual]", 
   "0"}], ",", "   ", 
  RowBox[{"\[ForAll]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], 
       RowBox[{"i", ","}]], 
      SubscriptBox["y", "i"]}], ")"}], "\[Element]", 
    "S"}]}]}], "\[LineSeparator]"}], "DisplayFormula",
 CellChangeTimes->{
  3.600712635007451*^9, 3.602832138840036*^9, {3.602835239211978*^9, 
   3.602835245235751*^9}, {3.602847720996563*^9, 3.602847722916397*^9}}],

Cell[TextData[{
 "its ",
 StyleBox["generalized Lagrangian",
  FontWeight->"Bold"],
 " is given by "
}], "Item",
 CellChangeTimes->{{3.6005128770847673`*^9, 3.600512943813957*^9}, {
  3.600677425738347*^9, 3.600677480971018*^9}, {3.600712590922113*^9, 
  3.6007125929831944`*^9}, {3.60071263999426*^9, 3.600712645560155*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["L",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     FractionBox[
      StyleBox["1",
       FontWeight->"Plain"], "2"], 
     SuperscriptBox[
      RowBox[{"\[LeftDoubleBracketingBar]", 
       StyleBox["w",
        FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"]}], " ", 
    "+", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SubscriptBox["y", "i"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["w",
             FontWeight->"Bold"], "\[CenterDot]", 
            SubscriptBox[
             StyleBox["x",
              FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], 
       ")"}]}]}]}]}],
  FontSize->36]], "DisplayFormula",
 CellChangeTimes->{{3.600512955178851*^9, 3.6005129730155067`*^9}, {
   3.600513906229238*^9, 3.600513910547207*^9}, 3.602832133959332*^9},
 CellTags->"eq:hard_margin_svm_L"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Hard-margin SVM (optimality conditions)", "Subsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 3.6005128719736147`*^9}, {3.602831764390892*^9, 
  3.6028317698872137`*^9}, {3.602835293251893*^9, 3.602835307256172*^9}}],

Cell[TextData[{
 StyleBox["Lagrangian dual problem, ",
  FontWeight->"Bold"],
 "equivalent to the original problem is defined as"
}], "Item",
 CellChangeTimes->{{3.602846993262681*^9, 3.602847000096039*^9}, {
  3.602848734521669*^9, 3.6028487456702623`*^9}, {3.602848910954523*^9, 
  3.6028489136188726`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    StyleBox["max",
     FontSize->24], 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"]], 
   SubscriptBox[
    StyleBox["inf",
     FontSize->24], 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   StyleBox[
    FractionBox[
     StyleBox["1",
      FontWeight->"Plain"], "2"],
    FontSize->24], 
   StyleBox[
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      StyleBox["w",
       FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], "2"],
    FontSize->24]}], 
  StyleBox[" ",
   FontSize->24], 
  StyleBox["+",
   FontSize->24], 
  StyleBox[" ",
   FontSize->24], 
  StyleBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}]}],
   FontSize->24]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"s", ".", "t", ".", " ", 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"]}], "\[GreaterEqual]", "0"}],
  FontSize->24]}], "DisplayFormula",
 CellChangeTimes->{{3.600512955178851*^9, 3.6005129730155067`*^9}, {
   3.600513906229238*^9, 3.600513910547207*^9}, 3.602832133959332*^9, {
   3.602836487778083*^9, 3.602836491091322*^9}, 3.6028365460052958`*^9, {
   3.602837331452437*^9, 3.6028373328281307`*^9}, {3.602846874028421*^9, 
   3.602846983877881*^9}, {3.602847056728881*^9, 3.602847061832905*^9}, 
   3.6028472139378633`*^9},
 CellTags->"eq:hard_margin_svm_L"],

Cell[TextData[{
 " ",
 StyleBox["optimality conditions",
  FontWeight->"Bold"],
 ":"
}], "Item",
 CellChangeTimes->{{3.6005129784631653`*^9, 3.600513025922779*^9}, {
   3.6005130576397543`*^9, 3.6005130974873857`*^9}, {3.600513365653596*^9, 
   3.600513516719843*^9}, {3.600513650699325*^9, 3.600513760507359*^9}, 
   3.600517241981903*^9, {3.600712658199174*^9, 3.60071266107507*^9}, {
   3.600712704779662*^9, 3.600712712644724*^9}, {3.6017120037996893`*^9, 
   3.601712010561676*^9}, {3.60283541678063*^9, 3.602835417575542*^9}, {
   3.602847200870459*^9, 3.602847201203656*^9}, {3.602848729568357*^9, 
   3.602848732176571*^9}}],

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", 
    StyleBox["w",
     FontWeight->"Bold"]}]], "=", 
  RowBox[{
   RowBox[{"0", " ", "\[LongRightArrow]", " ", 
    StyleBox["w",
     FontWeight->"Bold",
     FontColor->RGBColor[1, 0, 0]]}], 
   StyleBox["=",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"], 
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"]}]}],
    FontColor->RGBColor[1, 0, 0]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     StyleBox["L",
      FontWeight->"Plain"]}], 
    RowBox[{
     StyleBox["(",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["b",
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"]}], 
     StyleBox[")",
      FontWeight->"Plain"]}]}], 
   RowBox[{"\[PartialD]", "b"}]], "=", 
  RowBox[{
   RowBox[{"0", " ", "\[LongRightArrow]", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "i"], 
      SubscriptBox["y", "i"]}]}]}], "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SubscriptBox["y", "i"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["w",
            FontWeight->"Bold"], "\[CenterDot]", 
           SubscriptBox[
            StyleBox["x",
             FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}]}]}], ")"}]}], "=",
     "0"}],
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox[",",
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox["     ",
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox[
   RowBox[{"i", "=", "1"}],
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox[",",
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox["\[Ellipsis]",
   FontColor->RGBColor[1, 0, 0]], 
  StyleBox[",",
   FontColor->RGBColor[1, 0, 0]], 
  RowBox[{
   StyleBox["n",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["      ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"(", 
     RowBox[{"Complementarity", " ", "Condition"}], ")"}],
    FontWeight->"Bold",
    FontColor->GrayLevel[0]]}]}], "\[LineSeparator]"}], "DisplayFormula",
 CellChangeTimes->{{3.600156554617927*^9, 3.6001565591323*^9}, {
   3.600156717264855*^9, 3.600156812411139*^9}, 3.600156864861678*^9, {
   3.600156910962696*^9, 3.6001569205414753`*^9}, {3.600157072728825*^9, 
   3.6001571011797667`*^9}, {3.600158546688363*^9, 3.600158553918486*^9}, 
   3.600513870738564*^9, {3.60051722534639*^9, 3.60051723159496*^9}, {
   3.60051890411646*^9, 3.600518919036416*^9}, {3.600713085667515*^9, 
   3.60071313934899*^9}, {3.601714357451709*^9, 3.601714358801373*^9}, {
   3.602830484921762*^9, 3.602830527914904*^9}, {3.602830564359728*^9, 
   3.6028305656924057`*^9}, 3.602836517338934*^9, 3.602837436794508*^9, 
   3.602837484921509*^9, {3.6028470334595623`*^9, 3.602847063680129*^9}, 
   3.602847218301757*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Support Vectors",
  FontWeight->"Bold"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["{",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"]}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        StyleBox["w",
         FontWeight->"Bold"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}], "+", "b"}], ")"}], "=", "1", " "}]}], 
   TraditionalForm]]],
 "}"
}], "Item",
 CellChangeTimes->{{3.602837341536283*^9, 3.602837403357794*^9}, {
  3.602847070556123*^9, 3.6028471637548656`*^9}}],

Cell[TextData[{
 StyleBox["only the closest points to the classification hyperplane",
  FontWeight->"Bold"],
 " become Support Vectors"
}], "Subitem",
 CellChangeTimes->{{3.600713561887607*^9, 3.600713633117569*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Hard-margin SVM (dual problem)", "Subsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 3.6005128719736147`*^9}, {3.602831298245883*^9, 
  3.602831311902966*^9}, {3.602831778469146*^9, 3.6028317873229713`*^9}, {
  3.602831838180464*^9, 3.602831838463254*^9}}],

Cell[TextData[{
 "plugging the solution for ",
 Cell[BoxData[
  FormBox[
   StyleBox["w",
    FontWeight->"Bold"], TraditionalForm]]],
 " back into the Lagrangian, the ",
 StyleBox["dual problem",
  FontWeight->"Bold"],
 " becomes"
}], "Item",
 CellChangeTimes->{{3.6005139229439096`*^9, 3.6005139327340612`*^9}, {
  3.600513998355977*^9, 3.600514040753975*^9}, {3.600514214591071*^9, 
  3.6005142148630037`*^9}, {3.600712784152534*^9, 3.600712841174995*^9}, {
  3.600712886195409*^9, 3.600712890376004*^9}, {3.600713120058084*^9, 
  3.6007131291451483`*^9}, {3.601637039468123*^9, 3.6016370513772507`*^9}, {
  3.602836657872974*^9, 3.6028366620716457`*^9}, {3.602836734752492*^9, 
  3.602836735149045*^9}, {3.602837749192185*^9, 3.602837774796913*^9}, {
  3.6028379774579287`*^9, 3.602837977695489*^9}, {3.60284818796577*^9, 
  3.602848191809298*^9}}],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    SubscriptBox["max", 
     RowBox[{"{", 
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], "}"}]], 
    StyleBox[
     RowBox[{"1", "\[Transpose]"}],
     FontWeight->"Bold"], 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    StyleBox[
     RowBox[{"\[Alpha]", "\[Transpose]"}],
     FontWeight->"Bold"], 
    StyleBox["H\[Alpha]",
     FontWeight->"Bold"]}]}],
  FontSize->36], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["s",
     FontWeight->"Plain"], 
    StyleBox[".",
     FontWeight->"Plain"], 
    StyleBox["t",
     FontWeight->"Plain"], 
    StyleBox[".",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["\[Alpha]",
     FontWeight->"Bold"]}], "\[GreaterEqual]", 
   StyleBox["0",
    FontWeight->"Bold"]}],
  FontSize->36], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["\[Alpha]",
       FontWeight->"Bold"], 
      StyleBox["\[Transpose]",
       FontWeight->"Plain"]}], 
     StyleBox["y",
      FontWeight->"Bold"]}], 
    StyleBox["=",
     FontWeight->"Plain"], 
    StyleBox["0",
     FontWeight->"Bold"]}]}],
  FontSize->36]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60017364117669*^9, 3.6001736928282843`*^9}, {
   3.6001737746175947`*^9, 3.60017385821412*^9}, {3.600175162048126*^9, 
   3.600175164631028*^9}, {3.600677610391242*^9, 3.600677616531293*^9}, 
   3.6028306941095877`*^9, {3.6028308541816273`*^9, 3.602830865997205*^9}, 
   3.602833315023664*^9},
 CellTags->"eq:hard_margin_svm_Dual"],

Cell[CellGroupData[{

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     SubscriptBox["y", "j"], 
     StyleBox[
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}],
      FontColor->RGBColor[1, 0, 0]]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600174027303218*^9, 3.6001741208317432`*^9}, {3.600174352033383*^9, 
   3.600174383955019*^9}, {3.600174491817814*^9, 3.600174537941121*^9}, {
   3.600175445275632*^9, 3.600175448682406*^9}, {3.600175506253343*^9, 
   3.600175508667962*^9}, {3.600175871676817*^9, 3.600175927236977*^9}, {
   3.600430909988146*^9, 3.6004309310256977`*^9}, {3.600514166631318*^9, 
   3.600514195458735*^9}, {3.6005152064756107`*^9, 3.600515283881835*^9}, {
   3.600515344928915*^9, 3.600515409862432*^9}, {3.600518062887248*^9, 
   3.600518095663272*^9}, {3.600677531332918*^9, 3.600677573255021*^9}, {
   3.600712870685338*^9, 3.6007128838507633`*^9}, 3.60283772795833*^9, {
   3.602837784107254*^9, 3.602837849266852*^9}}],

Cell[TextData[{
 "it still has the form of a convex ",
 StyleBox["Quadratic Programming (QP)",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" problem",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600001837542701*^9, 3.600001853250449*^9}, {
   3.600001919433455*^9, 3.600001927754375*^9}, {3.600002236368168*^9, 
   3.600002289498114*^9}, {3.600002328886511*^9, 3.600002359676182*^9}, {
   3.6000024053924417`*^9, 3.600002506172327*^9}, {3.600003064899695*^9, 
   3.600003487186778*^9}, {3.6000037742462378`*^9, 3.6000038448060913`*^9}, {
   3.600004329736326*^9, 3.600004331982662*^9}, {3.6000044371635923`*^9, 
   3.600004522438382*^9}, {3.600004588409666*^9, 3.6000045912136917`*^9}, {
   3.6000047699081697`*^9, 3.60000484041494*^9}, 3.600004881401889*^9, {
   3.600004928685863*^9, 3.600004939763482*^9}, {3.60000509381358*^9, 
   3.600005140308243*^9}, {3.6000051749544783`*^9, 3.6000052935184383`*^9}, {
   3.600005771388554*^9, 3.600005876688408*^9}, {3.600005983761335*^9, 
   3.600006185968944*^9}, {3.600006223808519*^9, 3.600006249618011*^9}, {
   3.60000634500441*^9, 3.600006352663932*^9}, {3.60000643341108*^9, 
   3.600006500426401*^9}, {3.6000065326787663`*^9, 3.600006672039229*^9}, {
   3.600006778648384*^9, 3.6000068159838963`*^9}, 3.600006859047031*^9, {
   3.6000071391314363`*^9, 3.600007141303833*^9}, {3.60006894880341*^9, 
   3.6000689860687838`*^9}, {3.60051103512566*^9, 3.600511111467135*^9}, {
   3.600522972533334*^9, 3.60052315738151*^9}, {3.6005232298775167`*^9, 
   3.600523241826931*^9}, {3.600676588934862*^9, 3.600676637503007*^9}, {
   3.600694808728223*^9, 3.600694817587091*^9}, {3.600711841081717*^9, 
   3.600711856272368*^9}, {3.601710669482737*^9, 3.601710670177889*^9}, 
   3.601714869511649*^9, {3.6017235531139727`*^9, 3.601723558375517*^9}}],

Cell[TextData[{
 "only Support Vectors contribute to the ",
 StyleBox["prediction",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.6005205906937237`*^9, 3.60052060725213*^9}, {
   3.600520734263096*^9, 3.6005208082720633`*^9}, {3.60052231125207*^9, 
   3.60052244716322*^9}, {3.600522602075625*^9, 3.600522631488048*^9}, {
   3.600679822312314*^9, 3.600679824486844*^9}, {3.6006805005202703`*^9, 
   3.600680513041226*^9}, {3.600714890495755*^9, 3.6007149283518763`*^9}, {
   3.602837686495492*^9, 3.602837687304737*^9}, 3.602848792587175*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["f", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], ",", "b"}]], 
   RowBox[{"(", 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], ")"}]}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold"], "\[CenterDot]", 
     StyleBox["x",
      FontWeight->"Bold"]}], " ", "+", "b"}], "=", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["\[Alpha]", "j"], 
      SubscriptBox["y", "j"], 
      StyleBox[
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "j"], "\[CenterDot]", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold"], "i"]}],
       FontColor->RGBColor[1, 0, 0]]}]}], "+", "b"}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.6005224511976852`*^9, 3.6005225680942383`*^9}, {
   3.600522616237176*^9, 3.600522616683543*^9}, {3.601714070371052*^9, 
   3.601714072379682*^9}, {3.601714104228211*^9, 3.601714136202396*^9}, {
   3.6017141752725153`*^9, 3.601714203715654*^9}, {3.601714272457201*^9, 
   3.601714273445942*^9}, {3.601715488598124*^9, 3.601715489010166*^9}, {
   3.602837095499918*^9, 3.6028371049153957`*^9}, 3.602837148467005*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Hard-margin SVM (code)", "Subsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 3.6005128719736147`*^9}, {3.6028313230958567`*^9, 
  3.6028313240315*^9}}],

Cell[CellGroupData[{

Cell["SVM: a quadratic program, with simple constraints", "Item",
 CellChangeTimes->{{3.600155706880521*^9, 3.6001557139930696`*^9}, {
   3.600155813220395*^9, 3.600155816327116*^9}, {3.600155911005105*^9, 
   3.600155967262423*^9}, 3.600156085606361*^9, {3.600156260443994*^9, 
   3.60015629315687*^9}, {3.600156397433941*^9, 3.600156448083359*^9}, {
   3.6001564802410316`*^9, 3.600156483800024*^9}, {3.600156514005662*^9, 
   3.600156547087199*^9}, {3.6001580388088017`*^9, 3.600158069973619*^9}, {
   3.600172455547336*^9, 3.6001724707900953`*^9}, {3.600172505517021*^9, 
   3.600172506421205*^9}, 3.60017255434809*^9, {3.600172616949564*^9, 
   3.600172682450678*^9}, {3.6001735723352222`*^9, 3.600173627614605*^9}, {
   3.600173865511108*^9, 3.600173995758204*^9}, {3.6001753839450407`*^9, 
   3.600175433602771*^9}, {3.600175843890148*^9, 3.600175847904702*^9}, {
   3.600175953293795*^9, 3.600175961512011*^9}, {3.6001760093571663`*^9, 
   3.600176011940277*^9}, {3.600430466291836*^9, 3.600430472051145*^9}, {
   3.6004305521228857`*^9, 3.600430613473302*^9}, {3.600430802186534*^9, 
   3.600430823284212*^9}, {3.60043094327249*^9, 3.600430981806576*^9}, {
   3.600431082891284*^9, 3.60043116816341*^9}, {3.6004312157283907`*^9, 
   3.600431229444235*^9}, {3.600432559957159*^9, 3.600432562048987*^9}, {
   3.600432643678907*^9, 3.600432818959519*^9}, {3.600432874255698*^9, 
   3.6004328883758574`*^9}, {3.600432939260188*^9, 3.600432943998496*^9}, {
   3.6004330211493187`*^9, 3.600433053543309*^9}, {3.6004330860088882`*^9, 
   3.6004331246140823`*^9}, {3.600433159222672*^9, 3.600433216633389*^9}, {
   3.600433366598034*^9, 3.600433372224897*^9}, 3.600433418933416*^9, {
   3.6004344868365498`*^9, 3.600434488158559*^9}, 3.600435272615387*^9, 
   3.600438204224846*^9, {3.600514442780917*^9, 3.600514443539692*^9}, {
   3.6005144957366457`*^9, 3.600514781309287*^9}, {3.600514811696773*^9, 
   3.600514820651367*^9}, {3.600514893468878*^9, 3.6005150304588203`*^9}, 
   3.6005152536508083`*^9, {3.6005154416650743`*^9, 3.600515536326893*^9}, {
   3.6005155695046387`*^9, 3.600515572350175*^9}, {3.600515641195244*^9, 
   3.600515733940283*^9}, 3.600515834701779*^9, {3.6005165000796328`*^9, 
   3.600516557482274*^9}, {3.6005456864968147`*^9, 3.600545700613552*^9}, {
   3.600546086295779*^9, 3.6005460870879908`*^9}, {3.600677628407139*^9, 
   3.6006777163858547`*^9}, {3.600712927073423*^9, 3.600713001177586*^9}, {
   3.600716021160686*^9, 3.600716032479484*^9}}],

Cell[TextData[{
 " ",
 StyleBox["KTr", "Code"],
 " is the matrix of inner products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Ktr", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "j"]}]}], TraditionalForm]]],
 " computed using the training samples"
}], "Item",
 CellChangeTimes->{{3.600515758635311*^9, 3.600515893314638*^9}, {
  3.6005162249309397`*^9, 3.600516380265181*^9}, {3.600516451187839*^9, 
  3.6005164690412903`*^9}, {3.6005461027436113`*^9, 3.600546157811988*^9}, {
  3.6006777934200277`*^9, 3.600677797195367*^9}, {3.6006790967491913`*^9, 
  3.600679109313181*^9}, {3.6006791538231916`*^9, 3.6006791542853107`*^9}, {
  3.600679203770637*^9, 3.600679222444211*^9}, {3.600679429138935*^9, 
  3.600679431559985*^9}, {3.600713444513855*^9, 3.600713510614399*^9}, {
  3.60071604091954*^9, 3.600716041349555*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainHardMarginSVM", "[", 
    RowBox[{"KTr_", ",", "yTr_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nTr", ",", "d", ",", "H", ",", "f", ",", "a", ",", "alpha", ",", "b", 
       ",", "margin", ",", "sol", ",", "obj", ",", "constraints"}], "}"}], 
     ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "KTr", "]"}]}], ";", "\n", 
      RowBox[{"f", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"a", ",", " ", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"H", "=", 
       RowBox[{
        RowBox[{"yTr", ".", 
         RowBox[{"Transpose", "[", "yTr", "]"}]}], " ", "KTr"}]}], ";", "\n", 
      
      RowBox[{"constraints", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"alpha", ".", "yTr"}], "]"}], "==", "0"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", ">=", "0"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"And", "@@", "alpha"}], ")"}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"obj", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"alpha", ".", "H", ".", "alpha"}]}], " ", "-", " ", 
        RowBox[{"f", ".", "alpha"}]}]}], ";", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obj", ",", "constraints"}], "}"}], ",", "alpha", ",", " ", 
         
         RowBox[{"Compiled", "->", "True"}], ",", " ", "\n", 
         RowBox[{"AccuracyGoal", "->", "1"}], ",", " ", 
         RowBox[{"PrecisionGoal", "->", "1"}], ",", " ", 
         RowBox[{"MaxIterations", "->", "100"}], ",", "\n", 
         RowBox[{"Method", " ", "->", " ", "\"\<QuadraticProgramming\>\""}], 
         ",", " ", 
         RowBox[{"Gradient", ":>", " ", 
          RowBox[{
           RowBox[{"H", ".", "alpha"}], " ", "-", "f"}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"(", 
        RowBox[{"alpha", "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"alpha", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "<", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "8"}], ")"}]}]}], "&"}], "/@", "alpha"}], ",", 
            "True"}], "]"}]}], "]"}], "]"}], "=", "0"}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Total", "[", "alpha", "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"alpha", " ", 
           RowBox[{"yTr", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}], ".", "H", ".", 
         "alpha"}]}]}], ";", "\n", 
      RowBox[{"margin", "=", 
       RowBox[{
        RowBox[{"Total", "[", "alpha", "]"}], "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], ";", "\n", 
      RowBox[{"alpha", "=", 
       RowBox[{"alpha", " ", 
        RowBox[{"yTr", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alpha", ",", "b"}], "}"}], ",", "margin"}], "}"}]}]}], 
    "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600545717875956*^9, 3.600545751119782*^9}, {
   3.600585819582821*^9, 3.6005858288391867`*^9}, 3.6006042128918858`*^9, {
   3.600604265210268*^9, 3.600604273450542*^9}, 3.600716095385805*^9, {
   3.6016372243908863`*^9, 3.601637245624522*^9}, {3.601637621761511*^9, 
   3.601637623091546*^9}, {3.60163872060341*^9, 3.6016387234278507`*^9}, {
   3.601712328168661*^9, 3.601712328895389*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"linearKernel", "[", 
    RowBox[{"fTr_", ",", "fTe_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "K", "}"}], ",", "\n", 
     RowBox[{"K", "=", 
      RowBox[{"fTr", ".", 
       RowBox[{"Transpose", "[", "fTe", "]"}]}]}]}], "\n", "]"}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{3.601712337830811*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testSVM", "[", 
    RowBox[{"model_", ",", "KTe_", ",", "yTe_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[LineSeparator]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nTe", ",", "nTr", ",", "a", ",", "b", ",", "pred", ",", "score", ",", 
       "correct"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"model", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{"model", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTe", ",", "nTr"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "KTe", "]"}]}], ";", "\n", 
      RowBox[{"score", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"KTe", ".", "a"}], "+", "b"}], "]"}]}], ";", "\n", 
      RowBox[{"pred", "=", 
       RowBox[{"Sign", "[", "score", "]"}]}], ";", "\n", 
      RowBox[{"correct", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", ">", "0"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"score", " ", 
              RowBox[{"yTe", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
           "True"}], "]"}], "/", 
         RowBox[{"Length", "[", "yTe", "]"}]}], "//", "N"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{"correct", ",", "pred", ",", "score"}], "}"}]}]}], "\n", 
    "]"}]}], 
  StyleBox[";",
   FontColor->GrayLevel[0]]}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{3.6017144884173727`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Hard-margin SVM (demo)", "Subsection",
 CellChangeTimes->{{3.600510896273519*^9, 3.6005109006592607`*^9}, {
  3.6005128679886007`*^9, 3.6005128719736147`*^9}, {3.602831338983448*^9, 
  3.602831341128026*^9}}],

Cell[TextData[{
 "we use of ",
 StyleBox["createData[]", "Code"],
 " to draw a datset"
}], "Item",
 CellChangeTimes->{{3.600546320652032*^9, 3.6005463437612333`*^9}, {
  3.6006790268837757`*^9, 3.600679140519519*^9}, {3.600679171350915*^9, 
  3.600679201241987*^9}, {3.60067923626015*^9, 3.60067935278434*^9}, {
  3.6007135405815287`*^9, 3.600713582298049*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$608 = MousePosition["Graphics"]; 
     Private`p$608 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$608], 2], 
          Union[
           Partition[Private`pt$608, 2]]}, 1]]; 
     If[Private`s$608 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$608}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$608}, 1]]]; Null), 
    "MouseClicked" :> (Private`p$608 = {}; 
     Private`s$608 = Private`s$608 (-1)), PassEventsDown -> Automatic, 
    PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6005481748004313`*^9, {3.600548527014482*^9, 3.600548535300232*^9}, 
   3.60054881372934*^9, {3.600548863497181*^9, 3.6005488860857277`*^9}, 
   3.6005493036961613`*^9, {3.6005493502402*^9, 3.6005493713830833`*^9}, 
   3.600549479168809*^9, {3.6005495192934027`*^9, 3.6005495251830683`*^9}, 
   3.600550178410387*^9, 3.600585746776744*^9, {3.600590623675686*^9, 
   3.6005906310066977`*^9}, 3.600590726854548*^9, 3.6005908772505617`*^9, {
   3.600598917722591*^9, 3.6005989405406446`*^9}, 3.600599110860197*^9, 
   3.600599443958766*^9, 3.600599582535881*^9, 3.600602782182436*^9, 
   3.600603523385064*^9, 3.6006039456721487`*^9, 3.600610585106822*^9, 
   3.6006129988954983`*^9, 3.600613812201179*^9, 3.600632644271154*^9, 
   3.600671117325617*^9, 3.600671642243865*^9, 3.600671803735737*^9, 
   3.600672265501902*^9, 3.600672525891562*^9, 3.600717122650446*^9, 
   3.60071734180406*^9, 3.6007174476639967`*^9, 3.601636182250065*^9, 
   3.601636534046801*^9, 3.601645629548932*^9, 3.601646528819751*^9, 
   3.601709005345763*^9, 3.601722072555254*^9, 3.6017267356317863`*^9, 
   3.602768713947373*^9, 3.602769064601406*^9, 3.6027691342440853`*^9, 
   3.602769190258531*^9, 3.602771059639333*^9, 3.602771799449079*^9, 
   3.602772987232856*^9, 3.60283164763363*^9, 3.602844760414071*^9, 
   3.602850491573041*^9, 3.602853444918384*^9, {3.60285351270021*^9, 
   3.602853520142421*^9}, 3.6200190995882807`*^9, 3.6375896705855627`*^9, 
   3.6375905819559507`*^9, 3.6376614380101633`*^9},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Support Vectors",
  FontWeight->"Bold"],
 " are marked with ",
 StyleBox["thicker",
  FontWeight->"Bold"],
 " markers"
}], "Item",
 CellChangeTimes->{{3.600713561887607*^9, 3.600713609965858*^9}, 
   3.602851427147277*^9}],

Cell["\<\
only the closest points to the classification hyperplane become Support \
Vectors\
\>", "Item",
 CellChangeTimes->{{3.600713561887607*^9, 3.600713633117569*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"runSVMExperiment", "[", 
  RowBox[{
  "fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", "trainHardMarginSVM", ",", 
   "linearKernel"}], "]"}]}], "Input",
 CellChangeTimes->{{3.599821953811164*^9, 3.599822022857929*^9}, {
   3.599822054108838*^9, 3.599822091974762*^9}, {3.599822154460535*^9, 
   3.599822165892836*^9}, 3.599822209600809*^9, {3.599822321999631*^9, 
   3.5998223222894907`*^9}, {3.599822387708255*^9, 3.5998224007827997`*^9}, 
   3.599822675002933*^9, {3.599823609555605*^9, 3.599823609972664*^9}, {
   3.599829239247197*^9, 3.5998292425168533`*^9}, {3.599836730461629*^9, 
   3.599836732048378*^9}, {3.600026331599099*^9, 3.600026336718506*^9}, {
   3.600026874943771*^9, 3.600026887766361*^9}, 3.600523346368287*^9, {
   3.600523555818899*^9, 3.600523556013773*^9}, {3.600523867549584*^9, 
   3.600523878804373*^9}, {3.600523956766314*^9, 3.600524210460649*^9}, {
   3.60052427314493*^9, 3.6005243781939497`*^9}, {3.6005249635521603`*^9, 
   3.6005249636857758`*^9}, {3.600525198454364*^9, 3.600525198857278*^9}, {
   3.6005252724554987`*^9, 3.6005253131165867`*^9}, 3.600525471115404*^9, {
   3.600525661789124*^9, 3.600525799721908*^9}, {3.600526260902607*^9, 
   3.600526272709944*^9}, 3.600526922431601*^9, {3.600527181195888*^9, 
   3.600527238513834*^9}, {3.600527463765905*^9, 3.600527464552903*^9}, {
   3.600527621606209*^9, 3.600527691419077*^9}, {3.600527906920307*^9, 
   3.60052791102417*^9}, {3.6005280084182243`*^9, 3.600528029522358*^9}, {
   3.600528063913871*^9, 3.600528088848625*^9}, {3.600528151773035*^9, 
   3.600528193383729*^9}, {3.60052852737497*^9, 3.6005285402601233`*^9}, {
   3.600528979828767*^9, 3.6005290434859343`*^9}, {3.6005291030111094`*^9, 
   3.60052913561012*^9}, {3.6005291754442387`*^9, 3.600529206326358*^9}, {
   3.600529274193377*^9, 3.6005293059425287`*^9}, {3.600529819130739*^9, 
   3.600529832008511*^9}, 3.600529937761839*^9, {3.600529968422307*^9, 
   3.600529974082938*^9}, {3.600530044290557*^9, 3.6005300555801373`*^9}, {
   3.600530419906395*^9, 3.600530465923465*^9}, {3.6005305031041594`*^9, 
   3.6005305732630243`*^9}, {3.60054419679565*^9, 3.600544213073532*^9}, 
   3.600544981696217*^9, {3.6005450379414673`*^9, 3.60054508839544*^9}, {
   3.600545360991832*^9, 3.600545434011033*^9}, {3.600545472664554*^9, 
   3.600545559374083*^9}, {3.600545609202199*^9, 3.600545627332015*^9}, {
   3.600546178439096*^9, 3.6005461830908833`*^9}, {3.600546303917809*^9, 
   3.600546306938239*^9}, {3.600546466692848*^9, 3.600546480429881*^9}, {
   3.600546575005353*^9, 3.600546829060685*^9}, {3.600546921254654*^9, 
   3.600546922412047*^9}, {3.600547983007058*^9, 3.600547984587983*^9}, 
   3.600548231401762*^9, {3.600548779230706*^9, 3.600548782614275*^9}, {
   3.600548824203184*^9, 3.600548851107295*^9}, {3.600548917877345*^9, 
   3.600548952429632*^9}, {3.6005489875330772`*^9, 3.600549078996273*^9}, {
   3.600549319947598*^9, 3.600549338716949*^9}, {3.600549397645832*^9, 
   3.6005494246282473`*^9}, {3.600549555078596*^9, 3.600549632309577*^9}, {
   3.600549854018811*^9, 3.6005498691945553`*^9}, {3.600549923290716*^9, 
   3.600549974175603*^9}, {3.600550191104844*^9, 3.600550274904955*^9}, {
   3.6005898842524137`*^9, 3.60058990481599*^9}, {3.600590770279476*^9, 
   3.6005907805314817`*^9}, {3.600590906007497*^9, 3.6005909295274487`*^9}, {
   3.600599100001532*^9, 3.600599103254562*^9}, {3.600599690230921*^9, 
   3.600599690557418*^9}, {3.6006105474506817`*^9, 3.600610631784918*^9}, {
   3.600631686689803*^9, 3.600631696086622*^9}, 3.601638340449675*^9, {
   3.601646567339115*^9, 3.601646567886073*^9}, {3.63758994523533*^9, 
   3.637589945479239*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
aSUyYx+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpg
fbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH6yOOZ9JHHP+kD9YH64P1wfpgfbA+
WB+sj/j+Jn2wPlgfrI/DJb8YVGt2ug/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9RHH
M+kjjn/SB+uD9cH6YH2wPlgfrA/WR3x/kz5YH6wPjvtX277/69Xm29L7V4nj
/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj
/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj
/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fGU/7V8bf
/lXiuH+VOO5fJY77V4nj/lXiuH+VOO5fJY77V4nj/pX31/5V4rh/lTjuXyXW
R5/vfqo39MztsQ/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9RHHM+kjjn/SB+uD9cH6
YH2wPlgfrA/WR3x/kz5YH6wP1sfzzRd/v2lKug/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9RHHM+kjjn/SB+uD9cH6YH2wPlgfrA/WR3x/kz5YH6wP1keNCluOOr1x
VuyD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/W
B+uD9cH6YH2wPlgfrA/WB+uD9cH6YH3E8Uz6iOOf9MH6YH2wPlgfrA/WB+uD
9RHf36QP1gfrg/Vx8qH9D91ycnbsg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9xPFM
+ojjn/TB+mB9sD5YH6wP1gfrg/UR39+kD9YH64P1sXly4ZGvjU/3wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+4ngmfcTxT/pgfbA+WB+sD9YH64P1wfqI72/SB+uD
9cH6GPn2mccOeywn9sH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPuJ4Jn3E8U/6YH2w
PlgfrA/WB+uD9cH6iO9v0gfrg/XB8XzOWy57bPMxO2IfHM/nTBzP50wcz+dM
HM/nTBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP50wc
z+dMHM/nTBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP
50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP5zSezuc0/s7n
TBzP50wcz+dMHM/nTBzP50wcz+dMHM/nTBzP50wcz+f0/jqfM3E8nzNxPJ8z
sT7uO77quNNHpPtgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+
WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB9xPJM+4vgnfbA+WB+s
D9YH64P1wfpgfcT3N+mD9cH6YH1cvOT2E2+tvzP2wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
wfpgfbA+4ngmfcTxT/pgfbA+WB+sD9YH64P1wfqI72/SB+uD9cH6+F+PRxu1
OZLug/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP
1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9xPFM+ojjn/TB+mB9sD5YH6wP1gfr
g/UR39+kD9YH64P1MfuhFyYNG7wr9sH6YH2wPlgfrA/WB+uD9cH6YH2wPlgf
rA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPuJ4
Jn3E8U/6YH2wPlgfrA/WB+uD9cH6iO9v0gfrg/XB+vi8xNunbblnd+yD9cH6
YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6
YH2wPlgfrA/WB+uD9cH6YH3E8Uz6iOOf9MH6YH2wPlgfrA/WB+uD9RHf36QP
1gfrg/XxbGb3JsV+T/fB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB
+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD7ieCZ9xPFP+mB9
sD5YH6wP1gfrg/XB+ojvb9IH64P1wfF8nMFfT7t1YG76fJzE8XycxPF8nMTx
fJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8
nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfJzE8Xyc
xPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8HOPpfBzj
73ycxPF8nMTxfJzE8XycxPF8nMTxfJzE8XycxPF8nMTxfBzvr/NxEsfzcRLH
83ES66Po8+POalt7T+yD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD
9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH3E8Uz6iOOf9MH6
YH2wPlgfrA/WB+uD9RHf36QP1gfrg+P55+XnNh++L90Hx/PPE8fzzxPH888T
x/PPE8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH
888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fz
zxPH888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fzz42n88+Nv/PP
E8fzzxPH888Tx/PPE8fzzxPH888Tx/PPE8fzzxPH88+9v84/TxzPP08czz9P
rI+hv62ZtaXX3tgH64P1wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1
wfpgfbA+WB+sD9YH64P1wfpgfbA+WB+sD9YH64P1wfqI45n0Ecc/6YP1wfpg
fbA+WB+sD9YH6yO+v0kfrA/WB+vj5Um7zjvjxl9iH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5YH6wP1gfrg/XB+mB9sD5Y
H6wP1gfrI45n0kcc/6QP1gfrg/XB+mB9sD5YH6yP+P4mfbA+WB/x83DuxnsG
zNidOrrQTeHF9d+n9MIvrex2be1NueGUNU+2+CM37/qUuOCv73L50t+LlhiZ
8vv7+v/7OJyQm7rtzC59q78+PDUy7693/mV7wo11Lr312OK/xD697td73a/3
+/v1/vt98j5Nk8rlBH/e7kd1ynsDdkR/3TP//5EdDje5vV/LEQNSvp69vrjv
Ra1Prvtuanj+75+zPTz4xb1150/pHLzOXr+g0jWdmlT8Mowrlz+A28Jl7e86
1G/80Pg6e73Xs+MqPddvTJj2e/6AZIbzu928p8jmifF1npv/x3tjaxg4dtmg
ARdOjV/PXi/2wsgR/a6ZEQbmf3xHbw4PtD90QrPls+Lr7PWen97QpMrLc8Po
0fkf4I1h7eCOs44+Y0F8nb1+3uSfL8wY+3OYVbvRrDdKrw8NFxd7Y+ADS+Lr
vGpT/v/WhHv3l2s+od2y+PXs9f1t655X8uflYUerBodr9loVehRpPf/d81fE
19nrFbv1enX38yvDH8fnB7wirCz+U+n7pqyKr7PXW3+5OWPiSWvCifn5nrA8
FL+y8DsXPLY2vs7XN//i49mdF4cJYy8t3+mHdfHr2esP33D7ptx/1ofH8/nH
/HB4bvOu9e7ZGF9nr/ep273apAGbQoc81Wk+O1y/fuyOC/dtjq+z138ZnXvH
rAu3hrvyL3/TUmHaq/98dWje1vg696i2e26fbyaE7tVP/aPMS5nx69nrTx51
Ud3HztkWxl6SfwEZFirOqfhd9+nb4uvs9cIf3HJkVtPtocP/Xf8+CSvvqf/g
76dlxdfZ64POaDr8yklZodGhK/c+MbJH6tW1bYs8/lR2fJ2/yb+ffjgsdVv/
ro98cnxO/Hr2+jmN+o+ePTonnHDyi5cv3TohtfOykUUPN9gRX2evT86d/kTZ
wjvD7HFvT73jr1Tqg1EZEx4fujO+zl5v+ErWyT3q7Qo1R8wvs/2D2aly1x96
Zs6fu+LrfF6H5b+VOmdB6siR46Yc/np3/Hr2+pJZ555RLu86eij/dvnt4tSX
Xco2e+J/ufF19vpLd98wo0ffPWHXZ/k38OWpm4vde87cWnvj6+x110vXe9cv
16v268d0XvHFoHh9cz2MP4+hwPVs33lXla1R9rPoG7NaZK5ufGe83xS8nlU6
95bevTM/j/66wbQbCrf+Nt6vCl7Phg5eP6LK7yOj17X96+Prbhgf73euZ65f
j335fp3lb02O98eC17PMuWcXaj49FT32UEbDIu/MjPfXgtcz569zwfOzC17P
4vnPiQuen+p65vpV8DzJgtcz58txwfPECl7P4vlQiQueJ1Pweub8CC54noDr
metXwZ+vXvB65uclc8Gfr1vweubnY3LBn69Y8Hrm56FxwZ+v5Xrm+lXw5w0V
vJ75+R9c8OdNFLye+ffeXPDfGxe8nvn3fVzw35u5nrl+Ffz3NwWvZ55n54LP
Xxe8nnl+kQs+f1fweuZ5FS74/IXrmetXwe9HF7ye+f4MF/x+RMHrmf04Lrgf
VfB6Zv3F5mtr8/Lv9kpOmLn3j21fVvsutTV/vOplh9Y3/bR9dfPeqd3587+r
s8LIA+O3HhnYPRzIv3ycuD00/fTTes3q/xD+zp/f7swMU4o/26fZ1ZPC0fnz
3zlbw403/FbvmJemhfPyam5Ua0sofWvRRv3bzg7l8jjr741hyPM9z6v604JQ
Mz/vCetDuR6lV2T8vSTUzauxU4u14ceM8WcvW7IsNMq7muRcsTr8mf13q/4t
8uYV+ZeHbStCjT9qLWt22urQOe/lIX2Xh7dO6lqu6ui1ocJX+R/wJeGCniPW
Dyi0Pjy4+L4qq0ssDE9+f/C65l/nXXfyavji4znh6yk1Pq2W9+fqf+mNeb9i
RjiwY8ZrRQ5sDe2/eXF4td0/htnDVyy5rk9m6P5/18uR4dnrfn+j/+5tofr/
Xf/6hKLTzyt7dPWsUK9/xbwRfjc19Paa65p1zQ5z89ef/w5OtTul7jUDKuWE
Et/kf37HpUp80Wrz0R13hNV3/LVm2LipqWkX9frw+ZU7Q+22x078tMms1JPD
Jl+fUXp3uCT/4/HbvFTFlxZ9cszi3eHfUvkfmEWplX/sC81L7gkvtjvtw8Hv
LUu9+u4Zv2S8sDfUyxu+a4/bEczXG/7f7SI71Jz3/JXHHv4q9czxeQMyPSv0
7vnstEtbtQkv5q8X+m8PWc2P6bP0zCHh1fwc224L7YpcWLN/twmhfd5wDqmf
GY6U+eFQlaU/hS55q4uHK20NHX/KGntdmVmhdN7fvlipzaHotpebL282P1yX
f7lctyF8WLTQpc2HLw518t+eHuvCjpMHTe932bLwSN7wXnfXmnDlRbklms3L
CM3zL7fHrArNK1dsW6XpqvDWvrwL8LSMMKJ221VHH782dM/77Rq0WRbuWd7v
3ecbrAu1quRfQBeF7lnbt1T9c0No8nT+gM4LGb9fWePYvptD1/zLYZ1Z4YNj
qi3a1X9rePy1/P9NDQ0X3nFJydsyw6Cl+ReoceHI/S8uf7fntrD63rzPZ6fB
4ctNn7y9O+++2qNQ/vX2nXBzk/FX3VclO5w/IH/93jdVrNy8jh235N2nl+Zf
AEalxo3fXTG3/I5wOP9ycPmkVP1wSuZ97XeGBvnDVWpG6vD8Ch//uGxXuHb7
B/0qjpiTWtitVk5um93h9LzRfan6wlTzs5t8Vm9Bbtib//L8JalTvvrg5knn
psfP/MH8gvVpfM1H2NdbL5l/sJ7f73/CsaN6t4zzD+sl8w/W+5O3vZZZecXX
cb5gfWO+wHrfVmHGMcvWzojzBesb8wV2PXj24XunNTtvXry/W4+4v7PrwcMN
18257sKMeH+3HnF/Z9eLPi1KXXz09JXxfmz94H7MrhfTL8zocky9DfF+aP7u
fsiuD5+1zL602c3b4v3I/Nn9iF0P7lrx1HvLN+TE+4H5q/sB67/wtZt3Vn0l
Nxi/1TtvyL55Rbd4Pf4xZNxX+ZK+cXysZ833WN+HNnbvVPiu0dFV96/JXLpn
bBy/m4b0f+i5LtPj+MxdUva0oxfOieNj/Wl+xvq/4+Ck+QNOTHv3W5tePabh
ojh+XXrNe7HIa8vj+CwcesrPy85Oj4/1ovkUuz6cNO3Bywf8uDp6Y4cmby1/
ck0cv/2PTK+Q8f36ON+x/os/vyex60fFF4/7aOAdaReudG52xoFNcfytB82X
2PWm9Tv37G6euyX64ktGlVp2e/r+Ue7jhu3q/pIZ5zPWd+Y/7Hq05Jz2V0ys
mfZ1fxVduazH9vj5st6L58sldv166etvVpf8OO21Hct1qLI9K37+svav3TDx
vZw4X7F+M79h17fO7f5+/4K16evdLw07XVu13M74+bWeM99h18Mrji5VtdMV
aXfPGbJ9wBu74ue7T70Hb7jwotw4H7E+M39h18saG9vkdmqZ9qBphXoNnLMn
rDlyMO8NWhHXa/ZX+ZmRGUcODl2e2ti4X+89M9K2n+X6WnB9Z73mfmo+xAXX
d9Zr7rfmS2x9pz/rM/1ab7n/mj9xwfWZ9Zb7s/kVW5/p0fpKz9ZL7tfmW1xw
fWW95H5uPsbWV/q0PtK39Y77u/kZWx/p0fpGX/Hn/yZ9Wo+435uvsfWLnqw/
9GF9oS/rBfd/8ze2vtCD9YHPt/m/PsznzQfM59j83+fZ/N3n0/zc/oLPW/z5
jol9fs33rP8L7ofaPzB/N/+zv+B+YX+Bfb37h8+rz6/5v/mj/57Pq/sR+3rz
S+v/gvuh9g+sF8w37S+4/9hfYF/vfuTz7vNvvWG+6r/n8+7+xr7efNb6v+B+
aDz/N1mfmN/aX3A/s7/Avt79TS/x/MdkfWN+bL/A/Sz+PLrE1jvub+6HerL+
MX+2n+D+5n7Jvt79Tn96tH4y/7Y/4P5mf4Ctp9zv3B/1aX1lfm7/wP0unqea
2Ne7/+lZ39Zn5vf2A9zv7Aew9Zr7n/ul3q3fzP/tF7j/uZ+yr3c/dH1wvbD+
s36w/nf/s/5n60H3Q/dP1w/rQ+sL+wPuh+6v7OvdH93fzDfdv8w33Y/MF91v
zBfdP8z33B/M91zvzddcr82XXG/NV1wvzRdcr6xvrF/Yn9d6x/XM9dD61/rG
9cR6xnqF/f2sb1xvXK+sh61n9G79Yn3C3g/rGdcD1xPrY+sXvdtftH5h76f9
Dz1b37g+sPW09Y7f3/6i1+2X6Nl+ofUQGz/7J3q1XtI/W49bP/n97Rd63X6L
Xu3/WV+xz4v9Fz1af+mbreetx/z+9v+8br9Gj/bzrNfY59P+jd6s5/TL9gOs
7/z+9vO8br/HeLiee39cP/15Xa/8etcH8wPzV/Nbdj8233R/Z/c/80P3UzY/
8f0Q+xnmI3r1/Qn9mU+YL/h+hPmx+YE+fb9Ab+7v7t++P2C+636tR/v3+nK/
1Yv9cvNP9zufZ/vT5pPuNz5v9oPND13vfR7sv5rvud5aP1h/2L9h1+OC+z3W
E76e7RdYfxhP6wH7N2z9b/1gfM3n7cew9bz5v/mP+bv1O5u/mO+bj5ifW1+z
+YT5vPmB+bf1L7u/m6+7X5tfW5+y+635uPfL/qj3w36nv6/9S38f+5P+vPYb
/XnsH/rv2Q80fr7/Z3z9942X77e53/rzGB/f33K/9eczHr7/ZD3mz+v99/0e
6yt/fu+3769YL/n7eH99P8P6x9/P+mThYyfPuerMH1KtT+9917dV0t8vvXbO
8onfbE7vb4597MnMwd3T3x8tf+iXE4benBXX0+7fp5z55pCZ+74Pwz96s/IP
v6W/32l9cf+BK0+vfMmEUObykx4fNTj9/c2mrVYcGP1v+vuZC86eXbXZ01vi
+tn9fOBZhy/pmTE/zKmT2fWleenvT1oPzLv9xQ6h6eIwte2Rza+WTX8/8vpi
3Yq227Q2rqcr1Rr6aPubVsf1svt7iVY7l/T/bFWo0HreiM7fpr+fqJdy3S55
6+Uta8Ktr+fUL/Va+rzZsKnUP+XCwv+cN/jchpVd96c2h0rh0W+qHTfnP+dL
Tfvzvf6NOm0N5Qc1rtb72clxvXzVsnEnNt47MhT8+dgbv3py0FcH897nUTVu
L39+z1Dw56FmX33krxPPzw6vNyzyaombB8X1cvPdH/7yW/dx//l5LseuXl34
zq47wzuXnfP1hqPS3y/T4ylPt35k/KhdedehcWseeWBeXC8/f0G7Cvd8uOg/
//7gyhPufuq3UnvD9ZsHzim1bVn6+dKm2T+//Fl2OHvh0df3+faz1O/DLsss
XD8r9Fsy94NjXv40nLSvyaEeZ28PYyot+C5j9g/h3eOvbLH26MzQ/tys7Nye
qVC+9+qiyz/cEta93TX3uSWzw0MXNqj066mbwv4DpbMeW74g1H5gU+k3dq8N
Tzfo0XPpWctDi/VP3Nvvhbz5XLEtPW7vtSJ8/uS2tlP2rwjtFpX9eNY5q8MJ
ZRev/qjn0vDM8GGVsm7Nm99WySi7tN/C8Gvjw+Ufz/tcDa+1pv2p38wJb1x4
a7m1dfLmmY+m5t0xanIY93ajpn9PzgxjWi1o+fOUUeH1jV2enfTXtnBfhXta
XHNp33BztZHPvFojK/wVqtQ4rfc3qSpl9k049v6c8Oh7p7c+bvrY1JFOZ42f
9emOsOjF4xZ2Hjs1NXtb9bHtV+4MXe7+650fSs9L/ZTx+jGn5+4OlW86VO6F
CxalOpT/usiSsntChX9Kn/fFkezQ/ciSqU0KfZWaVLzbwfp/bQ8HGk99ud3G
AWHqI1cMeeGHbaFXzh2DJlQbEzL6Pzf1nxczw5xFb34+IEwJrTO2/TR/4eZw
+Ivhz9Z5cG6Ycmhdz8HVN4a65z784dFv/hy2v9Fwxtxp60LluW1u/jssCy+8
NuzD7QNWhYEz26faN1kZ/qny9KaWJVaEoU/cur3nL6vDJdOyj+sxcFm49twe
W057aV24LGfFgWq/zQ8X/XF6xwr9N4Wcqjsn/509P/xUddidjw3aFF49sLZ2
uz9nhfoNyk9/8NSt4eN/fqr2SqFp4YIJD04rVjczPP51739vWjM0nD7489O+
eXZ7WHNCTssFVYeGV9bszu330vaw7J6J95w8o2tYV3jKKU9+lxXuOPT6qFf3
9k4NfGLbSSV3ZocVZU7JqXD6xFSvey9+4ocjO8LQZ3cXuebTiakPih1V8cRT
d4avihYe8HCH6anHhtd5rFnI+zz//Xedc96Yk7rk+BaPXt5+d3jvoc9yLzh6
fupAtVMmPHBJbmjb47fGhectTp3zx4gfJvbcE3rsevrJRhctSX1791lt2v6w
J5w667WiTz25PLXpwVXDWq/ZGx54/toOpbv+f54/OViq6Iad38T5QuXznut5
2uufp/Z/f/mrQ3ZlxfuL+UXLuztkPXzJc3G99NvJn0xu/cxH4fS6XW8s0zO9
P/nizRMGDuubft7E/G3qsO65LWZ/GbrtPLdZuTr/ff6k8rRxYz7oNjqc8M6Q
T8v/mfmf503aXfZVi00/pp83+eqRs5d0vicVai9ucUWF+9P7m4NTfd4b+3D6
eRP7nc/Ou634OQfS67PXM9+Zs6fG7DC38ZH7Kh+T3u+sPapeoxfOSj9/Yv7Y
9a8prWe8Nzd0+vvc31988b/Po4wvX2lFs5I/h/ZXVbnjlYz1/3n+ZN3T31c4
c2z6+ZPfa7780m9HloW/58xp1aZjer90/NDzK775cfr5E/unR34+df7jpdPP
oxzb4IcLF9y+Ihw4tG3uWzvTz6eM3lC107v/Wxn3k8xfT8+547VKLVaGXy4/
6rxOd/33+ZQyR3W+rGje77v74ZIvdB2Vft7uym+zCnU7Pv08iv2lGufNWLXx
6PTzKTd99/hVta9cHxr/OqznR43S+7G3Di8y9LINi+LzKdaL91b+u+Poe9PP
qzw4o/fG81/ZGKbe0mNFmW7/fX6l0T1VKnfusylMGLyo7XUP/vd5lVeavrz9
kewt4fuix5WqVXJGXF/WuLnspx8OSD+fYv/p5hn1F5x9Tvp5lXnvXXpw0dDM
cEWrOjk9Cqf3f8849sst3149Pj6vYr15xz2/lepwQ3p9mnHmrLuqLNsWSlSZ
WnF4j/8+z/LAhk/a7Gm0Pew9+PSRD2798j/PrzzZtPyy+l2ywsfHL/z6+Oc6
xPVp8xv3d3x+0KfxeRX7Uy8cXHT5jB/S69l9P/W9/9Ubc8K/b7xetd6ZA+L8
9vsvPipTZMyI+PyK9WqrDs3eLrsivb79q061YVsb7wjVzx9601+/jf7P8y1v
n1p0zeeHd4T6D117MPOZKf95nqVzv2+vPuqCXWHR7U8+8EyzWXF9e8vo5Vc+
9WP6+RX7V5+VqdW5Wa308yzF958+5sLVu8O6c2oVevzY9PMt9e/t1fGB/enn
Wax3+0zYumll0/T6uPSbI4//4K/ckDGh6KP31fzv8y7f1Hrr2vDRntD6yiaP
XFx92X+ebxmx7Pxu34/dG9755JmmU5vmhCO9+j5eeNR3qXZ7H7mp7m054ZNL
7/y9cqdvU+1K/6/ziCrbQ7O6vW5/OjUsXFTx+xMvWZcZTmx/9q337fwx/BlS
3z82Km/+fevR49dcMzkc2Dti82u1NoVHpk/e/clzC8K732547PRP14eTnp22
8b6VS8LB0rVLr668PhQ/dc2B0j2Whp09XhvZ4+yVod7q99759tdVYUbOM4M2
tloeinZu0/WGPmvDmhbtj3p0zZzw4l1jTu5w9ZZQqO7GVfd+Pz103FPnzDLZ
W8NdS7qd1unvvuHOp365a+S1efOYtcWW977v/dTxPVc1qvRmdlh7eFKbVqOm
phr3K/Jpybz7e7FhR059d8WsVNfQaPQNZ+0Or/U5/HzxD5el6nw4v1DX5nvD
Lesan1z4i2WpN9acs67ry3vDkksHTdiWkRNerdD0336Pj0jdduOz5a+YnhXK
t5hQ+qb724QjRS9/5t9pWeHg99fcPmlnm/DIu9/d8uM728P1ff4+tmrx70KL
uTsb1Km1LdxbafRvRT4ZH3K2Ds3ods3W8GaDh2vNunhWeP3RrotOKrM1fN5y
wLYjN84KB2uvXVo9a1P4bNGv1SdeOj9csOSRPx9tsiEMD10rD7ticTixyJbc
nJvWhOlvz6n56oyMsOfRLc9VvmxN+HVE238e3ZQRKr//VPHj5qwMd1UrVn3/
zavCo6dm3Xh5nYyw5sDjVZrNXhN+X3Dqwf1Fl4fv//n8mH1517fPuyx75plb
F4UZGZs3fPDrhrC6UN1XBvz2czj10kHvVz1vY9jx2apJg+6cF+75sOzao1tt
Dtd/tf6U7Ptmhr0X12gW2m0NX/701NnlW6fCrmpb5ze+KDNULD53+8GTx4Xs
Ym9MWdp9WxjTa+ZVQ6qNDb3v3vHBB8O2hQ6PfXn+3sqDwtAWX0/+cPn2MGr0
JXv7vl4rtFw0/8fbi2WHv2b88nnPvZ+l/ml98JSVqeywOevMwpteHJVqMqXo
ieuv2BGarzzv4z2vjE4N7/L3ssO37wi1F53wcMNGk1NXn1v++F7P7QwZDY5a
s/fKmamDrzx43ANDd4XGH5Wr8ObB2anio0548ObHd4e/9v3+vzWvLEzlNv68
Qdb03NCg1N/fTi/2c2rOrNPPbrIzN0zafmBArxZLU6Nm/vTQV4X2hu8e7Xjq
sv45YVpWoZH3HjcsdcsXRUpmjUs/T5JRZPawy29IPz/y+cpv37z7yuwwruGI
zE8vejN1T796q67cl95P/f7sHT025W4Pc4+65tn+Tb4Mnc/Nv4Cmn4ev/Mru
UmP7bA0lK13at8RrM0LRZ7oufn5K+vn3Hi891Lzzj3n368HTPj2t3dzw2uMP
9H/9urVxv3RI2ce7VCi+NnyyZ9jur3OXh5c+brn/nT7p59GXj9465r7eq0LJ
wYdzSrywMsw745X2l5RZEvc7V6xb0v+PvYvDZ2HOexPP3xBKrerw4cCFE+N+
ZPcfZz5Y6omJ4Y7bWxTLuXRbeO/P+UtPbfd93C/c0/GaUo2rD00tPfDXk/un
5oTtOy4d8dDX8+N+3sIBf0y+efH81H39uoz888HcUPOv6Rnfdci77p926ZKS
TXukpg6YU/rJJ7JD1adeqvjv3q6pZZnHXr+/VFYo3PTTsl+W6hN+rpx55Kqv
0s9r1KzY4JxjW28LWw7tGH5L0XGhV/eihR5tsy0cPumtux7LHhsm331p9fF7
toZqd3R/fHy56aFhOGH+nKVbw76BJ9a+/avpIfPoXpOHXbwlnHDGt+GGQXNC
4c+HlHq5VPrfD7Q9/vVCl0/ZEEbvmP/ihjcXhRaN+tR5Z/mG8PbwllvX1FsU
Wt54Ru1OP6wNN/R9uXqV+5eH31P9V9dvvzb8efHAGye1Xx4uuq1UodeKrA7v
bcytUanwyvDC9I9qdTmSfl7jhRG1Mm7qnhGO7Pqo1sLX14Th31zy8V1jMsKN
Zep1a99gTVixcGL5G4ssDU+d3n/eGd3Xh+aF77n+lplLwt+v/Lhp8aj1Ydor
Iy+75tf08/udpz5Qf9+F88PEmRdcfX7RzWHEml2LakyaFb8/tXrwObdNmj8z
nDpqY5P7G24NqxY0GFb+slnhomnXfr7wlq2hQ5keX+fWnxRmzdpepk1OZlh8
/IyPxh83Kbyd1fSGlvszw8EK+0a3zJvH+v7UkX/7dTu783dh8wn9ss/utz1c
saNR2U/qvxe/3zS30hu7J1VvHi7O/fWHGX/mjWPX90+ed/iNMLjJzO0rN2aF
mzr1rFxv9ODUuiOHW+R0zAmvbas04vrdg1NHf3Sw6+td8tZrk1r0/aXcxPj9
puKvn3ThvEk/phqNu6LyxZV3huXt3vyu2ZLp8ftHj8yZ/eqGnBmp6pcd91v5
3rtCzQrvXP9N/RmpK06/t+KW1rvCVa+2u+Dw4XmpTlU6rO9UKjf80in3uDvX
p593L/FTq8J3912S2v7Y+A7lFu0Jv+fNli58P/18++CpvXfXuzAjVeupEtcP
qPJLePihifU7L1yeGjJ5Q/tdJ6Wfj/imTK9nO741JHVCpWNadVqQHb55evn6
yg/0TfWY+Hfxy7LSz0PYz5rZ4cH7nx48IHXhq7d1OatrVmjd7LcVqzq/H3av
v2XBiLvTzz8MXXF78dxqmaHU/0bdcGvu1Ljf9e6NGy8YU2RqePuq4g8dOrQl
DN/TslfPw7PCjZktxrdqm36e4fOdJVp99cC68PPHnfZkD00/v/Bym29uCc2X
hZ9eHNh/xprV4aHbM3Y+UW5F+O6k+mvffyj9fMKqMoMnNb92WVi8bcD7f65f
F7+fMnXrx4V69FoXKp5Ss26lb9LPI9gf3n7msU9Wv2pzKPNSm0Ph+fR5xbWG
Tz1q68NTws7zGn76Xqf08widStd84uWnMkPRz8o8/Nab38bvd9pP7l2z7Sm1
h28Pw9s9ffEFE+6Pzye80//6hdm1v0w9P3tn5icl088jDH143NTzf88OTbrU
q7Nzfvp5BPvP01/e13z/TTvDDdt+ebNJifTPg/tf6TeyG9Wdm/rlhVeu6Tc+
/TxCxodXlpjz4e7Qfm/DzbWvSP97dvvV2wY3/rn3mj1hzK2n9yt5TfrfLzaY
d8uMoZXy7h93XnvK+IcHpSpNeq//t3dtD7/nNHqo0wtDQ3bpOve237YtVJt+
9t+nfjQq1Pl7/phrT9kWfmiQ1W9ojYnhjybvP3PaoMzQdPAde3//dHL4buwX
7xRvtynMeuLE7h/8NT+c0PXc7J+/3Rgu6lyzaoXvFoZl1c4ffl3edX1TxqAu
bx1ZHCqe3u/UPVesD9X+WHPNpUOXhuzfLpqf+cjKkFX4wux1P6wKdyz6umyv
zivCGT2rVvvh3dXhlNcHHSi0Oe8+MuX5zPvLrw0zTrn/447zF4T3yx+zvnbF
TeHu5vVLPvLa3JD9YNUOv2zaHM44/+Gs2Utmh7N23bd6xtgtYWCbR1/u8+aM
MOm9m8O4kVtD9i09Wza/YkS47aaPq19dYXs47qdvvp+5/cvw6sohHxc6Lis8
sOeBrhs6fBZOHjC+Wm7LrPDcgBuLbT23TapGhaXdptXODgPWnvpDv6bjUwt3
n/9B1QU7QpuSx3/y6wlTUn++ee3mEwfuDMdOP6ZIiYapVPfaN3c5ePyu8EqH
t1tV/Xdmavr6RzfO37IrbHjulQUTDyxK3f3ZkLU3P7UnlD52UslfL1qWeuvy
meWKV9kbZl9ddXL1Q8tSZ/66ZPW/X+0NL5zQefX1B7PC5olb/ndHtVqpDnfP
y104YXvoeHfPCbunfRNOHraw7ZeNt4a759bct++umeGWjWdf8NQ9m0Pjamt3
bL93Xnik1wXXnzR8Tbhiwo+ffVg/I3Qs+dUz5cqvCuNbHPPJsWtXhtb1Lq0/
MW+9+eW9na69PG8+VmX0vYVGnrs4lDs+o8JXnTeEP5+4b/65LX8ODfrldmrd
cGNI3TP55ROGpkLd++7d1f+8zPB0k9kluk4YH84e8cqORx7dFvbMnjf0ycZj
wsjXOnxyy9xt4azRHRZddOenqVV/bqgyZEx2ePzyq3p8/OEPqb4PFb6u8f9y
QvHrzqj+8tljUpUuOnXrPY/vCMNWvDl88XezUw8Patp5zB27w5Pz2jzU7asF
qQsKfdyxRdfc8Ok5r3W/+I6fUz8u7Ht1g0O54f8B7da0oA==
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnWeYlUXShmeGCWfmnHHNiooBFBQVxYyCWVEESUpQRDGHNawRV9aIigEE
xIw5gmIgCYgiQUHMaf1M65pzVlTU9avbut8Lf9TVp3N3dXV1d/XT71nv0BP7
nFBTVVX1WGNVVYtwPw3PWvFjzaDqclVVTdBrEVdVTj+/96hUVbVqiqDmqqrm
oF/jdyXc3SJ8jfjdGL8vD7dFpN8o3IeCGuL3vjXploLei3JGR3hT/N4q3FUi
T3383i/KqAu3Nuiz6kgb4d9H/K6Gk+adyLugKcPvK2V5jZbJb+roEXUd15Rt
o63/C/o9aHR05R5/j4nfx0faCYafUM5+3hv+NkETg+ZF0IPhPhC0VpR5om27
vynT30c7Ik3bcCcFbVCdcaT5vDrLpy7qfL+c7vyqrIO6fqhKvvKbcqhzgvXe
W852vxL9OoCwoOENVVWnRfjc+N0nfp8ev9cLmk/95eQR/Dkk/N8FrQjvm/N3
fbhbBR+/jfhvwt0u6Lf4/VO4vwT9N9L8HG63pvxN3P7hfkoZQTtG3N8Y1yhn
RrgvB92N0DRnmj8i/rug1+L3t+Hu1ORv6gvqHL9fj/TfN2Zc59qqqm2oO/w/
hrtCOdMTt0XQFUEfRtxUZC3i9oi87ZtStt5uTF7Dx7bhbh/5a2lzuF9Xsm1b
hvtp0LPxe/NwOwZ9FPk+C/eLoBcj/PNwJzdlGmQGeX066M1It3Ml+VcX/fuo
kuEfhtu5kvz4X7gdKpn2g3D/U8pxeKeUMk351Ld1U8r6J40pLwuVGcZugTL8
RFP+poz3K5lm03CPaMo4wns1Jw+PqKSs3ae8HRPu7cgnFHX0DNo3qFVQL/1r
GtYjqGVQ96B9gtYwDP/yQbsF7Rq0uvHdglYN2jtor6AVmf9Buwfd1pTtawm/
lMNV4/cKxlPWykFdg/YMWkmX/KtZNuWuYtmkOzLKOCJol/j9dbgrR3nDou/f
BW0QYesjr/G7fbgbBf0cvzduTP8v8XuTxvSvHdTb/q8b1Deoj3UPDTojaB3D
SPePqGta1LV7yNivUU6HCNu0MXUZOm334Pn3Ed62MdvxbSnb0iZoaSnTUveP
8XvDcNsF/VBKlzxLStle4r4pZb7WQZ2i7OlBp0e9J0cblgt62LBphqNz0D/o
Q3TAXPXAh+qhViG3s8N9JOiF2qRZyF+4p0aa1YIeDf8p5UxzU23+XrGc6foF
jUdvB/UNugFdEbRz0LimnK9dwr2yKefx4HBvZpyDhgTd0pTjtFfQNehcZCfc
a5kjyFXUMzZ+fxm/R4R7R9C68LQp2017OzSlnkXHnlOTa8a5Nakv4Mcb4Z5U
zrnKPD1JPU86xg79gJ74WPeMSN8x3ClNWV77+uTBxvUZNtlweD5DPYZeXSvo
cfmLe2G4M5syDW3pGe6cpiwP3j6GzqzLeTnTNMQ/ZprDKln2OuiHco43Y3pq
U+qFleL3exF+aPw+K+RidCX1QftwD2jO8FGVnGNHqAeGy3fStwv6Idr4Y9AG
zJNwvw+aEX27MOiioIeDhuufGnRe0PlB04MuMO7A5ix/bNR1TLR7m6Btg47V
3S5opuVdHDRLd0TQONYF5l2465ZzrWH9WS7K/Hu410X4uxHeP36v15BycxBj
Fb/PVf4IX64p1zl4P6A5f18UeYdXcq1rF+6IoGnxe8Nwt27OdeLASsprn6CR
9SnHrFvfxO8NyrkHOE79eHRT6pb+zdme8yPvxU2pQ09uzH3EqKbcS6xZznVt
f+WbPnULHk+Tf/CO9elPeQ2aUpMyC3/7Rt4+5VyTroh2DAo6KOjKoEOChgT1
Lmf4qKCxQQcbNyZosP7R5sN/QtAOQZ2D7mIOM7+DxlneofXZrp5BvZxD+9qm
ayPuiKAjg44P2t6yrjLfYUHXBB1uuqsNw/83+V/NeIa/k/mJ3zyoo+1jbm1i
e9vrb+E8GGTdWwZtFXScMkVZk53ztPPo8G+t/HUK/mxXzjV0dsRdEnRp0FGW
sbVt38x2HG5btgh6RNkkDzzdNKiDfOpgnoNt76b2eQvbt3ol94M/RN0tK7lW
/xi/14jf/UIH/1ROuV476OCI28v05EPO2G/eEW1+qTH1XIeqlJOO6hz2vOwN
2CPc3ZQ6kbKaKqlLloZ7rXts9tp3lHP+sz6/Vc69KfvDfZrz996RZl455fuU
xpTxNZTzq92TszenP7Tz3UruF452TuxjH+nrz42pl9HJfZrz9wkR/g5rcvw+
PsJ7N+fvYyP875VcT9YLt6qS6+eX4R7s77XDHepaQt6ezakDh0T4SUHV0d/W
4Q5ryjVjYfj3izTd0ZPs+S3/+0quK10jfMu6XFfYp14dv1ct5371z31rOfNS
zlD5uX4l917w+72a3IOc6T6gR3OuPftHmrfL+Zs1aG3HhTFsG3GPhVw0h7tJ
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
cveH94m/ma6dbRlo3YNsH/nBpNM+0tJPsM/1zmd4QZvQy+g/yiJ+U+UbHYTu
r5ZPW1o3YeRZ4LxcUr8MJ00dr/ldh76WxZnw4IZlbz/wo3+3tx2bGF/g63Gx
8beWH8zp9obRt4/FkGELa3Ifw75mlrY08ErYFrlD5p50fb6fGe1pE+46QavE
77XDbRW0cvw+nu+clPM3GInWEd4yfp9ZybfP5OV9MzYFcA2U28o33XwDq8CI
EPeAd9HcO//Nd81832r1cpbJWyrwI7SLe1zetvONP96yv+E9OnsWztngKSgX
m+Jy2tPe8k6dfdB/vNtmX8N9NXfV7K95c7ySfeFbKc2+jXrHe3Ty/Ohb7G0r
2Y6t3WPeb9v/a586ud952/t16m7ZnGUeUknbKG1pli/buj+tMx/+BvdznRyP
bazvXe/vOQdgCymZlvfUjBFvqo8VGwHGAxwY2BAwIkd6V8+d/eHeq3O/znf2
rhS/MUc8Nt9NA5PNb9Z2CEw26/nd5fxGIt/wQq+C0efbZ/eI1ec3+QZYDviM
m2wT+fqaF908SJ1Mvbzzpw7s09ho6NsRtpe2kg4djq4G5wLehe+eISd8E4Dv
tYHN4zeYPL5vwDfmuhm2urL0uniLAouBW+AjcKn74XK+IQdfeZh8Kr65iFt8
u3GcvKPv411jOCOBtyze7eFyTuNc9KpxyObffBuLu7y/eafP95R5q8957VHP
bLwln1lOW3dn/di3sX/PMJzvBkwp57cOZ5uX82C931BgLHDn+LufPOccAF6O
7wvwTTfOkbPNu6llgrvvYhs62ybScNbErsO3J7DtgMt4pJzYiln+pkzy0z5w
yGCSJ9tOvn/1UDm/x8h3lT7+ix0cFzs27/55/w/WljTYyrHJY9d5XHt0f/tF
n8BngdMC28U3ABhHvvHHu4Opygz4KH6Di+JblQ871oRNM810wx8UZ4sfPOgW
pun4l36CI+H+j3tAvhV2h/d/3P3Rv3b2kfcH8II3CPB1U/mAbly7nG86Prd9
YLfAiJOGfJSxoeVMkZ+UxTzZQX3xX3E86Czwcug17o74XgLtpmz0HOF8jw99
3Mp6p5mGvrPvI471aJp86Wh7O9jmSeq8d2qXvblF5/HNpdblvGvANov/z+8v
hQ5cnzKaM75Nkaac38GEX5s0Z/iYSmKC0WFgz0hPOXwbkW9gUg7fwZwob8f4
Xo13WbzJatec/LywkvxHzojjmyR865bvkmzE2gZPm/MbKfzm2yTcT3NPDV5n
F++/ufueUM5wvvkIzhhcLvhhcOjgdgs8Oy5x6CDwweCEwVyD8wXvC44YPDF+
8MSUgR+7C/joAs+OC+4J+wp5KAO7EXip/6lHwEqDhcaG8n+mwz7yun7sJpRB
HmwnbxiHfeVN/dh+wFdTN7YkMNX4C5xfgfvDxUbybTm/f/pMJbF0YOxuUy8u
co822n0b+cEGLtA/zvgCb4jLeQUdST+KdwC4tAN9Cc/o5+3ygDAw4cjH0a5b
T1gHOPOjXOuwJ71lP3mTzTttxgSbGvjupfISXHuBZ8fd3HECn72949RZP+PU
RT/YNtJuZvtIC4YdrDxhHRw/8PRb2B8w69vYz+30b+a6MsSx7GQc47F1/TLs
/FaW1cIytq5f9m3cQ2z3YZZFfaydh5vnSP30GYz7JsoruHMw5rzzYO3k257Y
IOkb/Shwe/ifMgzegae8w7EnD98OHqTcU96O8vRw20Qe2krdiyr5DfqnKumn
7XzTt2y+LraPsOL7xIOt42nXAt4TjVQeWb8KvCDyx7de0OncA890reysHz3O
3e9ByigyvodrKne85Oukzkf3b+dvcDV8m4b9IbhD1jlw0qyxPVwrcff1d2fx
hWAL+a4EcdhdIdZObLOUsbvrI+WwnnZ3zdzN8MHOH9rK+su7fdZ67jW4f2XN
RS/xrWH0FN8TYo8Fb9BVR6mvmBNgUdn/zXXdZP1k/txgHGdqwjhDk2aI5fP9
G+qGTzP9TRsece2jnwc7D2krdfONbHQGd8OUQ9nsG/leEnHIOBhe9oZ3lXMv
zndgmUPHG0dbOQdyLmT/iG3rBdv6rHGsD9i2Clzzc8bdaFriCpw0+cH1oqtu
VXZ554d9i/3lYmXoWutc7ByDR0eZBxvcy5bxqn72Huw72CPfYjz1nWCeW+zP
zfaD+QHemTnENwA/VzetqIyxXqOnCGO+cj7hnMJZA17xDaOu8mxv+ca5BD9p
+/rdKfZ428nj4nvwuOjN3/wm1Q6VlJfeyswg58Qo5yJtRMd3lnfFt8xPcJy6
GE8c+2hsxpwt+T4V+zT2ccjaXGVpA98ssg98wneNvInjDSnvg8Hv/OA7w7a+
n9vQd23g78HNgGF50veI5Of/NHivSNkLffdJ3CDfRY7yHeRI3zcW7/E29G1k
8VaynemKt3QDbWuRjrj2fiOKPRLtbu/bvZNtO+3jvcjyYojB+oPFXkl8Hm8y
OO/yzmRVcdW8A1lOjHHxFoU8vDlZQRwy7wZWql32ZmJF8cr0cxPf9A2zbM6j
vEFkn93Pt5sb+/Zvmm+isAdge+Ien3u+Kb7bAyPDmxXelPDugzeDo+Vj8ZaV
d6Sb+U57iO+wh/jm+izrZ2/IN5HB4xbfSMYFe7u5b9kPdc+2wO8C8C0HviMw
z3f1TxjX0Xfwh1nPOL9XwLeYR1jHYb77v8q4J81P2oX6+fYG3z74wXJ/8m0m
b8p5N86++jHbeLn7bvbXI+QdvBikTMCDSx37QcpHf8MucTwGm2eE7ws4a8y3
zh9t6yLbN8c6i+9G44JjnSUejX7ONQx84nyxieAQ5xmGn2/88l3esa5Ru7pO
8b6I8eTdDW+fwO+v6hjzjqh464NbvNHBBe8PngiZLr4Hhvtmi2XvAYr3AbjF
ewXc4i0CLm8XaAf3aicou2DuwezfY3lvKNd7GLez36s73rkELn8X58Nu+llf
T7LcLq7zrFPYtNYVU9ZSjBeYNXD6a7dY9u4TlzeXn/h+EhtZ8X7vc/Fi+4jn
Iq6HZZEHbBoYwImee7AzrSoODMzXF77/XFssWldxZKsY39W43mLK1rQ86ljN
OimLtwz/sJ/wlfdGxVsx3D/Puy1SXzBO4NfQI++K/WK80Tdg7HjLwFkVPBnv
0pjrvFfCjoZd5EHTkh+83juWe7/loYd4r7a6MoIsMDboL76xhB2BfQtjiT6j
Pt6uzdKGN8kyKHe6dwXw/i7rxx4z1XZ9JH7tQ/vAmPO+6jRlhH7zVou3V2/a
h+WUkZ2VX3TuMGXzLHm3t2H4D3Ueoid463GyvCb/Kfqn2BbaAe92rF32ZuQM
20Q/dzKO+k81/662F3+z5ZJuheb8j7C/NafevFKd185zKnqRN0b8hxBv3Pn+
IP+Xwzfq+Q8c/ken+H82fvNN/97ur1jD+TYiefmmP+sj/3lW/HcZv/nfCGwV
YJf5Hiw4TP5Tp7Cb8hsbLOVdVc5vXPJ9cP4Xjf+iOE2+IzvgJGkbWMkJprlH
2wP/V4SdofjWOTqWfvPNccpjzrK/xNbKfnWC+9g7/M3eFRsh9jVsa9jYbizn
N4T4zzS+BUlfy5bD3Md++8Bfwh6w/N+1F8Bb8mATwR5CGO3h+xvwf6K/77N8
3tPdaN3TtD3eZ3hX92PYg0f6m/0YMjFBHmHbmC+feQc0z99845zvmS92rz3X
Pflxpj9WIj04cuxfpOW9efH+ELsL5yHORcSzf3zRPeRn/kZ/8q30913/iOON
wC2m4XuX+D+yHL6njQw87/6N9ZJ8rFl8Z36Rayiy9JS/meOMNfOce0P+kwkb
EvNtkm3l28j8dxo2IfgEv3gbepVyi02Y+TRR3t2pHCAD2H7Ii/0HuxTlc4+w
yDbwTa0PbBv7B+y9/M8TNmHG9CHn1Xz5C/8585KGcy9xyCdz8Tn7jj32VGUc
/VTIH3eGxbvEfr4R/8A3+JPdQ+Hn7Mh5k3PnCN+jF/+/NMv34Rf6zpu70/N8
281e7CLjZ/imkff8fX0fub9+vjMw23KLN5PEDbc89Ov5vjWn3AsMw8+bRt5A
8sbxXOuk7fwXBDbTBy1rRM2ybx5cbLsu891k8U2UR6uXfbtltnudfrZvhO2+
qGbZ9wwurFn2TYXhtmtf+09betpu/OfYrj/f4TelziOMd5YDHINelnG+/ksL
3ti/r2zvt/aZd6ff+w6V+NbymLg28pg8hPGmlHTUx5jzlpYwvinC/e0s99Bg
4B7RDyZutn7OZJzZuv5Fr/Eug7WccwwYI9q1vmNIPHLf0nM8Z+ZCr9/tHLnc
MtEz9KOt/ECX8Z2UVravjzxm30m7v3D/Pkd+jJQX+NFpHdWHvNH9QR7NkU/f
Oq5fWdZ4dTL6kLPBPPMhZ5wtPpJ3fW1H8V0YxmqUaan7afUf40/71jEtax/r
3lr2p5dy8f8cJWKs
          "]], PolygonBox[CompressedData["
1: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
          "]]}]}, 
      {RGBColor[1., 0.9499999999999998, 0.7499999999999998], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
quGsJeDOZ9b7Ef+RpsQnwm6wHe/ZrsGW97h1/Nn+pt9Zax+0nG+t93yN7fTv
vMogLmjI9RUcvlAXnF6yLfeJwbE3nd+Q68O+lj2XsobzHFPCznFM97Kf6b9h
4tEJ9um5hpPmbMd/T8dnHuUm73MGXsv94+KGXKMObGin50r6bsHGdtphAeUq
tHlhecKLbAfpWfPhBxaVRltEnpE9kPGdZr/OrfwEPOqoDIc9cVFlC9Ch0KPw
DQ/Yr/y7y/6mjht7rsv57vfSGQ9LZzyov4dn2JwdQ8c8YNhAz5g5Q37WtYs1
jj0Pemg2rdyaugVFLfeUMYY9Z1z8Jd1zuWvVw65zrGGsZY9K10Df3P8vmgYa
ZwPPhAd49n6M7fnRPKa6dz3+r334Cfexn8z7Mfcq/rF3fWM5D7i/PWZ61oWv
xNenXY+pdz/P3bnDyVkzehXDPKcerp9zZ/QfTvTMepj+rfyH7gpyP84sb1dG
gV44OuP3ihOUfb9jWO75Mw0bZjrSPOWeQv3KO8lD1SFAj+FYz+QnWO8Bnq9P
sC8n6YcWhlaGp9rCPNCVQU+kPMMvdSDQidjes/3hTe16EsepGzHEeD0tH3za
UL0DymSdYf0/y/XnLOccskrOSDhXYe6xFrMnl2cVw5VPDjYe8irkVsj+NzFd
ec6DO0h5DHKZUq4z9F+ynyHmtZ15n6zs5kTTsKZAX/7HdYF9AnoEWQ9nMKXs
B3eU6RjDW5QZjVKGtI/pyKuX9aU9nNWcYV6caXDOUd4f47s8bznTeDua3yny
4vDkzPltrTt4Ucq8qAv7KvsrtAz7GPsZ+2GpH4++PDQRtBF0E31zs2EljVXS
XLjQQdAD0FXQXLv5j/TbWA60TEmTkb6Uu51kn95iGYwfOvHo1HNGx1kdevN7
WJflXY9XsN9LffrJjtmNpmeMrzNsK9tHm48z71K/forx2Mvnsy+ONr9rGnM/
OkO8ZJ6xjrIuQ7M84FwEB85zr2BfY++5wD3mfMNY11nfy/3qQuMc4J5B2O9F
7iW/hntezK9zWzNsmvGJ84Tp8LPnXOxew/7Nvs5+vq9xKPsxyz/f+p5uex5x
brEHPmrdz7M9pxmPPfAW82WdGWXYEMthP59qHqRnbYRWhCYcbDj7/73+K9Pf
b37sr7daxvn2HfWFzoO2gCaCVmOvgqYYrnuH48F6wfiwb99mXsNMd5t1oU53
2+YH7YNRll/W617jjTTuXeYxzLqU69FDho0w7tn248P23WP25QWO0+P2y6P/
6qepprnQcSXe+a053rNa2ts5wnaerP9uy6RN4MU08YGzqzc8e9jIPZz1tKvr
O/sSOmI7qFu1iGt0qT+1nftVqYPVSz2pbd2jFvUfaeZxTWcP4e5UN8v5S/7t
Gfm55+Qd53XdZ3+YZTg0woLmzX7Y0XDyxWYTun/o+GHLCd0//NhOQqcPPT1s
OxGOHx29LSzj8ta8w9ZcS571eWkQdPi2NN4Cllnqym1lGPIMePUX69OeEeWg
Fzi3be2pfwPbzPrB/fR3XT9w33EdwX3bNeh948G3/il/yxrH/fUPXKtmGI/9
gfvm3ItHBvC3fQmf/5f88k2mI83f9iV9jTxglnz0tZb/lv0EbVfqTm7U1K4j
uaHtmcv2Qd+x3tH+Nxrb9S+hp+CLkdEgm5ls3sSDt4UOQ5YAz/uldFmpx0nZ
7GnostxlvjVxh/0AGRD5ouvA+cGf4nFLfZ5vcm+bO9srNubZD2cGnCfMPoty
j+NciLOBfzxzIx1noZyzcU7A2QLnbbjE49xoluU9a374OevjjIQ0O7jGL+5+
TTlLuv8iy0beDO0BfQ2d/ZR15wyqvGtNvF6GL+b+TbryrjkuMuOdzbu8241b
3uFe2ry+a8k+YZ6zPyFrQ67GuSXnMdSb80XOZTmX4z7rok3t92IXca5zn3Ix
5zR41NE5zb1P1oZvxK15xH32S2RwyO3AY3AFvGA/5x/jx75KXYgHHs8tTnHm
yThQJ+5KLO4aw33chV1j9nRNZB3d3XWWdZ3zVNpB27Ajgi0QdMP3cj0lDXNl
/qZ2OxO4rDfYeljQuc48m9c1BjsRlEkYth4WcA1gPg9wrYR+ukd8fbuW8jjW
EvTGsbVS2r7CnW0HqSl1atGNvc5/2LCBb0B2j5yeMOzjYP8GXfT3zQt9dey1
lDbYcEtbazOMV9rEwUYOutPYRcF2CnwXMnpk7ScZht76sdaPuhxveaXO+/WG
nWxfolN/ounQqR9kOsocYp2oyzDjUsYJxi117W823mDjUt4Dtpv6lTbpPrKf
3rIvfpfHQs53lP0HD3mM5RMX3ELGjYwc/gT7PtjIKeXdd9a3y7jvcz4g1y5l
/LcbjzXpbnnFL8wP/y3WizGA55luGeMsB7tLxEOOf4pljHJcr3Y8sUVEfiOM
V9oqIq97TFeeq5xqeurFOU15DoNbns8MN6/SzhF5jXDtnK1X2JT604wffC1n
U5y9QGfD68IrQxPD68LjwlfA09Lf0OPw1cSDdoanJV6pS1TKEuGx4X3hS8iD
9NDs8PzIA6DxCccPHc8/0sMLUQ5y21J/CN4amSTjRL7wPehclvqJ9zrfhts+
+F54pvuNV+okUVd4oQcMg+9BpxO9UXjdT9w7b3H/ZN6fYThpGrzfM5uPakv7
VmcUySt/anrmPGsl61ObtovgY8FT5M/IZpEZcB52YX37GRU89jT/EQ8ZwfnG
Q67AWQpnKsgzznLMHnLu4p/qGBLvMeOS/i7rwrr1h+XB0y/Xlnr/pxbZX5/Z
BuS6xIPOuNN0n9m/X9m2P80DWo2+/9ow+pS1f6b99a1+7kV9az9i8IK7Un8X
OTYzTU97HrF9c3vXiztwc+lyp+1b9VHQZ9nA+/cDvNvQ37sO6O0PLMO8u1/a
LtpAuwPovaAzhe5UP+0tlLaaupoGHRj0s9DTeti4Z6vrcp5hTxh+obouhKOj
tZr3SLhPwp2pg/RPNRxdLnSE0PMq9UNx0RubZn6lftxFxnvacHTJSp026rGe
9gSwO7Cw9gy4/0E/oReHnhj6EugeoePD3Yq1vKdV9Y4W/pmGlzpE99vXpa4S
6eu8x8V9L+weravNh76VtGOBv4Ph5Pug5dPX3AehzPIu1Br2DWWiF3qaZZyq
/37/0YZnbHeps4Nb6uTiotdzuHUp7Wmt77hyX41yGJPnjYsOV733ymgPd6i5
x85d83XtS+w/XOddJe4fXeX9Fe6njPXOCvdTJnsXqrTZ9qb3pLBzha2o/1TS
Ztsrpp/i3Sbyvda8SY9+yq/K+bG3RxxszaGzgk7Pr+rC/OZ5APo46OWgy4Pe
Dfo3+NG/QS8HP7ovhKMLgw7Jn3Xt+jV/Sa+if/J7Xbve0x/SoOiZzJKuRY+G
PKhHF+cZ9ivQE/pSHNlHOyPYxWL8sZOBXYvvnK+lrtlDzidwDtsXpU1E3NJ+
4cHOmW7O7/6OU1/zXdu8Sf+D+TH/JrWmvUJsyWHbZZlK2nrZQ3sly2uDBLe0
3YK7YiVto6xoGyZ6P6+07Te9ud2e36uOJTZYlraMqx3z0p7f66bf3fIpu8G7
WuAXekac8aDbWur2oetXnuEd5J5wgH72g/31IwdHd6TUf8FFRwX9EXRWjqhP
WThnhKXOCG6p89LH9Owz+5nvpZbJ2SA0B3b7sN8H7YCNQWz9QYOgA4SeETRK
L/3QGdvrh9bBFiA2AUudG8ronFeNZtvFgTYib2wJnmp+6B9BK/GP9NArlEk9
sItU5LYxWz5OHTnbhG7C9mGLdv6w7YcNQOhc7HZiJ3Qubf59Kq2MbcDSbihu
aZcUlzTQztgDLO0U4pa2SHFJz76KfgN6RpdbF/oaWhWdMHTBRtmmnd2D97Ev
oFupV2k/FZc2sPehH1bqCuGWOk17Wd4Z5l3qlOGWOke7m/40y6QeG2pnp3Df
q+nvpp2d2X73y/Ie7QbOuSbvDK7v/beNjMcduI28V4hOF2sD/DLjhF1I7D6i
3wV/DJ+MbhXh+Jvdp8mXcca+JHYly3u/hL1RpP7dWkXyoeOdG/Dy6MUioyr1
YvHD340zXqmDi/8F13j0ZN8wHWep8OZXGu9Fw/E32lbmZ731Km1b4nZ2Pqxv
vbE3id3JzcUVbEpiXxPaweuLs21KEl7amNzMeIw59mg3cF51te/A4276a4Z3
E//Iu6e4i03P7s3t9nA3FHc31r9espr/b5MJt8m9sMn6wSugw4d+H7Y5uafJ
Hc5S54/5XNqoIq85LHNj50BP69HUlrY1G9py/3eoZ9v6fN58sUn6gn70Nb+S
HpnkffiB3k3v6/31Md5R7+M9/KP+dS//aO/SX6s76F/33g/3TvwA873avEm/
ojYclvHOfH/jYdOB/9ggu8Iyqcfz1oN/L1o/yoHWh+Z/okh78tiQf7SSNiPx
YzcSewCHaFcA+/LEIXyqcYg/2nDaSfhg/2NPG3t42MW7yjYd4T3+ftZ7be+y
ndQh7xaeEN8Ld0gdZXSVufdyIuH+/6Al/V9WM+6J/iePk81nuHrOg+ryjhxh
3F3EttrkStpaG2ddqMfb/ruukvqf6MSy7zynXQH6rizvi2r28VD7n7sFpEFf
lH0Qvds363Len+KeSF1GWp/DjU/+G6mjS/x3LH8Ktj3i3+rQTC3p4j8tyvo1
4ImAaQErx7+VrAMufuyRPBtjOTnG9Lki78A+FfC0cVY0/iVF3lF/ush23R1w
TzXxhjg/6K6kbRHsz3RpTXsfq8XcmMQ6Gm7X1vz/Yfx/QxwFxzeNf5upV/xO
NW2wTKnmHQ3C6DPC+e4a3+8afj1j4XwgDXKmrVpT7vuWc4awrVvz/5rx/03L
JIy7xi+F+3I17ybjvlLNu8m4r3L/NfJ8P+p1bzXte9CXT1bbbd+XtvBxsbuO
fUzkrY8UacMAGyXYDvkl4HHHA9sajBE2L54T38mrc2vi90ne/ezs/c91/OY/
Ln7uif7lWD1TzbvSLzhfuU+NS9sgPJjPhKHjP1y8mmW6Z6t5f/k55/3vtu+/
1bQd9F9xAnuJlzk//zYdaZBLze+e0NP8uYPA+GCnBHsl0O7wivB28ADwHvBS
5b13+DBocPi98u4IbikPxoX/g+6EjiQ9tPjj5vubeZO+TyXpLdZjaPbHjIfc
93X3w96VtDVIPNZmymfTYg+AN4Nngs+hjtTveTe18k7/P8ZDrvqy+zAy2unu
z8hqX5W2Rf5KOH5k6q+5n0M7PCsP96P0+9S69jsk1Ju7AvCl8KPYOIYW3LiS
tkPXsg3cT0AuUN5X+K6u/f4BLvzBlbaH/ubeAPsP+XLngbxJDw8GrQNN9D/r
Qj3gz9qkg+DtWqWV9m7LNYG1AT7pGdvzl2OFfwFtBsDLwQ80t7Tb/8CF7oBv
IL/SxgYu8eAzCGe84RXnkO5ig31eGgd5/UvSPpw3vCiNA25e7lrMuf/OrSmz
2qU1v89uTNy/zHjMaWzpXOR8utQw8P4S/cyDi/U/aVz85Ee+yMb2DXe/1qS7
b6imXR/s+3xtGHQ4b2HwrsH4Sr6RgTuhkmvZcaZhjbjAOu0R6fb0PG66cSdW
shzy/Kwp33Lg36RKxiXNd8qd+Eb29LrhVwfcVk37Qtgb6hvhfQI2bsl1Hbs7
2N85OP4dFLBlc9oO5xua7x7DsdXDP+J1jPANAx+2DLe5aD8relH6GBxnzJqK
XIMfKNJ+6jXur/eaH+vhXdW0k0Q97qym7SX8t1bTDhL1pr7Ue2HtUuCHLn/D
9pEv+8Eg16Bbqmk/ifQ3VdP+EnaZ7qimTSfKuN3+wH+z4aS50TEkzevVpNvY
t5B5s+bNa/9sIf/FXrFKLffJtaNPVo7v31vzLi429bB/dU4t9xXaTV2Z29gx
xzYe4eybK0YfjYw41xZpS2H1WtIkXxb5/Wdr2sJdtpb7MHv/yuYJjiDLQ/7H
/V/szWG7jrve2MjDz91ebOrh5x40tgWxace9b2zjlTbwcLGTNyry7q2dmj72
PX3OnXHs9JV2+HBJzz1xyiQMfEcmhazx4yLr/HNr4iNySey2I3PCfii2SJHn
XaUfOcs4/W1tabe0tS15F+6HcU9sZCVtpWJDFb6nj2GnVtIeKnZRn2Udb5lt
xm62/Ga8+f4mrXRLkXKWCYZhGxU7p8hRoZN4dwl7Z79IE91ctL/LQhvWbMs4
v7YmDg50XLkDy/1t7m0jy5loGUfVchwZ28Hh9lR+Ud5t5q7cKOu+s+tEP8f1
jIi7ZC1tyGOnA9sr2O34W9rqjiJtePAP+1XrwZ+g99+a9hv5Btc4D92wlnvj
0pFmaHxPKtrtQmInEvuH2KPExiR2sMjvHXEC+5XYhoQWWauWditKO5Kk71Ak
rXp3kXYRsUeJPcjvwt814leLtFdJ3qX9S1ziYccQ+5LYNbyglnfVqXOXtqxz
XZH33NerJd2xTlvWYVZr2slfqpZ8x1/W8Rlx+r/WG7uWtI85+Ze01e1FjgFj
gWwJe0zgO/sX9/GZH8wZbAJg45I5gx0AbHHix67/4o7L6m35/WPkvVzkOyy+
rynSFiV1wR7nJbWUW0Hbl3ZCsRu6eKR9N/7/UuRcetJ6o1uxmWep3dryu7HI
NZT1g/cUsDmJjVHGDLuR2CTFX18k7XxPUfl/+6SE/W1dZtuKhSYLeFpearj8
1JPhXlPL9oGX3Dst73TicnfzNPF0F/kR1iPWc3hC5IzIF+FtuGMKHcp9f+wg
YJNgYC3XTNZO5BRHGQ/ZB3dOuftKOLwc6+rploMMkjcS9rQMziK4W879eM4n
9tF/of+4H1/aEaDuR0tPda+kDKWf5fHOwB7me1Yl5Zj4z7DM0r77boZxDrG3
5e1aZD1fKXItpk3smRNtB3d6+9dyDWT9frSS7tRK/oMnZz0Hf+GfwWHwCZxG
xkz9uIvbzX7iPjD3ffvVMg3xtioy7QtFroX0MTYqJln+QGFD07PerOu49jUu
fuxtYI9jkH3TxbK7R74TIuy/RcqWBlqX8q4yd5dXkr+EH9yuyHa9VLTfbaZs
+HDWP/h4zoWwBVDe9d/LPuXdj00qaTseGTlvxfG2G7Lv0fp5F6Sn8U5xH2Dd
H1FJu9nsDZylYKujtJeAi12PceIC7Tvecjar5LkN4dgb4A2SHpZxtP3NnWlk
8djLxjZ2X/eu2X7xe7atDcOp6zHiGnkdbDt4m45zMuyvXdSS52SX6D/IcPzH
WCa81ZnWq7R/gIt9BfY35jC220s7GtSD86JD9GMrHbvg2Ad/0fjsiU/6jc33
kw3H3vhFzpvS9gNuaacBt7T3gFva4TjY8qa5liD7xhb71pY93LwZG866dnJs
sNW+lfF4G2TzSr59AA6yX7B+DHZ8CMOW/ZamOds+AIfgjSh7bff9p23XUPMj
DfYdsfPIHoOdR/Yl/NgvY89hT+WcgDuu63pu0Fk/5wlr62cseQthLsd2Dv09
/cdbB8iHRinHQJ7DHWnkP4eZ93rK0NcyX2TenDmtqNycc6//KAfnH2dlnFdw
RoUcmnMRzrdWU/4NT7iUZwVr1Lff8V3TMg40Lun3M+9VlJuTDt5xf/+tqvx+
JeuBXH8Jy0BOv7x1RTbKe2ZHKS/mna3eyo/76keufJh+5MiH60eufIR+ZMH9
9CML7q+/fJ+sv7LhI/Uj/x2onzOA5awTZwLL6kd2e4z1Q247SH/5Dtyg5vZ3
4I5VTn28fuTWg/XzthXfyLXHt+Z7V/A+nEUsY3m72n/4N7I/qB/nPIvbd9Sb
M7YJ1nuSfvCSNz/Kdzlwyzc0cBcUf+czHnJqziBLeyG48PebiHe8uYE8e2Hj
7WA49SjfDFjSuTSv+ZbvCizlGrq48VhDeZOANw3AUXg8eG72zzbxnjnNGyGL
uH4spH8b646fOYCsBFnIDua3eKX9nQPK2MXyl3aud7R+m9om/NhlmS7tCt5w
Pn2l/c059NWO92T9hxlevrE5Vtk8eDbO9ANNN0k8Y3zK9zbHGw+8udZ8wZvr
9DOPkQc1uEbU6QdveDuOs+yV2/I9wguKnBucE4wWzwjnbBy+gbMrZD3l25yU
wXrRaN91tu/rXDsaDOtjm8iXNw9vEHfRzYJP5RxmfXkqeCzsXaLTjE4h6zf2
pEo7UrjwLUfXkq6Gxu8i/wB/yj6A7arSntZqpkfHFF1TdDI3bk0eA5kb6zcy
btZw+B7k7PCzA4q8I/52uHsW+X868mbPwt4M98Ai5fuvF0nv8w1dOqiW/i+l
UWa6T0I7wPeWtspwV3IfW8V6w0uQDr782FrWj/Sdla0id4V2hKeFJ4Y3Qr7B
/eYhtaS9occPL1JuPbFI+TTf4Dj7M3w1fAP0PXwFaz90BzxDaVdsaeNd5Btw
H4R7cC2/GT/qCq8FH8PetrxtQ55NXZB1s+8tZxj76JKWwR1v7rmh435ckXrx
V4e7fWt+c+dhaJHvI70b7na1/OZe3Im19JP+uFryXN/JGzFe8EfoedMH6Ifv
blupxz72N323n/1Hv58UaXeoJX5Ax8BnwoftrPwMGR180s619EPvzGE8aK42
/dDE8BPQw0tK80IjbxBtuDL8j4W7fsDo+H6oSBq3MH1po589Hxq01bCRRcrY
Joc7HLlZLecGtGrNeNC2Lfq7mEezdBX8PfwM6bifxx2A04r8fr/INyDRh0MX
bkS4e9fSv4eyPWR00N8N1g/6u17/qbXECeY05cC/lW8C4MLz7avcERkj8/Yf
FQ6Yx/B4+M8rcr+6rkh+GvxnHvR0HJgLB7mnIc9C/rRfLfPtbDl1zvNZ8o7r
1LW/O8HZwCEV33Erkr+9t2h/7wq5+xjdPpXkJZrt0yv817eS78IeVkmdpiGu
ZaxjrDHMA8oea1ziXWVcZEzgdi/xexvPUbCfuVlbtmWeIu3Z/lpLmedqymDg
RYiH/VDsmE5UBsTZ1UC/kQXV2jLtJkXqViD7Q+6HXVbOjbDzuo15wNf8Usvy
kF8DyCuRYyND+8k6/GQcvrcoEqfnbEubtx9xxlLNvD6v5nkidmL590k134j8
tpZyYOzc8u/Tatq/5RyIMy7kdr9YB+y11lvXdQzHj5wCecWYKH8/8QMbgeDp
N7XU46xvy7I2KtL+JjZwsceJHdRO9t0G/sMe5/r2BzZxO7alnO3TIu118g/7
ndgIxQYr9kSRa/1Ty/ZjpxQ7rdjB7WE4/q6ma7GPP6tmv2AftM28eOuLN79u
KnJ8OKNHjs3bW/Dz8Pfg+Xf+Ry6GTGx8kXZDC/MCX36o5Tgz/r+LDxvaPuId
xp5QSxz5wzh8/2C5pKVfGBPqurV1410yzqI5I0am8Yj1Qp6BjUt477uKlAvw
DzkK9nt/ruZZImcKMx33hdtStvNDxN+tSJzGJi52gInLOTDn7Jy/s3buVKT8
ed62tBtMePl2AS5ngKwnX5s/tlK7dGi3xYvL+PMuGzKRMytp35Wxp28GGI4f
vCEfdK3fdz18r8h9jj2Ot09LW8CUgU3U9fQfZD9g+5N36063PM6r/6qlPAob
v5xflraccauOH2fDnCeDO5wZv1dN284zwv0gYNm2PCf5p0g8e7+aYYwr58ek
X6ktcaSxLe0/f1jNOYldaPLADy5wrkwacJ+zbfy7Oxa3FYm7lE8Z3zh29A22
nzlPpQ2d2lJ++3WRdq2rzmHsLTMmnMeC37SJ9mAPmXNc0mPnmfN7zoSXiHwu
QWe9yLMHzgWuLNKuMuGkwf4z+ZHmowh7knWwSDvArDusMXO0ZT9vFv9biszz
wSJl+rwjhc4oMv7H9SMb5S0l3l9CHsr7Sby5VL6rRBh7MrYFStpkO+mNH4xL
PM4nHjPfn8wPP/JsbOdiq3fjtqQlWplP8f1pfM8qUi8DOQsyG2RU0NvsIUsU
ScdMCHeOIsf90SJ1KIiLDKko8mxwapH0B3QI+u492vK7Lf4vWiRNfFWRdAx1
4B5S+d4V9p/nct9k7s9d5ByaVuT7UehGICe/vpKyLWRONekNaIZORa4p14e7
UMCA+L6iyL7hvQLeLeCdx5GVlHVhQ5m5h/3kaZa1QtT3ySLxFvy9wXKQncwn
LQFtCa2EDjx8wCau9XMV7e910R50CND9QR9nhu3DfvUU+4w2tEnPgM/I/aeY
nnOA6/Sv6N7BHvKBeWALu6P1pL7lO2SkaW7Les5bpPwbu93Y754ovd033LFF
ypl3KFKejX1l7CyztiFTRvbKeQJ2mLHV/ILh2Gjeqi37mf5Gxt/b/RG5zzXi
GXKgq/UjJ5qknzl9lHTDFm2Zdr4izy0oB9vQnGlcZdlzt+W+Nldb2tNm7Sht
yc/rfMOmN2sQ6xP7AzJi5MKb+o800+WPXpVGQOYL7Yus/0rLe9H24b9HHOEc
bEvnNPs0Z3eHuU/NXyTd8UyR5yLY7cfOOecSnEvBt3CvE54HWv9pw7E3jp4L
ND3zYFyRvOE+0g6DpC//67hd4npxoWPJug7fBc/1jPlhx3xV6SvorEfE93Nc
Xy4wPWcVox1vZHYTHZvp9j3+Z81vtOsOefC+yGTp/OFFrim8GcKbIKxJ8Dz/
yCNBPw4qcg0637IfNQ/SYOsb+gl6Clvx7D2s2dhjX1P/V94budc7KHf9637M
3YZx7s05AWcEXxv3Pu+d3GmaT7yfU96zub2x/c7KHcZDdwAdgimeZX8qfXin
9NFn7hnshewhM9wLwbnXqklTQZO94R4GfTW9mv+g4dBFQE/iCfc29jzisUey
17Jnsr+xz1EG+xx543/HfYt4b7m/kv4C80MvintHt9pO5jR9wvnRbbYDehfd
C3Qy0MVA/+JJ63Sd+zx14fz+Dvtgim0mjDN72sYZ/g3uw+/ZZ+8Zb7J7OO27
1vzeMg39QR8Nt08pY5jlUEf0A9AtQF/gYutI/U5xbNGtQKfgZuOh03CXeQ02
XakzcoP1Osm8S90H3FKX4RbzGmne5IW+GmMFbQ9t0tG1A3plPteaZ9z/S92x
v6QB6EdoP2jBZ6UpZjk20JDQneh7/WMY+mTQJ9Bb3JPmvjT3tp8wD9KgT0Y4
aUq9NNKU+nbwHvTR75Zd6pzhn7+ab2jx1tZ8urydNa8utqI6VfN9rC3Fiz9N
zxtB6NzxphZv+WxtPOoFvQtdfKz4Ae6UOrWM/4Km29oxmSGusJd8+a+x5Bte
DLyc3zUcWnBe12pwtpNrLvMP/q3kV3DhCaD9+U8+3AWfbD9yJ/wa/fQ7dD/v
XdCn1B0/+q3wD5w1Qsez5+1c5LxfwHW+1GWkrz/yXh9z7C7rTr3K+/ZTvO93
s/HAb+pKftxxvsmw8q4+d/ehDRhDxpU7y9zV5y7+e4bjn+E/0oP3H9int9p3
H4nLuPQfb22s4RoKnQS9BJ0AnfhhLeVTza5ZzEtoL3S8uBfOGxXsl+yx5TsW
0LO8gbGJYeWbFoQNNZy98W3lkG8VKfuDp0UegGyK/M+2nI/9/sRvysf91P8d
Yiy+op5tefeZc3x0nv4ssv5/hDujlvZJsHMFYH8E2yPIF2fU2v8RB5obPQDy
WVfZ3Xv+h2akLHgq3q3oaTvfVab3TpFn8eibwns/U8u329Bj4Tz9uVriD37i
8NYbdCQ8HHxw+Y4O+xy6Lc+Y9osi035e5LsYaxuP82f4CM6en7IsyuV9Dfh8
+Hjev9hY/6vSM6sXqXONrAbZyQmOCWNQvlNC246yXqTn3fPT5AlfVz78GufL
RdIr2Nfk3fNRxntTeTJ3LI4okr7B7uy90kfEe1w53agi3/U+U3kBtP8X8gLc
4UbGxp0bdMKZY6xn411/8bNfcyeee/Xo20837DDpBfjb8s0eeO7yzR78r9fy
bINzDWSur/u9l/OeeD9F/d6M//8rki6nfObiWNdZ1uZJzg/mCfrO7Gnsfzc7
z5iHl7oHsHZeaR6kH+1aX+pR4rJvXGHerOuX+Y/0Ey2Hdo4xnPTwRp84R5CN
c16DnAI97bedF+/4jU7Lt9GeV+L7G+X8fDOue7r+0X7eHYIfhn/lLaDVXS+Q
o6LvWOo9fu43PCFzs2uR40cY93C/MA7/kGnTn8z//c27fDcJF755uuNC/akr
bcCuCHL4t2wL40Q8zrb2dWypK2cF79jGl2rJB7K2ca7ykt+crbDWfeia96Lf
B1o+7YSuRbYCvzfNc3XOuJG/Y1sMeTzzHjvLv2rfBns48Nr8u6g1z2eg5Xg/
snyHE5e3SzmzucA45buevPP5eZRxZyXfsYcuJk/ODnDPN3/KIy22CL8wLnxq
ryLXDvTjdixSFoFe5JeGw6Mgbx6nfukuloneCPldaH2ga14Vx6bZNsr9LNLf
Yf2wsXaW/YA8HXsc3L++yrNa5ABnF8mbIw/+ONLcGnBbwKVF8nHwcx+F/xbD
Pgy4Wf/l8ubwju9Wkge+vpLziPdYec8VGvVA/Vc6LtxZ/MRybq/kvzOt51f2
AesQ+Md/0l1sG7FNtHmRsll0yi52rA50DlIm920+NW/6gns/vAnK+5l7F4ln
6MfxNihv9/KOK7Q1724yzscUufegw8ua/ZTrfJ8i1yB07pDVcbcUuQH5FuZ1
VJH4jT4atCv2O6HNulsOb9iShju9nHFCA0PLQbNBu/I2Km9+wgftaJ3gZTYx
L+7Cvx9tmlHJNrVa9rvm+Z7uRL+h63qanrdca6Zh/MeLA+VbsLwNe6TxyBt9
4R6m37dImTC6k0fZl/Qf95Z445a3g4+xnaQ52vDujseaxmN81tDf23S8Zcpd
It6y5d1a7jmtp5/7V7xFzPu0X4sX7GP9jEu9Z/qPPfAw45J+gG2iPX0sh7zg
TTa334nLm8e8mXxmkXIbZD/0KfeduNvEu8Dsf8jLl6m166mhl4acGpn0D4bj
f7FI/a5ViqTJwXXwkX5Hz5t8oeGZV8w53hnmvWHeJS7fhOaNaO5JcY+IcqD/
iUtevF1MXOLRl8TlPWfax1vOdfZrVT/9XtFPvxMXf/k286qGcW/nxUriCLrj
b1qnpyt532WW7rPWD/e5Sr5bje4++vi8nY3+Pfr12LD9wDUDvGeNeK+SPAv/
aD/2HPj3vm0gP+4S8dY2+ZEX84px4I4XY/VyJe8N0M6XKulnjfzOsWIsCadO
tJ82EY+3vKnXG7afcmgz85K8qR/zjbeiWevhm1jrWb/hmxhD1lf0A1hLkRMi
o8RmJbbMsBN2uf+RqVzW2r7uXuZ/2on88cZKnn2SFhoLfgxcWcD+uN549N9N
rrlbqHODvs0M8yCM9YI3s3nv+j+VtDOwciXPg/neV3ea3ycVSYsgMx5snqwD
JxdJ2yHfpV5jrNuO5k2/bG0dF7SPeG+bfl/M+clc5P1n9jPW8m2MS1+yh33v
XCEv3kcnPffC6GPSrCP+Ms7cFSNskWr7G+qk2d5/vMvNvrK6awp0P3VmTHCv
sP6Uz7gxlttaF/It3ykv3y1fzbx6mXf5jjvtoG3lG9WsHayvk1xjkWkwBvQT
ZzHoBq9SST4Z2QV886XSZ/Bz5dt40L/EJQ1nNz+0ZrobipRXEs75z8XSXtA+
8J/IWOBHy3eCy3eD95aOvsS4lIfeLTzNy0XKDnkfsnxDeE/TXyFvQ53ggZHB
lDwxLvx9+WYw9OZltqN8axEXmd+UImWplxU53zi35iz69CLvyWIjhzub6MGg
A/Oy4eNsM23/X2u+AQDPcn+Rsh32RuYH9Ac6kehOLtqW5+mcq5c8Mzw0Or7w
W88XKeukXvBk0Pg3Gw/5O/whfPAYw2k/PMBNxruvSHqkf5F6uqznrOvIavd3
PMo3lfFDh8HbQPsj4+YMj3NC5OPlW47Qa+ON96DnR5xNwUPAS8CvwLvAw8BL
Ld+WZxLocfynLc9v0DV+qki8u7BI+W5/6WDO+eGHyRc6fGt1YuCPt5dGfcW8
qcd18pP0xWvWHT5pvHUnX+4mQcsv1pZnEceYZqm2PLtCr4T1dazjjZznNnH0
M/EUfLpKXKZfOGNBp4Rzno8dN9KcL/7uK/3fVf0qaD3Owlm7nlE+v0pbnksh
Y1i6Lc+u4G84w3y4SBp5SNEu02QeznAuMsbXOCbl+5NH2zZwExzlnga6WXyj
gw+9e4L4R5zu6nJx74X7L9sWuTZBg3A2yx0P8jikSBqFfZH953rxrnzjFBcZ
DHTqyZXUBeZOAnwV59g3Go78BpqGvY39Fn5iRCXPvU4o8uxh17ak86AR56km
b8HdKmTHpe0kwqCbmqzT+uaHH7ptTuPdWaQO2QFF8mPIIJAD3VqkbsguRcpj
2Q9Y45Ezb+uaDc5tqdxmuP9Ys4cZl3gnOqdJP8Jw1t0m5xL42M0+gx5B3gz/
Ds8+X1u2a7Ui76hwV2WPov1NWerKnR/4Rc6QF2zLOzNrFklD0zfQJjfZr6SB
tiUO+j9PuleylxJ3xr/2YfSw0ZvmHBU9JM4PSzksNB13QLkbxhnajUXSiVsW
uW90NN75RaZH/5E9fLD5oocE73dOuBcXmRf3SqkLdWKPYB1FX6rNfeZJ63mn
uDNCWmGo+FrKi6EfvxU30VPY0n/QHJwfopONnh480zBx8TvjQvt2d90Gp7kb
hhwLHZbbXI9Jc3yR50bYyz+lyHmOXTHy5q0s9P7+D6dvQ24=
          "]], 
         PolygonBox[CompressedData["
1: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
ZXU=
          "]]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0ne8j3UUB/CHRHGvvcpKGsjeyU72vMhMRlZWycguq0HRLqFhFEWRUYSK
QmWUUQpNIymKssf7/PG+n3PO/f5+r9/zfU7RHoPTBqVLkmSAPyezJMk7KUny
j/xafkUDsqYmyStyJv/6Xzl9Q3UpsqtzkI1G+vyccuYX+Stb2UYTmjrTWL7L
YpqR06ypvI7/fO43WZrt7KBFnHOmuVzC/86U17dUv8r1nDarYNZKXYbfOcRB
cpm/J884U1HdWj2L2Zw1q2SWpi5LHnVbmVu2kQU458xheYRv+Ja7ae5MO/k+
S+lAXrP2siDnfe4PWY6d7KJTPI8zHeUyLjhTWd9ZPYdCXDSrYtZFXZ6jHONP
8pl/IC85U1V9j/o1XueyWTWzruoKcZ/qbvE+5L2yMAl/8Te72UMPWjrTXS5n
BffFvZr1lEVIx3Eq8h3f05tWzvSSK0nP7fo+8g1u4Cqqm/WVlTgR+xP7FXdr
vkpm4A51P/km/Wmtv19+SOW4F/3AuFc5QBblak7GrrGXHxhMmjOD5Ees5kHa
mD0gbyQjNfRDZJXYOarGXsWzmhdmjToTNdUPybkU4xpqmQ2V1WLvYodit+J5
zT+W11JbPUzOYwRt9cPl2rij+B36kfEc8mF5E5lj12Jv+JF9jKadM6PkOtYz
NvbPbIy8mSzU0Y+Lu46divuMPYrvNS/GJ+oU6qrHy/ncQir1zB6JO4m9ih3R
X47vlp/KrNypflQuYCLt9RPkZ3FH3KqfHN8pJ0VPttgbfXr2qw/wGB30U+QG
NvIEHc0el8XJTn39k3HXsUPq2rEnsgTF+Vyfg7vUU+VblCAnDcymxZ3Ejqgz
kZGSfGGWi4bqp+TbTKeT/mm5Ke6IUvpn5G1yhixJ7nj/+nryJ37mOTqbPSs3
s4UX6GL2fHyePDTSvxj3GPuhrh/vW5ahNF/q89JY/ZJcyCLy0cTs5XjWeNfq
VFIoyxWaLbI9
          "]]},
        "0"],
       Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{-0.07948994252873565, 
       0.9179824150530227}}, {{0.5963721264367816, 
       0.23723645999310988`}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->24], {0., 0.}], {{{0.06483477011494254, 
       0.4149412273782277}}, {{0.06483477011494254, 
       0.4149412273782277}}}]}, {}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[2], 
      PointBox[{{-0.07948994252873565, 0.9179824150530227}, {
       0.008512931034482696, 0.9453216100353485}, {0.09651580459770104, 
       0.7758186011449284}, {0.14579741379310351`, 0.7512133256608352}, {
       0.2514008620689654, 0.7976899571307892}, {0.5118893678160918, 
       0.57624247777395}, {0.5189295977011494, 0.6145173507492061}, {
       0.5294899425287356, 0.3219879644383199}, {0.5294899425287356, 
       0.5680407192792523}, {0.5506106321839079, 0.4969588123252051}, {
       0.589331896551724, 0.2864470109612964}, {0.5963721264367816, 
       0.23723645999310988`}, {0.7054956896551723, 0.2946487694559941}, {
       0.7723778735632183, 0.9371198515406507}, {0.8216594827586206, 
       0.8086256351237194}, {0.8885416666666666, 0.7074706136891139}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[4], 
      AbsoluteThickness[1.6], 
      PointBox[{{-0.8539152298850574, 
       0.7238741306785095}, {-0.8292744252873563, 
       0.36299675691180866`}, {-0.5476652298850575, 
       0.7129384526855791}, {-0.45262212643678157`, 
       0.22903470149841215`}, {-0.4139008620689655, 
       0.1688884725372954}, {-0.3786997126436782, 
       0.6035816727562758}, {-0.2378951149425288, 
       0.6063155922545084}, {-0.18509339080459775`, 
       0.5735085582757175}, {-0.1287715517241379, 
       0.43954650286232094`}, {-0.10765086206896557`, 
       0.31378620594362217`}, {-0.07596982758620696, 
       0.17982415053022566`}, {-0.0020474137931034697`, 
       0.18255807002845825`}, {0.06483477011494254, 0.4149412273782277}, {
       0.06835488505747134, 0.22630078200017956`}, {0.08243534482758608, 
       0.1688884725372954}, {0.08947557471264367, 0.12787968006380662`}, {
       0.2126795977011493, -0.060760765314241516`}}]}, {}}, {}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotLabel->FormBox[
    StyleBox[
    "\"TRerr=0.% TEerr=9.38% Marg=0.126\"", FontSize -> 21, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{-0.8539152298850574, 
   0.8885416666666666}, {-0.060760765314241516`, 0.9453216100353485}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6006106325864277`*^9, 3.600631791493237*^9, 3.601638290056026*^9, 
   3.60163834207041*^9, {3.601646523761858*^9, 3.601646568616969*^9}, 
   3.601726707729512*^9, 3.601726743809416*^9, 3.602773966262293*^9, 
   3.602846190771673*^9, {3.6028504890371304`*^9, 3.602850498703238*^9}, {
   3.602853442311399*^9, 3.6028534529869137`*^9}, {3.602853526990055*^9, 
   3.6028535527242193`*^9}, 3.6028560080337753`*^9, {3.637590031057352*^9, 
   3.637590032863413*^9}, 3.6375908086098022`*^9, 3.637591233597466*^9, 
   3.637591341179521*^9},
 TextAlignment->Center,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Y6WttT8WPbmUGyY2BGXfK8bet4fUE7UV8BVPAaDXChnjoQV3yErVG4r2ogtX
/MAWY+jgeA7XIJz5TGQ7E5kEJGdPqWyoXVOanTG8plPT3xT4fo/7clUs0wCg
ZWp8uTmXq2WouRgB3K/cGDHvJc/66OJ7JbWrq3OTqw+YclIFaIUIiaUTWxz5
Rlz3FHiafZwWkcHUf4MNI5QdRaURFmwgNR9GF+Op64XSMpgdhrmvyJIOTPVB
DOl04+yJ80cOOiHuOauBLXTZGpVer1Jr0ZnU1ZR99mKAJcj9MgZD86cLzMQD
I5cT76WVdZARH22uvqFe08dIJFlVgaZsfHND1RDmDNa3PPOTmnBM1/pntq5p
7RVDSN3KYkEqiHPKPPSeXp0MV+FJiFNUcyYtSISwj3vA+lQpdo2uJpZKzaou
uYAC230j1/hxL1rwAptsQ8PTk3ixro+Aoh8h7EPD0UUBddLG+AcBIsTpA417
8Ipf3HY84zsm2qcn+EhNOSw0LNJBYk1+iP3xh0MaupTale71CM8ouWUvn9XG
5DnMu1CFFVanAAPqk3nKGThYHSyu6LKzT1B8SIB3jYMJaBvgxpsHpAyrlOJ2
HLK0ncOz/CfokC3CPritIFuO2erQ3AYNf2vDBBgkQcpDzdhY3kLeIzfSxBJ4
THjcjDWdjXi/s/RUpzWX/5fL7XqsYind/yraRsJFQzdkd2iNzDps/opnHg6i
Ynp6bPCvcAAJVu+BtS5nm4WOfEkIEdDsV+HmbLg8F6tkI0hvENlqr9TtNwaJ
I4+ZN2qJijto4np5zJqLDNpCFHTp+ZgqiWy4vLPx16K0E017Bex6tnDfW9fw
BCxtZqpX39yva7PA1soJtTwOZRfFPv9NRWsGqJ4hr2R8U5XVK/x/U96alf2P
nSFoRSniW7nG+wQEnwv231/ubAb6pZjIyrvOT+reL9UXJ4crOsuTk31MgLvT
yDayPe91MDDVz926i89mPxE6+bab89Tk5KjLHZhzp2PZueP/ib1TqNsqV/ZU
ZawuC1OyiBePWLJjIBWCYCuoDMZSIyUdXctbXt4LuBAVdjHA1y8i6EjM91cz
qgZ1KpQD6NwDNc7y3FgxF+SgVgQWtGPNnqBLeEvFo/NXw70dGs2NeKBZMN1y
70FeVEqOXhOe0xutwlnbxWdLykPSjru1mPMNS4QWLn8cTq04XNDn3+pVWufw
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
ZG2tY1olncAiOlJ/1RlF3ut8sJqfGYP+H3M7V5g=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{
    "fTr_List", ",", "yTr_List", ",", "fTe_List", ",", "yTe_List", ",", 
     "classifier_", ",", "kernFunc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[LineSeparator]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "KTr", ",", "model", ",", "margin", ",", "nTr", ",", "trResults", ",", 
       "teResults"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"KTr", "=", 
       RowBox[{"kernFunc", "[", 
        RowBox[{"fTr", ",", "fTr"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"model", ",", "margin"}], "}"}], "=", 
       RowBox[{"classifier", "[", 
        RowBox[{"KTr", ",", "yTr"}], "]"}]}], ";", "\n", 
      RowBox[{"trResults", "=", 
       RowBox[{"testSVM", "[", 
        RowBox[{"model", ",", "KTr", ",", "yTr"}], "]"}]}], ";", "\n", 
      RowBox[{"teResults", "=", 
       RowBox[{"testSVM", "[", 
        RowBox[{"model", ",", 
         RowBox[{"kernFunc", "[", 
          RowBox[{"fTe", ",", "fTr"}], "]"}], ",", "yTe"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"plotKernelResults", "[", 
       RowBox[{
       "model", ",", "fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
        "kernFunc", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"trResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", "100"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"teResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", "100"}], ",", 
        "margin"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601712423380559*^9, 3.601712425008919*^9}, 
   3.6017125913303003`*^9, 3.601712706431695*^9, {3.6017132287897377`*^9, 
   3.6017132358907623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotKernelResults", "[", 
    RowBox[{
    "model_", ",", "fTr_", ",", "yTr_", ",", "fTe_", ",", "yTe_", ",", 
     "kernelFunc_", ",", "trErr_", ",", "teErr_", ",", "margin_"}], "]"}], ":=", 
   RowBox[{"Module", " ", "[", "\[LineSeparator]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sv", ",", "posTe", ",", "negTe", ",", "pos", ",", "posSV", ",", 
       "negSV", ",", "posAll", ",", "negAll", ",", "fnSV", ",", "fpSV", ",", 
       "neg", ",", "minP", ",", "maxP", ",", "a", ",", "b", ",", "c", ",", 
       "d"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"sv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"model", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{"Flatten", "@", "yTr"}]}], ")"}]}]}], ";", "\n", 
      RowBox[{"pos", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
        RowBox[{"Flatten", "@", "yTr"}]}]}], ";", "\n", 
      RowBox[{"posSV", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sv", " ", "pos"}], ")"}], ",", "1"}], "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"negSV", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sv", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "pos"}], ")"}]}], ")"}], ",", "1"}], "]"}], 
           "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"posAll", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"pos", ",", "1"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"negAll", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "pos"}], ")"}], ",", "1"}], "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"fnSV", "=", 
       RowBox[{"fTr", "[", 
        RowBox[{"[", "negSV", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"fpSV", "=", 
       RowBox[{"fTr", "[", 
        RowBox[{"[", "posSV", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"fnSV", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "fnSV", "]"}], "==", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "}"}], ",", "fnSV"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"fpSV", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "fpSV", "]"}], "==", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}], "}"}], ",", "fpSV"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"a", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fnSV", ",", "fpSV"}], "}"}], ",", 
         RowBox[{"PlotRange", " ", "->", " ", "Full"}], ",", 
         RowBox[{"PlotMarkers", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "24"}], "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"b", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fTr", "[", 
            RowBox[{"[", "negAll", "]"}], "]"}], ",", 
           RowBox[{"fTr", "[", 
            RowBox[{"[", "posAll", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotRange", " ", "->", " ", "Full"}]}], "]"}]}], ";", "\n", 
      
      RowBox[{"d", "=", 
       RowBox[{"ContourPlot", "[", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kernelFunc", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "}"}], ",", "fTr"}], "]"}], 
             ")"}], ".", 
            RowBox[{"model", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "+", 
           RowBox[{"model", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"fTr", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"fTr", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         "\n", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"fTr", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"fTr", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"Contours", "->", 
          RowBox[{"{", "0", "}"}]}], ",", 
         RowBox[{"PlotPoints", "->", "50"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Show", "[", 
       RowBox[{"d", ",", "a", ",", "b", ",", 
        RowBox[{"ImageSize", "->", "plotSize"}], ",", " ", 
        RowBox[{"PlotLabel", " ", "->", 
         RowBox[{"Style", "[", " ", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<TRerr=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"trErr", ",", "3"}], "]"}], "]"}], ",", 
              "\"\<% TEerr=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"teErr", ",", "3"}], "]"}], "]"}], ",", " ", 
              "\"\<% Marg=\>\"", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"margin", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
           ",", " ", 
           RowBox[{"FontSize", " ", "->", " ", "21"}]}], "]"}]}]}], "]"}]}]}],
     "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601712491613099*^9, 3.6017124993351383`*^9}, {
  3.601712548556274*^9, 3.601712563920483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tKernel Support Vector Machines"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.5998959933365173`*^9, 3.5998959950405684`*^9}, {
  3.599899231509494*^9, 3.599899234925165*^9}, {3.60015516447847*^9, 
  3.6001551698116207`*^9}},
 CellTags->"sec:kernel_svm"],

Cell[CellGroupData[{

Cell["Non-linear Mappings", "Subsection",
 CellChangeTimes->{{3.600520519924685*^9, 3.6005205222261477`*^9}, {
  3.602831429535729*^9, 3.602831434073917*^9}}],

Cell[CellGroupData[{

Cell["\<\
Linear-threshold algorithms can only learn linear classifiers\
\>", "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.600714471074191*^9}, {3.602833354873616*^9, 
   3.602833355236471*^9}, {3.6028334403676987`*^9, 3.602833455544221*^9}}],

Cell[TextData[{
 "often ",
 StyleBox["data is not linearly separable",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.6007144774623413`*^9}, {3.600716512327129*^9, 
   3.600716512611807*^9}, {3.602833363913081*^9, 3.602833370984408*^9}, {
   3.602838091588932*^9, 3.602838115934087*^9}}],

Cell[TextData[{
 "idea: ",
 StyleBox["non-linearly map the vectors ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], " ", "\[Element]", " ", "X"}], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" into a new Feature Space ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CurlyPhi]", "(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], " ", ")"}], " ", "\[Element]", " ", "F"}], 
   TraditionalForm]],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.600714491384302*^9}, {3.600714580091835*^9, 
   3.600714596546316*^9}, {3.6007165160803757`*^9, 3.6007165178660173`*^9}, 
   3.601638818529951*^9, {3.602833383049767*^9, 3.6028334141033773`*^9}, {
   3.602838131124936*^9, 3.60283813157803*^9}}],

Cell[TextData[StyleBox["samples become linearly separable in F",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.6007144950132093`*^9}, {3.6007145731761827`*^9, 
   3.6007145737115393`*^9}, {3.602833417274975*^9, 3.602833417717861*^9}, {
   3.602838143819334*^9, 3.602838145739509*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
0f2KWgpIdwDMBSh5S4Lr3unTp/fs2VPW3cjuTAEAAMhcjGPoz549i46OnjNn
jhjeScOTdKePkZGR/0tC5DpaCgBMFni2WzYHDx6sW7duUFCQluSviBsNAABW
guhwVZCfPHnyiy++YIcZtrpv2bKFv4WlHQBTRqajqu+pLLsGzB2qgZ88eVKl
SpX9+/fTLcadBQAAK0GNJ0ZbCe2uJTUNwcHBPXv2JNGeJ08e2tK+JGB3Slh4
ADALEhISIiMjszsXIMPo27fvxIkT1SOwpQAAgDWgzjbVDBHGqLlfvXp14cKF
Sbe///77N2/eZOmOaVAACLoOrBi6Hzx4EBERkV2Cil9SNsaSxrOzs5s0aRIf
5C1lDC+yWcAPmNwsqpY3bdoUEhKifgsrCgBAS+7C6yoEagj4uKyhjJ6+Diqx
MWPG1KhR49ChQ3Iw1dFM02w3xe+db/GxY8eqVq1K0n3lypWakmf+9iV3X1Kq
8Wdekl4s/5oS6CZ97ZHquq+2ero2zjTLH5gX/Dipw1VEXFxc69at+ZXRlNoy
C9DV27du3Xrrrbfo/f3oo48uX76camJgmrxoPtHTp081+D4BAAykumzHjRs3
tm7dyvuqxQYSSCCha2NjkzNnzlKlSh08eNCYQC1PE2w3KXt0NzmTEmema9eu
LVu25PYi7dOgKGXa57HK8yZHdFrolVB7lzoNLx8Rfx5kFPy88RNLDxi9MiSV
W7RoIQmy2CIqXdebN2/yFJW8efP+9ddfmjIikPW5Aq8EK3Oqo6QmpPslch2j
nwAAI6qVkgX8zJkzK1SoEB4erkoyoHLlypXcuXNTW0kN5TvvvHPr1i0qRp1t
xJSbS9U2KE18fHy8n5+flqTk1SjuL2k1jPb2tEh3LWU7FRcXl46wGP+XjJaa
VQqL0YCMRX3UecfLy8vW1rZMmTLR0dH8QmWxvuK3hv7U39+/QIECVB1RpeTh
4SEDprqcA1NDfWy4Ct20aVNkZCTtiOVEnaMEAACaoUJISEioWbNmrly57t27
Jwch4I2MHDlS4ihWqVJFLS7G9OMAkHKWHKpZfSUPluDg4JiYGDnDy58TWQdQ
tp6enmPHjtUpjTRy48aN6dOnP378WEtNqCNEHshAVL8yfownTJhAr3/BggX3
7t2bxSEZ1beV9h89esS6ndi9e7fqJIZXwMTheo+lO/W56tatGx4eLt9yv0yD
bgcAKOj8CqgJKFq0KNX/c+fOVQfsUP/roOq0e/fuvGhRzpw5GzZsKPWtdHNM
trJVdbLOYUZQE7zoPJSG+i9TpkxJYw9FbYZof+nSpR999NG8efNeVbfzeWJj
Y1u0aNGgQQMS8Jqy+LuaDIZ38PrIIJE665Ne+dKlS9esWXPo0KFyMGuM27qx
Leo7U6XNCzHs2bNHQ2h380GGHcPCwpo3b863j+tk3WRVAADQUqpxrit27txZ
rFgxao/atGmjS2yyKjTrEaFbq1YtmyRIvXft2pUtz1rWTlJLN6oTuOzTRUnm
0yKn69evX6dOHfV6X64WpDGaMWNGxYoVeWJv+jRGQkICbZ2dnUn8qxOE8aCC
jEXVTvx0+fr6du7cuX379rNmzWrbti07mGlJr0zWqGXxE6O8hYeHv//++2xv
37Rpk5byHTSLusg6UWdMjB8/3snJSUuuDI2R+dELAwBoKb0L2K9j9OjRzZo1
a9WqVceOHS9duqQl1So6MyZgqEwCAgKqVavGJndiyZIlYWFhWsqljkyz6MRk
p86BUh8GMVa/PJ6Mg4NDo0aNtOQpzGk0vM+cOTNPnjweHh6vcwmS2+7du9PZ
jh8/zkpeS7nCFNo78Pqo45KkhF1cXObMmTNixAgvL69OnTpt3rxZXqWsn50a
FBRUoUIFXkNt48aNcjzLOhEgfcjdOXLkSO3atYODg7WUz4+xQgMAAN2Qa79+
/RYvXjxgwIDhw4dPnjxZbYlQdahIydy+fbtcuXJs7LKzs9uyZcvzlGR3Tl+I
OudUZzBXs/3y+966dev//Oc/mhIy+l/t7SQtChQoQM+YzkfrlVAHCGJjY0uX
Lv3WW29dv36dWzo8qyADEbkuT2zLli1v3brVu3fvM2fOrFmzhh5mNWXW5EdC
kZBuL1++PFdBGzZskL4zXCxMBJ3znqbUlrSNiIho3749T0ww5fYCAGAiqDaZ
PXv29O/ff9u2bbQ9cuRIs2bN+DjqfyNqEEJ3d/e3336b280iRYrs379fU9Sv
mNxFG5tpP0geA9V738HBoUaNGpJGvWTV6C1aIiAggDRG/vz5SfBoKcMZGQPy
yHGd5f95yvA1z549W758ORX+119/LWH6jNkGIN2ow1Jnz561t7cPDQ3t1q3b
iRMnLl68WKdOHVJfWR9Phnforz/99FNbW1t6BX7//XcNPhUmjPHWDB8+fOrU
qfIR9RUAIC2wLvrhhx88PDwOHz48YsSIhw8ftm7d2sfHR0Qa/CRVVNsI7Wzf
vj1v3rw2NjZ2dnYVKlQ4fvz4i6pfc4wozqKFtpRzfgwSExNjYmL27dv38ccf
kw6/desW6Rm+Lt1zoovQPnjwYFIX1CWURZ1UhS8e9TJJVifmVQckdb1Ikk9U
+Lly5Zo3b56EaEA8DZDh0BO1a9cuFlqk248ePco73t7e2WUvjY6Orl69OvvJ
rF27VsOSeaaHWtHJoCRVUBcuXGjQoEFQUBDXk7hfAIC0wHUIVR1NmjTx8/Mj
CcoREsaNG7d+/frszp0poi6HERsby/uTJ0/miO60pWZUpqpxa67zNVWXyTML
1L5GfHz84sWLP/zww3z58pFUyJ07d8GCBWvUqEEynpdtkjZIlDNf7O3bt0uW
LEnl4+TkpIsMHxoaGhISQn0BKs/g4GCSInSqx48f81Rf+hgYGEhf0V/HxcVx
6B72W+CThIWFUQbozJ9++qmvr6+GxcFBRiOjZvSm79y5k/bbtGnzxx9/0M78
+fMnTZqkJsts1NcqISGhXr16rNtdXFw0pbdrXpWMBaMLNyT35eHDhxcvXtRS
W5MOAACMqBbLM2fOkJqiVmnLli2DBg2iOmTz5s20oxmWpASMsUAGDhxIrWf+
/Plpa29vz6HFU10DxbwGLyRyBe3TRX3//fd58uSpWbPmmjVrypYtW6lSpYkT
J5J0z5kzZ8+ePe/evSu/kuvlZ4zLp0iRIitXrpTSYxv+1q1bq1WrRoXWvHnz
eknUr1+/bt2606ZNo283bNjQokWLRo0a0ZH//Oc/9C8k8vnn4nvcvn17ygCH
MFXLHE0heH2ko03dyV69evFSax06dPDy8qLj586dc3BwyMoaUtct7dSpE/vJ
9OnTx+yG86wBdXBWfPxkLBK3DADwqlAdMn/+fBI8tO/q6jp48GCqW0ihdenS
RWIbQreriGM218NsdQ8LC/vuu+9IPebOnZu2nTt35ppZVLqEgDYvVMfyHj16
cK8kPj6e1DjLbDq+bds2Hmv4+uuv6ckxTlC9d+8eiXxKULhwYQnbKIZBEkJU
XDJgwcbDH3/8MSgoiEO1L1u2jL8i1XT48GGduzvBHjgE5UeX5ywoImDZyPN2
/fp10sZ8sGvXrp6enlqSW1fjxo3PnDmTZf1x3VNNDz8HpG3YsGFcXJxmmAMC
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
R8jUYFgAAGQ0z5U1sqXKXbx48fDhw42OBxbfNJsU1BR27NiRh6pp27p16+jo
aDVgi9wONA3WgCqEniWRjpOoHlnSEXj5qcSVy+gEYlUhp1LV7U2bNt2yZYs6
uSPbxSpl49q1a2+++aaNjU3OnDnnz5+f7nnfdF1xcXF8xLgAnPHWq77cFv9g
yMXy63P//n17e/srV65IAqNjFQAAZCwST2bhwoWOjo5qHFpJkF15s05CQ0Pr
168vfqTOzs5asvSSuwPRbg2oI+/yGqZ9nrKqt/mB4d+m5Y2WedPqeaQTIWLe
4ucXGGV5WFgYSbVt27ap72C2FwLJSOpQfPHFF+yF3rlz5/RVEUZPtpeb0NVn
zBrGX3Rd4AEDBkyYMEFLunaOi/s8eeJ8tnflAAAWhnHC+7Jly0aMGGHxDbEp
I77u9+/fr1ChQq5cuThg8syZM7WUCwwhXoGVwNpYU9bqSrsbrc4KqtoJ5Wz/
egbxnUh19V6LfwhTnZfavHnz3bt3m6AwowqcQ8qoaxm/EupCqHIk1TG+54YV
txkTLJYMRO3/+vr6duzY0cfHR31IXidYFgAAvASjbWTFihWjRo16yXgoyBq4
afjzzz+LFi1Kut3GxiZPnjyurq78rVVNBLNydCZTUs737t1L36nYG3nz5s3H
jh3718TGJeyps+Dl5XXq1Cn1OKsXy16vVqfbaSc0NLRly5Z79+41nRdQnpM9
e/bky5ePpDttT548+arnMQ4uqK0A9+BepOGt0H+Pekb8PqpxrtCAAgCyAK51
Sbc7OzurZhYNlU/WwvW/bHft2sXh14iSJUt6enrKfCjT0Qwg81At5HTH165d
W69evePHj//rr4yvbXR0dJ8+fT744INLly7xkX/VV6phnzS/u7t7+fLlFy1a
xPkRx61XuyRzI1Xd3qJFi/3794sh2kQqScoPyUiJ4k53Kh1nkH3jhOhUh2+e
K7z+JZg4co3sEqNiNLOjigYAZCAyoKlWtqQKRo0aZT0zjEwQcYoQabR8+XKJ
DPnOO++wwRNOMlaCThX//PPP9BisW7fu5b/S2UjpKfL39//222+/+eabR48e
8WnTLirEX5fOc+bMmQoVKowePZqeT9UUn+YLMldUjRoSEtK8efN9+/YZp/Zn
I9IL69y5M09pp85FOs4jVZAaQEZ3mapJR524mr5V2MwLKRZdmB3dIAVEOwAg
U+Gads2aNSNHjkSFk72ocfa0pFszadIk9nK3tbX96quv7t69q5nqIqogw+GZ
yGqgv/Xr16f95/ScJCQkkGL/8MMPWbSn6qZuRDe3Th5LLy+vggUL9ujRIy0n
sTyoQCIiItq1a0e6XUs58qW+kmJ/Vr0msqBqpZv7yy+/cDe/aNGiFy5c0JSa
RHvBWAxII3K76Z0KDg7WUJ4AgKxF6hzerlu3bvTo0S8aFVWtav869UZneJGA
t5pivpMELxmvlxxyGnUynW7+lGXr2F69enFEdxLw9vb2YWFh6t1RiwLdLnNE
fTu0lHpYvdGLFi3KlSsXvadqXFDVt1bEtnxFv/ruu+/s7Ow8PT211JQ2pyS9
l2oQDN0TxWmGDx9uY2Mzffp0zZqcmRkqjcjIyA4dOuzatcu47hhXUFSYPj4+
a9asGThwYLdu3SZMmLB58+Zr165xSpkOkLGvqtTPV69eLV26NEv3n3/+WVcz
QGS+JlySkydPdnV1RWECALKXtWvXqv7tukpJ4sLpNMaLME7PURcGZfthWlou
o5lIN8pvDcP0UVFRLVq0EIeZPn36iM+zbvBag1+leaL2bRn1BeEXZ+7cuXT3
N23apBkCwqjhW1UFPmXKlNy5czs4OIjnFT8zErNOfVrUKJHqEjw60/HNmzcL
FSpEp92xY4dmBVJQ142il5HKc+fOnWoauR1PnjyhXnbRokXpTjVr1oxEe/ny
5Wmftr/++mvmdXOeJ0f+iY+Pr1WrFlcUDRo04PWAjNYSkG4ePXpEHTeO2W7Z
9iIAgAnCepiqdGr3Fy1aZIwno4qBsLAwLc0WNm7IJKpkSEgInfzq1avUrEga
Vcm/KHu0vXv3LskPahDluFHhpCVL5gvdnYcPH1avXl2CunPQYAYtsgWg+kcJ
fIRfUpKLgwYNypkzJ916dVqcuB8bB7lIYJcpU4aeFlKMmuE5ISUv7xE9YNIT
VNO8yAhP7zKdtkqVKsHBwRbvgKHT7dHR0e3bt5c+CxcRb+kl/eabb/LkyUOF
06NHD54FcOPGjY8//piO5M+ff/z48c+VNe8yCl1IHxcXl9xJlC5d+u+//zY+
GBn411YINUZ0HzXUtwCALCRVZ5ilS5c6OzurDbe0xdS+r1ixomrVqr6+vvzt
y63c6jg+tRok1z/55JPevXuTeucEIiHozC+X7vRtRETE8OHDv/rqK2MIu3/1
tLEkrl+//vnnn4t0p/ulJd8I9WZZSWlYEi/xgqa7SWrwxx9/LF68ON/3vHnz
VqxYcezYsXfu3NFS9q9Vd2vaGTJkCKUvXLjw0aNH5amQN9dYCfAqmawqCfpI
vWySqWoO2Udu7dq1POfi559/lqxaqozRXVdsbGyvXr1k3SUpGSqr77//ngfF
ChQocPjwYfkJVV/s5GZnZ/fLL79oGf2S6sZlLl++XKJECX5UJH6sZjDFgHQQ
EBBQv379U6dOofsDAMgW1Dp8+fLlY8aMUVtzVUUsWrSIGoLz58+n3W7Djci5
c+cqVapELZesA6IOwacF0vYkNn766aeyZcvu379fU4IeaKnJD8tDrvfkyZNv
v/02L4mYP3/+VatWaUmCQZJlZy5BejFO/xQPqOPHj7O1tm3btt99912ePHka
NmzIy2LS6yBzVHVe03SeK1euFC1alJ4TSubv768pxnPqAJLybNeuXdeuXdu3
b9+pUyfap5N37Njx7t27gYGBAwcObNWqFf1jjRo1ateuvXnzZi2lU5aHhwdJ
U1tbW8pbZGRklhVUtqB7reh169GjB+l2nQzeuXOnTEIpVarUkydPJOoOdbGl
u12mTBkeOszYt1Vi/nBdQbePo8rQPdWUbl0G/qMVQgV4//596rTKkX+1OwEA
QMbyf8nrlRO//fabbvhPdHtiYuKSJUuoIbh48aKWhvpfwoz7+PhQO+Xg4MBW
Pl0AQ3bKfUm9p/rDxMbGjhw5Ml++fNRict7E1CxnS0cJmAUyfkFs3769cOHC
vB5T8eLFjx49qqa07EVwLBuZ9CHO6jdu3Hj//fdJfU2aNElL8m+nm87+7Y0b
N2YduGbNGi3lNG3emTFjhsQg4i6zvGhRUVEuLi7U76ME9FKz2vzggw9cXV3p
LdOS1vwiuU4HixUrRi8d6Xz+IZviKXu+vr7vvvsuZ0Dn6W15DjO66i4hIaFz
587sJ6Ml1z9UpI0aNeIONW2rVq0qvWkqLk9PT9HtuXLl+vXXX7mcMwqpDLVk
q8icOXM4J9SDkAU9wesjTVsa52cBAEDmsW7dusmTJ2up6XZi2bJlpBV5fDCN
8cP9/f0/+eQTat/ZCVaku05gp6X24zRPnjx57733SKyeOXNGU+yHVlJ/crnR
VS9cuFBkQOXKle/cuUMHU51pCMwC9W2S5/np06ekD+kWkyBkB7P58+fTxy1b
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
2rHcYI3omTNnzp075+/vD8F18+bNixcvXrt2DacYCyAxwgEBATdNBAYGPnjw
wG62AgFBraioQu3atduyZQudxipIpNI9I1SqwLzl8ePHkydPLlKkSBoTaH1g
782bN1+6dCkblvNdbNNumF4fU6dOnT59eoy11UdoVByn9+/f37Zt2+rVq9eu
Xbt///6IiAg1W7bs5Uw2bdpE+s/BgwcnuY8sSIoYNGgQVX6gYcOG6CDUyklI
SCczABogGhdG066IGnVm6sqVKy1atBg6dChtq2o1/LMLVrPTsx4+fNirV68c
OXL89ttvqm7f+RTY2bNnMfDhjlvN3Hn5BQLBy4AqwW7cuNG/f//ixYtnz569
QYMGtWrV8vDwyJUr14cffhgUFGS915VmS2IB7Lp06dK0BfOMGTO0pW3q/Lu6
QcatW7eqVav26quvFixYsLAJBEBFULCDBw/irvfff79cuXKIyZcvX9GiRZcv
X65pMAQCu0A9IX375s2bOSaJ8naC2pBDQ0Npw5dKlSpNnDgRraZYsWJeXl6g
zaAxHTt2ZNWZtpXSkydPunbtSjyHF7Jxk2TCj0HBnDlzqlatmjlzZjTAihUr
YlAAUoEGqNJ1Hg7QVL6fn1/evHmRMwqDpm1Ivy94mUAvExkZibEqVXtUPAxF
yZzbiGuInjD9BVHoZcuWoTx//PGHc2NRtTlzCQMDA1u1atWoUSNuPpphvCOQ
mgvNFvc2bdrU39+fG7Vd9b4KXDp58qSnp+fFixeFtwsE7gBusBjOo5fPkCFD
6tSpJ02aRJE0tQ2+XapUqVOnThmKcu/ftlmIC+IDINvWMmjaA9YSbN26FaUi
wk8bSWAcwQtk7ty54+3tjXiQB8jD6OhoVXMoEGhQKwY4aps2bVTebk3j/lB7
fwqDtPfu3RuNol69ejTcLlmyJIa66Lvnz59PTjYaN25MXuOMuJuZnjt3DlSc
2trq1atjbX7n1OZ57do1NGFargL5EBIScvv2bVo6lyVLlhEjRtC0l1UfeO/e
PfT+lPn06dMNMZURvGSgEhJZpTWqwMcff2xYvCclAG/nJ65atQrF2LZtm4ty
hhd3x9qWcv/000/g7apbNuflZ4oO2v/jjz+iwfIlbdiunXLJibdb16UKBIJE
AQmE8PDwZs2akVKifPnytDgdePToEXe1b731Fq2L0eyEDadyg5ONHTs2VapU
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
Sfu26sdUL7Hy03q0WyS2lOYAuwGM903VPLWf8mzQ3tFumGCt9q7k7OIf/LcF
VpuPtWpZoWXi6Feqp507dyZBV7VqVVV94UoJNb+O1syd5Mb/FGlIDw9xtHnz
5tGjR/fp0wfyc+jQobt37ybZq2alPosV+IKkhVhlvcOjR4/Yn4wmK5zc7uTS
C2+Mdh/x/Jm4Eq+1X2tjd14Su7k5F4BGXOHj6vs8B1zsvxjxvj4ncL38Tj7s
s5E3q2C0fnZHolstv91fZjex87eLN4HdbJ2X81/BxUy0L+YobLdi37p1q0mT
Jq/YMGzYMIonrbu2dEv7pPSXIYvOnDkzd+5cdEBg719//fXKlSsvXbrE67AM
B960Yl+O3lvzugYh+cYbb9AmU6odvka81VKp4VibXLVriRprUjWIZeu3ZVmt
yYRYhaKouan98v/Z4KSNu+JELtZm7KS5ttBeliNVVSG9mt331WK0KsqDGq0l
aq+AsGrExSnt8hMrDY6NT9hqFdVRYvUv2F0Por5XrI2hUeEdPd3uRzYU+Wb9
FNbv7ChnuyVkv08MR2TAWgBXBJRWT9Riq/9aExTWpmS9XS2k3Y/jOrid8qlK
zlHObt26kR8t8HZ1q2i7xXNOpWItgz7nZVPz5xZEPnhv3Ljx+eefN2vWrHr1
6iNHjty5c+f9+/fVG59a3EgKkgTUSkISgzb/+vPPPw3HOg1H9d9um7I+7t9S
UCeJn0F74yTeeQ6xSrdoTaY1AUfPtfuIpwpcucWaP4e1V7N2SbGOeyUnX8PR
K1PYbhf8r35xvB0la//srrVRX9l5Prw/hfPyWBOozcTFymM4qAaO0lg7X46P
90EaeMMj7Xc7UuzE+xbO03OZVcqBMqDjKFOmDLqzdOnS4fjJJ5/QJVdc16ps
FnliFLBx48bJkyf37NnTy8sLZP7y5ctqSaxV6IVT9/+Z4MzPnj1boECBRYsW
nTZx4sSJQ4cOHTt2DPEYbpw6dcrPz+/8+fO4hDDFIIyriLx48SIGIFeuXLl2
7doNGwICAgIDA+/cuYOAv78/Ely/fj04OBgyGUOY8PBwdMdPnjwJDQ2NiooK
CwtDJIX/MhETE4MjGAUCuIr0uBQSEnLdxB0TN03gY2K4gU4cj8NzUQZ6NC7R
cxGDz4viIYzA1atXKYC3OGuCXuekCQSOHDlyyMQRExzGN6FXPmoCd+H7YLyD
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
    "], {{0, 461}, {
    1000, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  AspectRatio->Full,
  BaseStyle->"ImageGraphics",
  ImageSize->{485.4, 235.},
  ImageSizeRaw->{1000, 461},
  PlotRange->{{0, 1000}, {0, 461}}]], "Output",
 CellChangeTimes->{3.6006800700300913`*^9},
 TextAlignment->Center,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyNnQvc79WU/7/n9zzPeZ5z7yqX7lGpCLnkUkmEiMKRoohpphqRyoQhjJlh
CpUitzQxhBAhMZfIkAkTajJm5Mht5DrGmJvz/L7//V57ffZe+/v7nv5+r9c5
v+f3vey99rqvtdfe+8gTzzr5pNNOPOuU552462PPOPH0k0953pm7Hv7CM9Kl
uRVdt+KHXdf9dNeOv/v0p//3mT59url+eXm590834Ve6Np1O7Xr67uzOKv6z
6928XeAJf2o7e7X7TH1kof+Xf/mX/m1ve1t/66239ps3bx401C2p9f5jH/tY
/5a3vKW/4YYb+p/97Ge6vm1u00HxDlPX6f+Jwx1vzNm1+XiNryX+WBx5fqG+
pevpWvpYE0v8NRk8wq/JSDfp31wdedvk4uB5/4w3vYWhjfWZPgul40n5awxb
A4hW8deG8lpufGUDYGhidGD5l17OdzcMecK+f/3rX/ef/vSn+9e+9rX9pZde
2t9yyy39f/7nf5b7fOA3A+Xxo2RVN/bImsEj/FpdgBgiL49sBN35sS3gq/a2
fqS9pYL6pXFWqHJiXc+P0ab0Pz8iT1tA+GTwqH9vFaAIcmwETYP/zW9+0994
4439n/zJn5iQ/cM//EP/05/+dBStM13wL4nukguMmg+AzrzihJ0ULKX3XPoj
0RPRuLemtKl78Xdss5dqWjkqt7mj2FAls+EfJtuCFC40gxoOLLaX/p4fuRwI
Fi4HeR4VtPB2ub00Mjh7eaGOs5Gd3A+DWxhrOI++WzNkmtLG//3f//X/+7//
O0KarcaALN///d//3f/d3/1d/5rXvKa/4IIL+ptvvtnk2jmG9g4PIIsDvOuu
KixHTSVPgGSAwDvlsnFChZdbYRoqxumIRZhK9a4ZuTFmCBuQRxVSfXOkm7Eb
QzgLnkaVw9i7LYgjuqg+uhAVyEAQxlEFXe9sXEH4qhrAMaCj3/72t1kcEsfB
h9/85jf7iy++uP+zP/uz/stf/nL/i1/8Ysjrrqdyi0vGuV/4whdMwfGNB/H3
f//39vb1118/x49uf/6029zi0S9+8Yv2G134pS99ya7xN6/zzev6zf3Pfe5z
/Wc+85n+s5/9rLXFb4zatdde2//1X/+1Xf+bv/mb/lOf+pQJxXXXXWfPc43v
v/3bv+0/+clP9tdcc4198xx/0wZ/X3XVVf3VV19t9/hW2+ndhP3UShow7dIv
vyb8Sp4FY2AswKkx8v35z38+vZGgSnTlPdrlO8E6R8OJFnQB6IAHKKnb1Gy6
mu4BNo87CN5l6jw1+pWvfEXoSdfSXwmMr3/96/0//dM/9d/4xjfs39e+9jXT
B+k7PZP+SmDcdNNNhmbeTW3oVSAHajAmzAEa45sH7uRWgCFA+cQnPlFGA8hc
E6YiVsEgLmX67UPaqQwlUk398ffHP/5xa5/3PvCBD/Qf/OAH+w9/+MPW1pVX
XmnXrrjiCrv+3ve+t/+rv/oru/a+972vf//7398/+tGP7o844oj+sssus/uX
X3556vtd73pXYtJ3v/vd/GXuD//0d3qG5yc0lgZLMzTLv9SNXZ7QQZIRHn3q
U5/a77zzzv3zn/98aeysYVvTn4g1YTjpMoNhAAwktT4BktQY8DEmjYsxvOc9
75mzvhatf/oDRNx3nIZ3vOMd/dvf/vY0pPRXaiL9bc9wPb1qz731rW+d8HDy
Ly+66CJ+2m1e5zdGAuG+8MIL7alJ/+Y3vzk1xTV1wz+6NayAwpX2k974l15Q
E/ntba1VWjzvvPP6888/v/+Lv/gL+82jb3rTm/o3vvGN9gz39Df3geid73xn
ocNf/uVfJuYGP9vab/AC2sAR3/CHJJO/xWcf+chHjG+QcPiLe1yDmOm9NMrE
NU5c2oUX0r8JHSdJgxUAg3/8ndmGe6vtUdhJbJNA1DNGQgc9s8ga0yFwpzgS
yGmCRzVS6JH+Tl0kdE5AewKNGzwAERLaJuAmce0ll1xil/jW39AU7KW/RT4Q
CW3UCo8kGk3AfrfO6PD617++0AP8Q6tzzz230OR1r3tdf8IJJ/QrVqzoX/3q
Vyfo0p0k99zTMzzPu6Ihbb3hDW/oH/jAB/Zr166138Ev6NxO5NAAQ2Pf3/72
t613DBCByL/+67/a39/5zncm/NGt72+77bb+u9/9bv+9732v/+EPf9j/6Ec/
6n/yk5/Y31z793//d4tp/ud//qf/r//6r/5Xv/oV3xNEstva3CI8bsLYf/u3
f+t//OMf27d+0xzft99+uzXH9/e//337BroEURr/P//zP6cRACFqlW9MI9Dy
O921a9/61rfsHZ6eAHSimtoTuPz9gx/8QLBMcP0nQJOY75e//KXBIxjTc6md
9FaShE2bNgnG3PaEnwk/4Cahy74BiA74m05ih7x8xx13aPATkDjpf/7znyeS
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\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Kernel Methods", "Subsection",
 CellChangeTimes->{{3.600520519924685*^9, 3.6005205222261477`*^9}, {
  3.602831429535729*^9, 3.602831447150442*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Kernel methods",
  FontSlant->"Italic"],
 " allow to perform the mapping "
}], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.600714544042794*^9}, {3.602838171315783*^9, 
   3.602838173248671*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["without  explicitly defining the feature space ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["F", TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"]
}], "Subitem",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.600714546622877*^9}, {3.6007146057575808`*^9, 
   3.600714606377276*^9}, {3.6028381955327253`*^9, 3.6028381988546553`*^9}}],

Cell[TextData[StyleBox["without explictly performing the mapping",
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998461259623`*^9}, {
   3.6005197554764442`*^9, 3.600519852482081*^9}, {3.600519892420924*^9, 
   3.6005199293763533`*^9}, 3.600519997453315*^9, {3.600520031766438*^9, 
   3.600520098523343*^9}, {3.600520221605938*^9, 3.600520222008019*^9}, {
   3.6005202556530447`*^9, 3.600520371355136*^9}, {3.6005204574178047`*^9, 
   3.6005204999975557`*^9}, {3.600520539060892*^9, 3.60052054057265*^9}, 
   3.600520817666068*^9, {3.60067956304256*^9, 3.60067980293848*^9}, {
   3.600679842850666*^9, 3.60067999337082*^9}, {3.6006800587681828`*^9, 
   3.60068005986121*^9}, {3.600680107219975*^9, 3.600680126672*^9}, {
   3.6007144710643253`*^9, 3.600714556623231*^9}, {3.6007146093040533`*^9, 
   3.600714609512288*^9}}]
}, Open  ]]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.602848229747683*^9, 3.6028482523407717`*^9}, 
   3.602848288037512*^9}],

Cell[CellGroupData[{

Cell["Kernel function", "Subsubsection",
 CellChangeTimes->{
  3.600520117616384*^9, {3.602838577749707*^9, 3.6028385789838467`*^9}}],

Cell[TextData[{
 "A function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{"\[CenterDot]", 
      RowBox[{",", " ", "\[CenterDot]"}]}], ")"}]}], TraditionalForm]]],
 " that for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x",
     FontWeight->"Bold"], ",", " ", 
    RowBox[{
     StyleBox["z",
      FontWeight->"Bold"], " ", "\[Element]", " ", "X"}]}], TraditionalForm]]],
 " satisfies"
}], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, 
   3.599899918703438*^9, {3.599900060655603*^9, 3.5999000719742527`*^9}, {
   3.600521449431007*^9, 3.600521474971568*^9}, {3.6028489833480597`*^9, 
   3.602848990039383*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"k", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", " ", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}], " ", "=", " ", 
    RowBox[{"\[CurlyPhi]", 
     RowBox[{
      RowBox[{"(", 
       StyleBox["x",
        FontWeight->"Bold"], ")"}], "\[CenterDot]", " ", "\[CurlyPhi]"}], 
     RowBox[{"(", 
      StyleBox["z",
       FontWeight->"Bold"], ")"}]}]}], ","}],
  FontSize->36]], "DisplayFormula",
 CellChangeTimes->{3.600519871893436*^9, 3.600521484232815*^9, 
  3.602833044246069*^9, 3.60283825164189*^9}],

Cell[TextData[{
 "where \[CurlyPhi] : x \[RightArrow] \[CurlyPhi](x) \[Element] F is a \
mapping from ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 " to an Hilbert space ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]]],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, 
   3.599899918703438*^9, {3.599900060655603*^9, 3.599900104759665*^9}, {
   3.5999001615641317`*^9, 3.5999001634212217`*^9}, {3.6005199520162573`*^9, 
   3.600519971664825*^9}, 3.6005200236061497`*^9, {3.600520399904098*^9, 
   3.600520400837484*^9}, {3.600521444500123*^9, 3.6005214648852882`*^9}, {
   3.6006799286419353`*^9, 3.600679942970479*^9}, {3.600680170362831*^9, 
   3.6006802684922028`*^9}, {3.60071469638372*^9, 3.600714701097761*^9}, {
   3.602833081342185*^9, 3.602833097183975*^9}, {3.602838236798883*^9, 
   3.602838246682712*^9}, {3.602848278810768*^9, 3.602848285610173*^9}, {
   3.602848986349375*^9, 3.602848995926139*^9}}],

Cell[TextData[{
 "with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CurlyPhi]", 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", "x"}], TraditionalForm]],
  FontWeight->"Bold"],
 ", ",
 StyleBox["the simplest",
  FontWeight->"Bold"],
 " example of ",
 StyleBox["kernel",
  FontWeight->"Bold"],
 " function: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", " ", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}], " ", "=", " ", 
    RowBox[{
     StyleBox["x",
      FontWeight->"Bold"], "\[CenterDot]", 
     StyleBox["z",
      FontWeight->"Bold"]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.5884003684209633`*^9, 3.588400428710943*^9}, {
   3.5884006005723763`*^9, 3.588400629312437*^9}, {3.588400662167811*^9, 
   3.588400662738809*^9}, {3.588400705516869*^9, 3.5884007539141912`*^9}, {
   3.588400825942787*^9, 3.588400843157497*^9}, {3.588400893227042*^9, 
   3.58840089926121*^9}, {3.5884009355838223`*^9, 3.588401051387847*^9}, {
   3.588401153597197*^9, 3.588401164076635*^9}, {3.588401223482829*^9, 
   3.5884012381997833`*^9}, {3.588401305112268*^9, 3.5884013876851997`*^9}, {
   3.588408696784808*^9, 3.588408698545323*^9}, {3.5889436278914213`*^9, 
   3.588943721963121*^9}, {3.5889437834876537`*^9, 3.588943791888619*^9}, {
   3.588943937459249*^9, 3.588943938303256*^9}, {3.588943981847172*^9, 
   3.588944013410884*^9}, {3.588944048079698*^9, 3.5889440502488413`*^9}, {
   3.588944141318069*^9, 3.588944220082452*^9}, {3.588960639754219*^9, 
   3.5889607348492317`*^9}, {3.588960787147244*^9, 3.588960930630892*^9}, {
   3.588960997318163*^9, 3.588961008176413*^9}, {3.58896107899542*^9, 
   3.588961086665382*^9}, {3.599899826281513*^9, 3.5998998660442123`*^9}, 
   3.599899918703438*^9, {3.599900060655603*^9, 3.599900104759665*^9}, {
   3.5999001615641317`*^9, 3.5999001634212217`*^9}, {3.6005199520162573`*^9, 
   3.600519971664825*^9}, 3.6005200236061497`*^9, {3.600520399904098*^9, 
   3.600520400837484*^9}, {3.600521444500123*^9, 3.6005214648852882`*^9}, {
   3.6006799286419353`*^9, 3.600679942970479*^9}, {3.600680170362831*^9, 
   3.6006802684922028`*^9}, {3.60071469638372*^9, 3.6007147077922153`*^9}, 
   3.601638967245*^9, {3.601639002448772*^9, 3.601639003323289*^9}, {
   3.6016390543060827`*^9, 3.6016390620186996`*^9}, {3.602838284652533*^9, 
   3.6028382868323603`*^9}, {3.6028383320593157`*^9, 3.602838421863496*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Constructing kernels.", "Subsubsection",
 CellChangeTimes->{{3.6005208743915157`*^9, 3.600520889399968*^9}, {
  3.6005211310135317`*^9, 3.6005211312860518`*^9}, {3.60052123028054*^9, 
  3.600521231853421*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "3"], TraditionalForm]]],
 " be kernel functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "+"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "\[CenterDot]", ")"}], TraditionalForm]]],
 " a real function, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", ":", 
    RowBox[{"X", "\[RightArrow]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontWeight->"Bold"], TraditionalForm]]],
 " a symmetric p.s.d. matrix. The following functions are also kernels:"
}], "Item",
 CellChangeTimes->{{3.6005215470135736`*^9, 3.60052181043848*^9}, 
   3.600521960289501*^9, {3.600680350688184*^9, 3.600680352079165*^9}, {
   3.6028386964885273`*^9, 3.602838791626074*^9}, {3.6028390144822474`*^9, 
   3.6028390173146067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"k", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["k", "1"], 
       RowBox[{"(", 
        RowBox[{
         StyleBox["x",
          FontWeight->"Bold"], ",", 
         StyleBox["z",
          FontWeight->"Bold"]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["k", "2"], 
       RowBox[{"(", 
        RowBox[{
         StyleBox["x",
          FontWeight->"Bold"], ",", 
         StyleBox["z",
          FontWeight->"Bold"]}], ")"}]}]}]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["\[IndentingNewLine]",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{"k", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], "=", 
     RowBox[{
      SubscriptBox["ak", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["\[IndentingNewLine]",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{"k", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], "=", 
     RowBox[{
      SubscriptBox["k", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}], 
      SubscriptBox["k", "2"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[",",
    FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}], "=", 
    RowBox[{"f", 
     RowBox[{"(", 
      StyleBox["x",
       FontWeight->"Bold"], ")"}], "f", 
     RowBox[{"(", 
      StyleBox["z",
       FontWeight->"Bold"], ")"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}], "=", 
    RowBox[{
     SubscriptBox["k", "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Phi]", 
        RowBox[{"(", 
         StyleBox["x",
          FontWeight->"Bold"], ")"}]}], ",", 
       RowBox[{"\[Phi]", 
        RowBox[{"(", 
         StyleBox["z",
          FontWeight->"Bold"], ")"}]}]}], ")"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], "\[Transpose]"}], 
     StyleBox["Bz",
      FontWeight->"Bold"]}]}]}], 
  StyleBox["\[LineSeparator]",
   FontWeight->"Bold"]}]], "DisplayFormula",
 CellChangeTimes->{{3.600521821322874*^9, 3.600521954172388*^9}, {
  3.6028390065919237`*^9, 3.6028390113823338`*^9}}],

Cell["Combining these functions:", "Item",
 CellChangeTimes->{{3.602839118156332*^9, 3.602839137164053*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["k", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], ")"}], "                                               ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"Polynomial", " ", "kernel"}], ")"}], "Text",
     FontWeight->"Bold"]}]}], 
  StyleBox[",", "Text"], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["x",
       FontWeight->"Bold"], ",", 
      StyleBox["z",
       FontWeight->"Bold"]}], ")"}]}], "=", 
   RowBox[{"exp", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["k", "1"], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["x",
         FontWeight->"Bold"], ",", 
        StyleBox["z",
         FontWeight->"Bold"]}], ")"}]}], ")"}], "                                           ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["Ex", "Text",
          FontWeight->"Bold"], "po", 
         StyleBox["n", "Text",
          FontWeight->"Bold"], "en", 
         StyleBox["t", "Text",
          FontWeight->"Bold"], "ia", 
         StyleBox["l", "Text",
          FontWeight->"Bold"]}]], " ", "kernel"}], ")"}], "Text",
     FontWeight->"Bold"]}]}], 
  StyleBox[",", "Text"], "\[IndentingNewLine]", 
  RowBox[{
   StyleBox[
    RowBox[{"k", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["x",
        FontWeight->"Bold"], ",", 
       StyleBox["z",
        FontWeight->"Bold"]}], ")"}]}],
    FontSize->36], 
   StyleBox["=",
    FontSize->36], 
   RowBox[{
    StyleBox["exp",
     FontSize->36], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         SuperscriptBox["\[Sigma]", "2"]]}], 
       SuperscriptBox[
        RowBox[{"\[LeftDoubleBracketingBar]", 
         RowBox[{
          StyleBox["x",
           FontWeight->"Bold"], "-", 
          StyleBox["z",
           FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "2"]}], 
      ")"}],
     FontSize->36], "             ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"Gaussian", " ", "kernel"}], 
      StyleBox[")",
       FontSlant->"Italic"]}], "Text",
     FontWeight->"Bold"]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.600522034296327*^9, 3.600522125572928*^9}, {
  3.600522159916383*^9, 3.600522173394792*^9}, {3.602838853380142*^9, 
  3.6028389489570923`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Kernel Support Vector Machines", "Subsection",
 CellChangeTimes->{{3.60052057586366*^9, 3.6005205832622623`*^9}, {
   3.600680463724263*^9, 3.600680475089451*^9}, 3.6028435542453012`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["max", 
    RowBox[{"{", 
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], "}"}]], 
   StyleBox[
    RowBox[{"1", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "-", 
  RowBox[{
   FractionBox["1", "2"], 
   StyleBox[
    RowBox[{"\[Alpha]", "\[Transpose]"}],
    FontWeight->"Bold"], 
   StyleBox["H\[Alpha]",
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["s",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox["t",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["\[Alpha]",
    FontWeight->"Bold"]}], "\[GreaterEqual]", 
  StyleBox["0",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["\[Alpha]",
      FontWeight->"Bold"], 
     StyleBox["\[Transpose]",
      FontWeight->"Plain"]}], 
    StyleBox["y",
     FontWeight->"Bold"]}], 
   StyleBox["=",
    FontWeight->"Plain"], 
   StyleBox["0",
    FontWeight->"Bold"]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.60017364117669*^9, 3.6001736928282843`*^9}, {
   3.6001737746175947`*^9, 3.60017385821412*^9}, {3.600175162048126*^9, 
   3.600175164631028*^9}, {3.600677610391242*^9, 3.600677616531293*^9}, 
   3.6028306941095877`*^9, {3.6028308541816273`*^9, 3.602830865997205*^9}, 
   3.602833315023664*^9},
 CellTags->"eq:hard_margin_svm_Dual"],

Cell[CellGroupData[{

Cell[TextData[{
 "the ",
 StyleBox["SVM",
  FontWeight->"Bold"],
 " the training procedure ",
 StyleBox["depends on data only via the inner products",
  FontWeight->"Bold"],
 " of the training instances, encoded in the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SubscriptBox["y", "i"], 
     SubscriptBox["y", "j"], 
     StyleBox[
      RowBox[{
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "i"], "\[CenterDot]", 
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"]}],
      FontColor->RGBColor[1, 0, 0]]}]}], TraditionalForm]]],
 ". "
}], "Item",
 CellChangeTimes->{{3.6005205906937237`*^9, 3.60052060725213*^9}, {
  3.600520734263096*^9, 3.6005208082720633`*^9}, {3.60052231125207*^9, 
  3.60052244716322*^9}, {3.600522602075625*^9, 3.600522631488048*^9}, {
  3.600679822312314*^9, 3.600679824486844*^9}, {3.6006805005202703`*^9, 
  3.600680513041226*^9}, {3.600714890495755*^9, 3.600714909885195*^9}, {
  3.60071495799186*^9, 3.60071499487772*^9}, {3.6028395561656933`*^9, 
  3.602839558417111*^9}}],

Cell[TextData[{
 "substitute inner products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "i"], "\[CenterDot]", 
    SubscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "j"]}], TraditionalForm]]],
 " in ",
 Cell[BoxData[
  FormBox[
   StyleBox["H",
    FontWeight->"Bold"], TraditionalForm]]],
 ", with evaluations of a kernel function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "(", 
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ",", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "j"]}], ")"}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.6005205906937237`*^9, 3.60052060725213*^9}, {
  3.600520734263096*^9, 3.6005208082720633`*^9}, {3.60052231125207*^9, 
  3.60052244716322*^9}, {3.600522602075625*^9, 3.600522631488048*^9}, {
  3.600679822312314*^9, 3.600679824486844*^9}, {3.6006805005202703`*^9, 
  3.600680513041226*^9}, {3.600714890495755*^9, 3.600714920069785*^9}, {
  3.600714960623106*^9, 3.600714960813829*^9}, {3.600714998856392*^9, 
  3.600715007143305*^9}, {3.6016393542404547`*^9, 3.60163936050208*^9}, {
  3.602839501555801*^9, 3.602839502655776*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubscriptBox["H", 
   RowBox[{"i", ",", "j"}]], "=", 
  RowBox[{
   SubscriptBox["y", "i"], 
   SubscriptBox["y", "j"], 
   StyleBox["k",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{
     StyleBox["(",
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{
      SubscriptBox[
       StyleBox["x",
        FontWeight->"Bold"], "i"], 
      StyleBox["\[CenterDot]",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       SubscriptBox[
        StyleBox["x",
         FontWeight->"Bold"], "j"],
       FontColor->RGBColor[1, 0, 0]]}], 
     StyleBox[")",
      FontColor->RGBColor[1, 0, 0]]}],
    FontColor->RGBColor[1, 0, 0]]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.602839533038898*^9, 3.602839572589192*^9}}],

Cell["during prediction we have:", "Item",
 CellChangeTimes->{{3.6005205906937237`*^9, 3.60052060725213*^9}, {
  3.600520734263096*^9, 3.6005208082720633`*^9}, {3.60052231125207*^9, 
  3.60052244716322*^9}, {3.600522602075625*^9, 3.600522631488048*^9}, {
  3.600679822312314*^9, 3.600679824486844*^9}, {3.6006805005202703`*^9, 
  3.600680513041226*^9}, {3.600714890495755*^9, 3.6007149283518763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["f", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], ",", "b"}]], 
    RowBox[{"(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold"], "i"], ")"}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold"]}], " ", "+", "b"}], "=", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["\[Alpha]", "j"], 
       SubscriptBox["y", "j"], 
       StyleBox["k",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "j"], ",", 
          SubscriptBox[
           StyleBox["x",
            FontWeight->"Bold"], "i"]}], ")"}],
        FontColor->RGBColor[1, 0, 0]]}]}], "+", "b"}]}]}], 
  ","}]], "DisplayFormula",
 CellChangeTimes->{{3.6005224511976852`*^9, 3.6005225680942383`*^9}, {
   3.600522616237176*^9, 3.600522616683543*^9}, 3.60171422418618*^9, {
   3.601724596184161*^9, 3.60172461119352*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Kernel Methods (code)", "Subsection",
 CellChangeTimes->{{3.600520519924685*^9, 3.6005205222261477`*^9}, {
  3.602831429535729*^9, 3.602831434073917*^9}, {3.6028314674618073`*^9, 
  3.602831474335726*^9}}],

Cell[TextData[{
 StyleBox["Efficient computation ",
  FontWeight->"Bold"],
 "of the Gaussian kernel (",
 StyleBox["without any loop",
  FontWeight->"Bold"],
 " on the samples)"
}], "Text",
 CellChangeTimes->{{3.600522181091859*^9, 3.6005222713596487`*^9}, {
  3.600604367460373*^9, 3.600604407425941*^9}, {3.600633626266096*^9, 
  3.60063365830182*^9}, {3.6006804528314857`*^9, 3.6006804530787573`*^9}, {
  3.600714824775869*^9, 3.600714826847787*^9}, {3.602839165555691*^9, 
  3.6028391859374733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"computeGaussianKernel", "[", 
    RowBox[{"fTr_", ",", "fTe_", ",", "sigmaSQ_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"D", ",", "K"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"D", "=", 
       RowBox[{"computeDist", "[", 
        RowBox[{"fTr", ",", "fTe"}], "]"}]}], ";", "\n", 
      RowBox[{"K", "=", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "sigmaSQ"}], ")"}]}], " ", "D"}], "]"}]}]}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.600631896186021*^9, 3.6006319280829906`*^9}, {
  3.601727652387744*^9, 3.601727668598174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"computeDist", "[", 
    RowBox[{"fTr_", ",", "fTe_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "d", ",", "nTr", ",", "nTe", ",", "NTr", ",", "NTe", ",", "P", ",", 
       "D"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTr", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTr", "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nTe", ",", "d"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "fTe", "]"}]}], ";", "\n", 
      RowBox[{"P", "=", 
       RowBox[{"fTr", ".", 
        RowBox[{"Transpose", "[", "fTe", "]"}]}]}], ";", "\n", 
      RowBox[{"NTr", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Norm", "/@", "fTr"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nTe"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"NTe", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Norm", "/@", "fTe"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nTr"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"D", "=", 
       RowBox[{"NTr", "+", "NTe", "-", 
        RowBox[{"2", "P"}]}]}]}]}], "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.60172765978225*^9, 3.601727671625559*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Kernel Methods (demo)", "Subsection",
 CellChangeTimes->{{3.600520519924685*^9, 3.6005205222261477`*^9}, {
  3.602831429535729*^9, 3.602831434073917*^9}, {3.6028314674618073`*^9, 
  3.602831492798812*^9}}],

Cell["\<\
examples using a Gaussian kernel with the 1-norm soft-margin SVM\
\>", "Item",
 CellChangeTimes->{{3.600522576351549*^9, 3.600522581762825*^9}, {
   3.600522634902485*^9, 3.600522689377336*^9}, {3.600632077360847*^9, 
   3.600632141805462*^9}, {3.600633696941916*^9, 3.600633704520831*^9}, {
   3.600680543354413*^9, 3.600680558709915*^9}, 3.600680591255466*^9, {
   3.600715021101766*^9, 3.6007150521999063`*^9}, {3.60283969030789*^9, 
   3.602839691461073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6006048285290947`*^9, 3.600604832214456*^9}, {
   3.60060492573352*^9, 3.60060493283676*^9}, {3.60063205504002*^9, 
   3.600632055382025*^9}, 3.637589977531822*^9, {3.63759001902461*^9, 
   3.637590038464654*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   Background->GrayLevel[0.85],
   BaseStyle->{"Palatino", Bold, 16},
   DisplayFunction->Identity,
   Epilog->{{
      PointSize[Large], 
      RGBColor[1, 0, 0], 
      PointBox[
       Dynamic[SVM`xPos]]}, {
      PointSize[Large], 
      RGBColor[0, 0, 1], 
      PointBox[
       Dynamic[SVM`xNeg]]}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  EventHandlerTag[{
   "MouseDragged" :> (Private`pt$679015 = MousePosition["Graphics"]; 
     Private`p$679015 = Union[
        Flatten[{
          Partition[
           Flatten[Private`p$679015], 2], 
          Union[
           Partition[Private`pt$679015, 2]]}, 1]]; 
     If[$CellContext`s$679015 > 0, SVM`xPos = Union[
         Flatten[{SVM`xPos, Private`p$679015}, 1]], SVM`xNeg = Union[
         Flatten[{SVM`xNeg, Private`p$679015}, 1]]]; Null), 
    "MouseClicked" :> (
     Private`p$679015 = {}; $CellContext`s$679015 = $CellContext`s$679015 \
(-1)), PassEventsDown -> Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{3.6375900396981*^9, 3.6375908993187437`*^9},
 TextAlignment->Center]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 "the ",
 StyleBox["linearKernel", "Code"],
 " function has been replaced with the ",
 StyleBox["gaussianKernel ", "Code"],
 "(\[Sigma] automatically estimated)"
}], "Item",
 CellChangeTimes->{{3.600715102433484*^9, 3.600715123482657*^9}, {
   3.6007167916080627`*^9, 3.6007168085874577`*^9}, {3.602839703034733*^9, 
   3.6028397296315403`*^9}, {3.602839775565064*^9, 3.602839776295499*^9}, 
   3.602848394525269*^9, {3.602851118086865*^9, 3.602851123610387*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe"}], "}"}], "=", 
   RowBox[{"getTrTeData", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"runSVMExperiment", "[", 
    RowBox[{"fTr", ",", "yTr", ",", "fTe", ",", "yTe", ",", 
     RowBox[{
      RowBox[{"train1NormSoftMarginSVM", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        SuperscriptBox["10", "c"]}], "]"}], "&"}], ",", 
     RowBox[{"gaussianKernel", "[", "fTr", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "6", ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5998242191740923`*^9, 3.599824229454277*^9}, {
   3.5998252407905684`*^9, 3.599825254780796*^9}, {3.599826597734229*^9, 
   3.5998266032226143`*^9}, {3.599827838897214*^9, 3.599827844368305*^9}, {
   3.599834921347526*^9, 3.599834931257943*^9}, 3.599837534064529*^9, {
   3.599837586265244*^9, 3.599837587236148*^9}, 3.599838156127186*^9, {
   3.599838278004527*^9, 3.599838283845191*^9}, {3.599838320952675*^9, 
   3.5998383940135202`*^9}, {3.6001818323648357`*^9, 3.600181839037133*^9}, 
   3.600184631598147*^9, {3.600193595816077*^9, 3.600193596704954*^9}, {
   3.600414786940836*^9, 3.6004147882576027`*^9}, {3.6006048392177057`*^9, 
   3.60060484081664*^9}, {3.600605120330772*^9, 3.600605236489294*^9}, {
   3.600605278496801*^9, 3.600605370975388*^9}, {3.6006054467664337`*^9, 
   3.6006056337560787`*^9}, {3.600608340073489*^9, 3.600608403369323*^9}, {
   3.600608784741392*^9, 3.600608800561816*^9}, {3.6006138946792793`*^9, 
   3.600613914949931*^9}, {3.600613981095159*^9, 3.6006140038278933`*^9}, {
   3.600631031797982*^9, 3.600631046883752*^9}, {3.600631169968791*^9, 
   3.6006312022651997`*^9}, {3.600632284493023*^9, 3.600632381592064*^9}, {
   3.600632716638606*^9, 3.600632720569006*^9}, {3.600632883363166*^9, 
   3.600632887269599*^9}, 3.6006341300235977`*^9, 3.601639533801893*^9, {
   3.602851128407134*^9, 3.602851133680023*^9}, {3.6200194459539633`*^9, 
   3.620019446398508*^9}, {3.620019501070015*^9, 3.6200195020080223`*^9}, 
   3.620019533790153*^9, {3.620019570024688*^9, 3.620019584017026*^9}, {
   3.637590969266549*^9, 3.6375909696962214`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 6, 0.5}}, Typeset`size$$ = {
    288., {151., 152.11230468750006`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`c$762491$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$762491$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      SVM`runSVMExperiment[$CellContext`fTr, $CellContext`yTr, \
$CellContext`fTe, $CellContext`yTe, 
        SVM`train1NormSoftMarginSVM[#, #2, 10^$CellContext`c$$]& , 
        SVM`gaussianKernel[$CellContext`fTr]], 
      "Specifications" :> {{$CellContext`c$$, 0, 6, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{324., {183., 186.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6006139182977867`*^9, {3.600613991571281*^9, 3.600614006333933*^9}, {
   3.600631166222625*^9, 3.600631204383501*^9}, 3.600632361422915*^9, 
   3.6006324038610373`*^9, 3.600632706012581*^9, 3.600632790117234*^9, 
   3.600632828274665*^9, 3.6006328883788433`*^9, 3.6006341308833113`*^9, 
   3.600673411795135*^9, 3.60163953726974*^9, 3.6017272630004387`*^9, 
   3.6027756354476833`*^9, 3.602775685430979*^9, 3.6028466045062323`*^9, 
   3.6028510353397083`*^9, 3.602851081854478*^9, 3.6028511629958153`*^9, 
   3.6028540848520527`*^9, 3.6028541276050243`*^9, 3.60285603683678*^9, {
   3.620019425180311*^9, 3.620019453849463*^9}, 3.62001950638*^9, 
   3.620019542900207*^9, {3.62001957761075*^9, 3.62001959213536*^9}, 
   3.620022224577335*^9, {3.637590826289487*^9, 3.637590863927352*^9}, {
   3.637590967087267*^9, 3.637590977566481*^9}, 3.6375912004148207`*^9},
 TextAlignment->Center]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gaussianKernel", "[", "input_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaSQ", ",", "slack", ",", "myGaussianKern"}], "}"}], ",", 
     "\n", 
     RowBox[{
      RowBox[{"sigmaSQ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "input", "]"}], ">", "1"}], ",", 
         RowBox[{"estimateSigmaSQ", "[", "input", "]"}], ",", "input"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"myGaussianKern", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{"computeGaussianKernel", "[", 
        RowBox[{"x", ",", "y", ",", "sigmaSQ"}], "]"}]}], ";", "\n", 
      "myGaussianKern"}]}], "\n", "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.6017276000411158`*^9, 3.601727602065743*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"estimateSigmaSQ", "[", "fTr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaSQ", ",", "D"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"D", "=", 
       RowBox[{"computeDist", "[", 
        RowBox[{"fTr", ",", "fTr"}], "]"}]}], ";", "\n", 
      RowBox[{"sigmaSQ", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Mean", "[", "D", "]"}], "]"}]}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.601727614152747*^9, 3.6017276247657137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<ML3_data.mat\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"fTr", ",", " ", "yTr", ",", " ", "fTe", ",", "yTe"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData["\<\"ML3_data.mat\"\>"], "Output",
 CellChangeTimes->{3.620022244255011*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".\tConclusion"
}], "Section",
 CellChangeTimes->{{3.5998944518809967`*^9, 3.599894477451784*^9}, {
  3.599894511898885*^9, 3.5998945381286793`*^9}, {3.599894796440259*^9, 
  3.599894836715193*^9}, {3.59989581442519*^9, 3.5998958434354467`*^9}, {
  3.599895893572297*^9, 3.599895897664892*^9}, {3.59989594574212*^9, 
  3.59989596213556*^9}, {3.5998959933365173`*^9, 3.5998959950405684`*^9}, {
  3.599899418576304*^9, 3.599899421983275*^9}},
 CellTags->"conclusions"],

Cell[CellGroupData[{

Cell[TextData[{
 "the notebook presents ",
 StyleBox["several max-margin and SVM classifiers",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
   3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
   3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
   3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
   3.6007152321821632`*^9}, 3.601727447157138*^9, {3.602851782749627*^9, 
   3.60285178602607*^9}}],

Cell[TextData[{
 "both in the ",
 StyleBox["linear and non-linear",
  FontWeight->"Bold"],
 " setting"
}], "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
   3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
   3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
   3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
   3.600715236748958*^9}, {3.601639650427*^9, 3.601639650576536*^9}, 
   3.6028399167684927`*^9}],

Cell[TextData[{
 "it exploits the ",
 StyleBox["Quadratic Programming solver",
  FontWeight->"Bold"],
 " of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to implement most of the proposed the algorithms"
}], "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
  3.6007152443565187`*^9}, {3.601639647819872*^9, 3.601639649014447*^9}, {
  3.601639765503561*^9, 3.601639766849638*^9}, {3.6028517923647957`*^9, 
  3.602851792636477*^9}}],

Cell[TextData[{
 StyleBox["dynamic interactions",
  FontWeight->"Bold"],
 ", as",
 StyleBox[" dataset drawing",
  FontWeight->"Bold"],
 " and direct ",
 StyleBox["manipulation of the algorithm hyper-parameters",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
  3.6007152641061277`*^9}, {3.60163965450564*^9, 3.601639693115158*^9}, {
  3.601727420666532*^9, 3.601727434892847*^9}, {3.602833149380899*^9, 
  3.602833150729195*^9}}],

Cell["\<\
the implementations provided could virtually be used to address any binary \
classification problem\
\>", "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
  3.6007152753403254`*^9}, {3.6017274101648912`*^9, 3.6017274105044603`*^9}, {
  3.6028517985111628`*^9, 3.6028517987118464`*^9}}],

Cell[TextData[StyleBox["for larger scale problems:",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
  3.600715332660199*^9}, {3.601639705179058*^9, 3.6016397461545477`*^9}, {
  3.602771833110437*^9, 3.602771847540854*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["implement a ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" interfaces to existing ",
  FontWeight->"Bold"],
 "specialized and efficient ",
 StyleBox["C++ SVM implementations",
  FontWeight->"Bold"]
}], "Subitem",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
   3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
   3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
   3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
   3.600715332660199*^9}, {3.601639705179058*^9, 3.6016397461545477`*^9}, {
   3.602771833110437*^9, 3.602771868954596*^9}, 3.602772014150354*^9}],

Cell[TextData[{
 "experiment with ",
 StyleBox["(stochastic) gradient descent,",
  FontWeight->"Bold"],
 " e.g. using the ",
 StyleBox["FixedPoint[]",
  FontWeight->"Bold"],
 " ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " funcitonality"
}], "Subitem",
 CellChangeTimes->{{3.600633087076248*^9, 3.600633575187806*^9}, {
  3.60066866290123*^9, 3.600668954013122*^9}, {3.600680784775477*^9, 
  3.600680883372558*^9}, {3.600680966600589*^9, 3.60068099644777*^9}, {
  3.600681077199624*^9, 3.600681094620131*^9}, {3.6007152265061703`*^9, 
  3.600715332660199*^9}, {3.601639705179058*^9, 3.6016397461545477`*^9}, {
  3.602771833110437*^9, 3.602771875777165*^9}, {3.602771906631558*^9, 
  3.602771989810564*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.5998994728452187`*^9, 3.599899474304348*^9}}],

Cell["\<\
\t1.\tNello Cristianini and John Shawe-Taylor. An introduction to Support \
Vector Machines and other kernel-based learning methods. Cambridge university \
press, 2000\
\>", "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellChangeTimes->{{3.6016267198091307`*^9, 3.601626780317151*^9}},
 CellTags->"00004F53"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1920, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/marko/Desktop/ML3_print_final.pdf"},
TooltipBoxOptions->{TooltipDelay->Automatic},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[1164, 41, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3457, 93, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[10169, 266, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12755, 349, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[21861, 634, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[126421, 2378, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[135995, 2617, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[230872, 4228, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[242199, 4504, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[247433, 4653, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[257276, 4881, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[284539, 5465, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[296458, 5729, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[301621, 5864, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[306126, 5974, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[312556, 6105, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[317022, 6257, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[325054, 6532, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[333600, 6757, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[344004, 7024, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[348022, 7128, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[453319, 8991, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[588817, 11239, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[602181, 11514, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[610085, 11807, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[616721, 12030, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[619778, 12125, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[622709, 12211, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[630017, 12382, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[635616, 12529, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "linear_classifiers"->{
  Cell[12844, 354, 631, 12, 135, "Section",
   CellTags->"linear_classifiers"]},
 "sec:max_margin"->{
  Cell[126510, 2383, 672, 13, 135, "Section",
   CellTags->"sec:max_margin"]},
 "eq:max_margin_hard"->{
  Cell[236242, 4359, 1916, 59, 163, "DisplayFormulaNumbered",
   CellTags->"eq:max_margin_hard"]},
 "eq:1norm_svm"->{
  Cell[290625, 5581, 2538, 74, 206, "DisplayFormulaNumbered",
   CellTags->"eq:1norm_svm"]},
 "sec:svm"->{
  Cell[312645, 6110, 522, 11, 135, "Section",
   CellTags->"sec:svm"]},
 "eq:hard_margin_svm_L"->{
  Cell[315436, 6195, 1525, 55, 117, "DisplayFormula",
   CellTags->"eq:hard_margin_svm_L"],
  Cell[317705, 6276, 1814, 62, 126, "DisplayFormula",
   CellTags->"eq:hard_margin_svm_L"]},
 "eq:hard_margin_svm_Dual"->{
  Cell[326320, 6564, 1663, 60, 174, "DisplayFormulaNumbered",
   CellTags->"eq:hard_margin_svm_Dual"],
  Cell[610370, 11816, 1531, 54, 136, "DisplayFormulaNumbered",
   CellTags->"eq:hard_margin_svm_Dual"]},
 "sec:kernel_svm"->{
  Cell[453408, 8996, 582, 12, 135, "Section",
   CellTags->"sec:kernel_svm"]},
 "conclusions"->{
  Cell[630106, 12387, 509, 11, 135, "Section",
   CellTags->"conclusions"]},
 "00004F53"->{
  Cell[635805, 12537, 347, 8, 39, "Reference",
   CellTags->"00004F53"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 636843, 12567},
 {"linear_classifiers", 639563, 12628},
 {"sec:max_margin", 639665, 12631},
 {"eq:max_margin_hard", 639769, 12634},
 {"eq:1norm_svm", 639887, 12637},
 {"sec:svm", 639994, 12640},
 {"eq:hard_margin_svm_L", 640093, 12643},
 {"eq:hard_margin_svm_Dual", 640308, 12648},
 {"sec:kernel_svm", 640537, 12653},
 {"conclusions", 640634, 12656},
 {"00004F53", 640726, 12659}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 429, 11, 19, "Input",
 CellOpen->False,
 InitializationCell->True],
Cell[1011, 35, 116, 1, 46, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164, 41, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1231, 44, 971, 16, 221, "Title"],
Cell[2205, 62, 650, 16, 313, "Subtitle"],
Cell[2858, 80, 562, 8, 38, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3457, 93, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3546, 98, 179, 2, 67, "Subsection"],
Cell[CellGroupData[{
Cell[3750, 104, 628, 12, 52, "Item"],
Cell[CellGroupData[{
Cell[4403, 120, 224, 3, 32, "Subitem"],
Cell[4630, 125, 217, 3, 32, "Subitem"],
Cell[4850, 130, 315, 4, 32, "Subitem"]
}, Open  ]],
Cell[5180, 137, 1613, 49, 57, "Item"],
Cell[CellGroupData[{
Cell[6818, 190, 599, 13, 32, "Subitem"],
Cell[7420, 205, 661, 13, 34, "Subitem"]
}, Open  ]],
Cell[8096, 221, 559, 11, 52, "Item"],
Cell[8658, 234, 699, 13, 52, "Item"],
Cell[9360, 249, 748, 10, 52, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10169, 266, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[10258, 271, 117, 1, 67, "Subsection"],
Cell[CellGroupData[{
Cell[10400, 276, 349, 9, 52, "Item"],
Cell[10752, 287, 513, 11, 52, "Item"],
Cell[11268, 300, 340, 9, 52, "Item"],
Cell[11611, 311, 353, 9, 52, "Item"],
Cell[11967, 322, 267, 8, 52, "Item"]
}, Open  ]],
Cell[12249, 333, 457, 10, 163, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12755, 349, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12844, 354, 631, 12, 135, "Section",
 CellTags->"linear_classifiers"],
Cell[CellGroupData[{
Cell[13500, 370, 1304, 42, 52, "Item"],
Cell[CellGroupData[{
Cell[14829, 416, 564, 16, 34, "Subitem"],
Cell[15396, 434, 216, 6, 32, "Subitem"],
Cell[15615, 442, 294, 7, 32, "Subitem"]
}, Open  ]],
Cell[15924, 452, 466, 11, 52, "Item"]
}, Open  ]],
Cell[16405, 466, 543, 12, 41, "DisplayFormulaNumbered"],
Cell[16951, 480, 584, 20, 54, "Item"],
Cell[17538, 502, 692, 22, 54, "DisplayFormulaNumbered"],
Cell[18233, 526, 290, 4, 52, "Item"],
Cell[18526, 532, 3286, 96, 69, "DisplayFormulaNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21861, 634, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[21950, 639, 96, 1, 67, "Subsection"],
Cell[22049, 642, 976, 13, 52, "Item"],
Cell[23028, 657, 334, 11, 53, "DisplayFormula"],
Cell[23365, 670, 1092, 17, 52, "Item"],
Cell[24460, 689, 101912, 1683, 446, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126421, 2378, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[126510, 2383, 672, 13, 135, "Section",
 CellTags->"sec:max_margin"],
Cell[127185, 2398, 1397, 30, 52, "Item"],
Cell[128585, 2430, 1269, 34, 54, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[129879, 2468, 962, 26, 35, "Subitem"],
Cell[130844, 2496, 906, 23, 35, "Subitem"]
}, Open  ]],
Cell[131765, 2522, 1180, 17, 52, "Item"],
Cell[132948, 2541, 1385, 30, 92, "DisplayFormulaNumbered"],
Cell[134336, 2573, 984, 14, 52, "Item"],
Cell[135323, 2589, 623, 22, 56, "DisplayFormulaNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135995, 2617, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[136084, 2622, 307, 4, 67, "Subsection"],
Cell[136394, 2628, 92547, 1531, 431, "Text",
 CellGroupingRules->"NormalGrouping"],
Cell[228944, 4161, 617, 16, 52, "Item"],
Cell[229564, 4179, 1259, 43, 92, "DisplayFormulaNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230872, 4228, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230961, 4233, 304, 4, 67, "Subsection"],
Cell[231268, 4239, 2298, 51, 56, "Item"],
Cell[233569, 4292, 890, 27, 65, "DisplayFormula"],
Cell[234462, 4321, 1777, 36, 70, "Item"],
Cell[236242, 4359, 1916, 59, 163, "DisplayFormulaNumbered",
 CellTags->"eq:max_margin_hard"],
Cell[CellGroupData[{
Cell[238183, 4422, 2186, 43, 52, "Item"],
Cell[240372, 4467, 1766, 30, 52, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242199, 4504, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[242288, 4509, 308, 4, 67, "Subsection"],
Cell[242599, 4515, 440, 9, 52, "Item"],
Cell[243042, 4526, 2590, 70, 430, "Code",
 Evaluatable->False],
Cell[245635, 4598, 1749, 49, 356, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247433, 4653, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[247522, 4658, 355, 4, 67, "Subsection"],
Cell[247880, 4664, 474, 9, 52, "Item"],
Cell[CellGroupData[{
Cell[248379, 4677, 518, 8, 60, "Input",
 InitializationCell->True],
Cell[248900, 4687, 4798, 93, 435, "Output"]
}, Open  ]],
Cell[253713, 4783, 3514, 92, 541, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257276, 4881, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[257365, 4886, 255, 5, 52, "Item"],
Cell[257623, 4893, 253, 5, 52, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257913, 4903, 1689, 27, 93, "Input"],
Cell[259605, 4932, 14805, 250, 454, "Output"]
}, Open  ]],
Cell[274425, 5185, 2864, 82, 467, "Code",
 Evaluatable->False],
Cell[277292, 5269, 1555, 41, 282, "Code",
 Evaluatable->False],
Cell[278850, 5312, 5652, 148, 504, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[284539, 5465, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[284628, 5470, 225, 3, 67, "Subsection"],
Cell[CellGroupData[{
Cell[284878, 5477, 1827, 30, 52, "Item"],
Cell[286708, 5509, 1912, 31, 52, "Item"],
Cell[288623, 5542, 1987, 36, 52, "Item"]
}, Open  ]],
Cell[290625, 5581, 2538, 74, 206, "DisplayFormulaNumbered",
 CellTags->"eq:1norm_svm"],
Cell[CellGroupData[{
Cell[293188, 5659, 1278, 26, 85, "Item"],
Cell[294469, 5687, 945, 17, 52, "Item"],
Cell[295417, 5706, 980, 16, 52, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[296458, 5729, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[296547, 5734, 275, 3, 67, "Subsection"],
Cell[296825, 5739, 894, 12, 52, "Item"],
Cell[297722, 5753, 3850, 105, 541, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301621, 5864, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[301710, 5869, 256, 3, 67, "Subsection"],
Cell[301969, 5874, 474, 9, 52, "Item"],
Cell[CellGroupData[{
Cell[302468, 5887, 253, 5, 60, "Input",
 InitializationCell->True],
Cell[302724, 5894, 3341, 73, 435, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306126, 5974, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[306193, 5977, 253, 5, 52, "Item"],
Cell[CellGroupData[{
Cell[306471, 5986, 3021, 48, 96, "Input"],
Cell[309495, 6036, 2596, 49, 409, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312128, 6090, 259, 6, 60, "Input"],
Cell[312390, 6098, 117, 1, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312556, 6105, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[312645, 6110, 522, 11, 135, "Section",
 CellTags->"sec:svm"],
Cell[313170, 6123, 16, 0, 52, "Text"],
Cell[313189, 6125, 293, 6, 85, "Item"],
Cell[CellGroupData[{
Cell[313507, 6135, 255, 3, 67, "Subsection"],
Cell[313765, 6140, 243, 3, 52, "Item"],
Cell[314011, 6145, 1094, 38, 116, "DisplayFormula"],
Cell[315108, 6185, 325, 8, 52, "Item"],
Cell[315436, 6195, 1525, 55, 117, "DisplayFormula",
 CellTags->"eq:hard_margin_svm_L"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317022, 6257, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[317111, 6262, 279, 3, 67, "Subsection"],
Cell[317393, 6267, 309, 7, 52, "Item"],
Cell[317705, 6276, 1814, 62, 126, "DisplayFormula",
 CellTags->"eq:hard_margin_svm_L"],
Cell[319522, 6340, 632, 13, 52, "Item"],
Cell[320157, 6355, 3805, 127, 251, "DisplayFormula"],
Cell[CellGroupData[{
Cell[323987, 6486, 787, 32, 52, "Item"],
Cell[324777, 6520, 216, 5, 32, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325054, 6532, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[325143, 6537, 319, 4, 67, "Subsection"],
Cell[325465, 6543, 852, 19, 52, "Item"],
Cell[326320, 6564, 1663, 60, 174, "DisplayFormulaNumbered",
 CellTags->"eq:hard_margin_svm_Dual"],
Cell[CellGroupData[{
Cell[328008, 6628, 1845, 38, 55, "Item"],
Cell[329856, 6668, 1813, 29, 52, "Item"],
Cell[331672, 6699, 552, 10, 52, "Item"]
}, Open  ]],
Cell[332239, 6712, 1312, 39, 87, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[333600, 6757, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[333689, 6762, 214, 3, 67, "Subsection"],
Cell[CellGroupData[{
Cell[333928, 6769, 2479, 33, 52, "Item"],
Cell[336410, 6804, 997, 25, 55, "Item"]
}, Open  ]],
Cell[337422, 6832, 4395, 119, 652, "Code",
 Evaluatable->False],
Cell[341820, 6953, 437, 14, 134, "Code",
 Evaluatable->False],
Cell[342260, 6969, 1695, 49, 393, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344004, 7024, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[344093, 7029, 214, 3, 67, "Subsection"],
Cell[344310, 7034, 361, 8, 52, "Item"],
Cell[CellGroupData[{
Cell[344696, 7046, 85, 2, 60, "Input",
 InitializationCell->True],
Cell[344784, 7050, 3177, 71, 435, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348022, 7128, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[348111, 7133, 249, 9, 52, "Item"],
Cell[348363, 7144, 171, 4, 52, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348571, 7153, 3848, 57, 93, "Input"],
Cell[352422, 7212, 91760, 1527, 456, 71685, 1197, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[444197, 8742, 1862, 49, 319, "Code",
 Evaluatable->False],
Cell[446062, 8793, 7220, 193, 689, "Code",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[453319, 8991, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[453408, 8996, 582, 12, 135, "Section",
 CellTags->"sec:kernel_svm"],
Cell[CellGroupData[{
Cell[454015, 9012, 158, 2, 67, "Subsection"],
Cell[CellGroupData[{
Cell[454198, 9018, 1929, 27, 52, "Item"],
Cell[456130, 9047, 1998, 30, 52, "Item"],
Cell[458131, 9079, 2507, 47, 52, "Item"],
Cell[460641, 9128, 1993, 27, 52, "Item"]
}, Open  ]],
Cell[462649, 9158, 126107, 2074, 273, 97561, 1605, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[588817, 11239, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[588906, 11244, 153, 2, 67, "Subsection"],
Cell[CellGroupData[{
Cell[589084, 11250, 1909, 29, 52, "Item"],
Cell[CellGroupData[{
Cell[591018, 11283, 2071, 33, 32, "Subitem"],
Cell[593092, 11318, 1898, 26, 32, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[595017, 11348, 110, 2, 52, "Text"],
Cell[CellGroupData[{
Cell[595152, 11354, 133, 2, 50, "Subsubsection"],
Cell[595288, 11358, 1729, 36, 52, "Item"],
Cell[597020, 11396, 626, 21, 54, "DisplayFormula"],
Cell[597649, 11419, 2003, 33, 126, "Text"],
Cell[599655, 11454, 2465, 53, 52, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602181, 11514, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[602270, 11519, 215, 3, 50, "Subsubsection"],
Cell[602488, 11524, 1132, 38, 52, "Item"],
Cell[603623, 11564, 3590, 136, 264, "DisplayFormula"],
Cell[607216, 11702, 108, 1, 52, "Item"],
Cell[607327, 11705, 2709, 96, 167, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[610085, 11807, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[610174, 11812, 193, 2, 67, "Subsection"],
Cell[610370, 11816, 1531, 54, 136, "DisplayFormulaNumbered",
 CellTags->"eq:hard_margin_svm_Dual"],
Cell[CellGroupData[{
Cell[611926, 11874, 1140, 33, 55, "Item"],
Cell[613069, 11909, 1209, 35, 55, "Item"]
}, Open  ]],
Cell[614293, 11947, 769, 27, 41, "DisplayFormulaNumbered"],
Cell[615065, 11976, 401, 5, 52, "Item"],
Cell[615469, 11983, 1203, 41, 87, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[616721, 12030, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[616810, 12035, 211, 3, 67, "Subsection"],
Cell[617024, 12040, 503, 12, 52, "Text"],
Cell[617530, 12054, 782, 23, 171, "Code",
 Evaluatable->False],
Cell[618315, 12079, 1414, 40, 319, "Code",
 Evaluatable->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619778, 12125, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[619867, 12130, 211, 3, 67, "Subsection"],
Cell[620081, 12135, 473, 8, 52, "Item"],
Cell[CellGroupData[{
Cell[620579, 12147, 294, 5, 60, "Input"],
Cell[620876, 12154, 1772, 50, 435, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[622709, 12211, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[622776, 12214, 479, 10, 52, "Item"],
Cell[CellGroupData[{
Cell[623280, 12228, 2254, 38, 96, "Input"],
Cell[625537, 12268, 2645, 50, 409, "Output"]
}, Open  ]],
Cell[628197, 12321, 884, 24, 208, "Code",
 Evaluatable->False],
Cell[629084, 12347, 576, 17, 171, "Code",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[629685, 12368, 191, 5, 60, "Input"],
Cell[629879, 12375, 89, 1, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[630017, 12382, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[630106, 12387, 509, 11, 135, "Section",
 CellTags->"conclusions"],
Cell[CellGroupData[{
Cell[630640, 12402, 513, 10, 52, "Item"],
Cell[631156, 12414, 497, 11, 52, "Item"],
Cell[631656, 12427, 680, 15, 52, "Item"],
Cell[632339, 12444, 698, 16, 52, "Item"],
Cell[633040, 12462, 536, 9, 52, "Item"],
Cell[633579, 12473, 488, 7, 52, "Item"],
Cell[CellGroupData[{
Cell[634092, 12484, 733, 17, 32, "Subitem"],
Cell[634828, 12503, 715, 18, 32, "Subitem"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[635616, 12529, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[635705, 12534, 97, 1, 135, "Section"],
Cell[635805, 12537, 347, 8, 39, "Reference",
 CellTags->"00004F53"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
