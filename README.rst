MathSVM - A hands-on introduction to Support Vector Machines using Mathematica (c)
==========================================

|
| Copyright (c) 2015 `Marco Fornoni <http://fornoni.github.io/>`_ <marco.fornoni@alumni.epfl.ch>
|

This file is part of the MathSVM Software.

MathSVM is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License version 3 as
published by the Free Software Foundation.

MathSVM is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MathSVM. If not, see <http://www.gnu.org/licenses/>.


About
-----
Nowadays computers can be trained to perform a variety of tasks, 
traditionally associated with intelligence. Recognizing people, 
classifying webpages, recognizing human speech, performing online 
trading, are just a few examples of tasks that can be performed by 
machines. 
Behind this very diverse set of abilities there is a branch of computer 
science and artificial intelligence, called machine learning, which 
deals with the problem of constructing and studying systems able to 
learn from data. 
In a supervised machine learning setting, problems are directly 
specified by sets of input data, with associated desired outputs. The 
goal of a learning machine is then to learn a mathematical model able to
reproduce the desired output on the training data, while preserving 
generalization abilities on unseen data. This approach results to be 
very useful when the functional dependency of the output w.r.t. the 
input is not known, or is too complex to be modeled exactly.

One of the most successful machine learning tools that is widely used to
solve classification and regression problems is called 
Support Vector Machine (SVM) [1].

The goal of this notebook is to present the very basic theory of linear 
classifiers, max-margin classifiers and Support Vector Machines and to 
explore the use of Mathematica (c) to solve the optimization problems 
that arise. Following the presentation in [1], this notebook explicitly 
derives, implements and compare several classifiers, demonstrating them 
on synthetic 2D-data generated by the user, with visualizations 
involving direct hyper-parameters manipulations. 
It can thus be considered a hands-on introduction to the topic.

  [1] Nello Cristianini and John Shawe-Taylor. An introduction to 
  Support Vector Machines and other kernel-based learning methods. 
  Cambridge university press, 2000

Usage
-----
Open MathSVM.nb with Mathematica (c) and follow the instructions. The 
package includes also a short presentation notebook wrapping up the main 
contents.
